The token has not been saved to the git credentials helper. Pass `add_to_git_credential=True` in this function directly or `--add-to-git-credential` if using via `huggingface-cli` if you want to set the git credential as well.
Token is valid (permission: fineGrained).
Your token has been saved to /home/jeongseokoh/.cache/huggingface/token
Login successful
Inter SC_beam
Num Path: 10 + 5 x 2, Interval: 512
INFO 08-10 16:35:22 llm_engine.py:161] Initializing an LLM engine (v0.5.0.post1) with config: model='meta-llama/Meta-Llama-3-8B-Instruct', speculative_config=None, tokenizer='meta-llama/Meta-Llama-3-8B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir='../../hub/model/', load_format=LoadFormat.AUTO, tensor_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), seed=0, served_model_name=meta-llama/Meta-Llama-3-8B-Instruct)
INFO 08-10 16:35:26 weight_utils.py:218] Using model weights format ['*.safetensors']
INFO 08-10 16:35:30 model_runner.py:160] Loading model weights took 14.9595 GB
INFO 08-10 16:35:31 gpu_executor.py:83] # GPU blocks: 13407, # CPU blocks: 2048
INFO 08-10 16:35:35 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 08-10 16:35:35 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 08-10 16:35:44 model_runner.py:965] Graph capturing finished in 10 secs.
Model: llama3_8b is selected
Dataset: gsm8k is selected
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.36it/s, est. speed input: 1585.20 toks/s, output: 272.83 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.36it/s, est. speed input: 1585.20 toks/s, output: 272.83 toks/s]
Generation job: 0.7436795090325177 sec
[RequestOutput(request_id=0, prompt="<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nYou are a methodical mathematician, adept at solving complex mathematical problems. Conclude your explanation with the answer in a '#### {numeric answer}' format, where the answer is solely a number. Solve the problem step by step, and add '******' at the end of each step.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExample Problem example1: There are 15 trees in the grove. Grove workers will plant trees in the grove today. After they are done, there will be 21 trees. How many trees did the grove workers plant today?\nAnswer: Step 1: We start with 15 trees. ******Step 2: Later we have 21 trees. ******Step 3: The difference must be the number of trees they planted. ******Step 4: So, they must have planted 21 - 15 = 6 trees. ******Step 5: The answer is #### 6. ******<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExample Problem example2: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot?\nAnswer: Step 1: There are 3 cars in the parking lot already. ****** Step 2: 2 more arrive. ****** Step 3: Now there are 3 + 2 = 5 cars. ****** Step 4: The answer is #### 5. ******<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExample Problem example3: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?\nAnswer: Step 1: Leah had 32 chocolates and Leah’s sister had 42. ****** Step 2: That means there were originally 32 + 42 = 74 chocolates. ****** Step 3: 35 have been eaten. ****** Step 4: So in total they still have 74 - 35 = 39 chocolates. ****** Step 5: The answer is #### 39. ******<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExample Problem example4: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny?\nAnswer: Step 1: Jason had 20 lollipops. ****** Step 2: Since he only has 12 now, he must have given the rest to Denny. ****** Step 3: The number of lollipops he has given to Denny must have been 20 - 12 = 8 lollipops. ****** Step 4: The answer is #### 8. ******<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExample Problem example5: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\nAnswer: Step 1: He has 5 toys. ****** Step 2: He got 2 from mom, so after that he has 5 + 2 = 7 toys. ****** Step 3: Then he got 2 more from dad, so in total he has 7 + 2 = 9 toys. ****** Step 4: The answer is #### 9. ******<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExample Problem example6: There were nine computers in the server room. Five more computers were installed each day, from Monday to Thursday. How many computers are now in the server room?\nAnswer: Step 1: There are 4 days from Monday to Thursday. ****** Step 2: 5 computers were added each day. ****** Step 3: That means in total 4 * 5 = 20 computers were added. ****** Step 4: There were 9 computers in the beginning, so now there are 9 + 20 = 29 computers. ****** Step 5: The answer is #### 29. ******<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExample Problem example7: Michael had 58 golf balls. On Tuesday, he lost 23 golf balls. On Wednesday, he lost 2 more. How many golf balls did he have at the end of Wednesday?\nAnswer: Step 1: Michael initially had 58 balls. ****** Step 2: He lost 23 on Tuesday, so after that he has 58 - 23 = 35 balls. ****** Step 3: On Wednesday he lost 2 more so now he has 35 - 2 = 33 balls. ****** Step 4: The answer is #### 33. ******<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nExample Problem example8: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?\nAnswer: Step 1: She bought 5 bagels for $3 each. ****** Step 2: This means she spent 5 * $3 = $15 on the bagels. ****** Step 3: She had $23 in beginning, so now she has $23 - $15 = $8. ****** Step 4: The answer is #### 8. ******<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nSolve the following mathematical problem: Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market? Ensure your final answer is presented within the format '#### {numeric answer}'.<|eot_id|>", prompt_token_ids=[128000, 128000, 128006, 9125, 128007, 271, 2675, 527, 264, 1749, 950, 21651, 1122, 11, 76588, 520, 22581, 6485, 37072, 5435, 13, 1221, 866, 701, 16540, 449, 279, 4320, 304, 264, 364, 827, 314, 20173, 4320, 11923, 3645, 11, 1405, 279, 4320, 374, 21742, 264, 1396, 13, 64384, 279, 3575, 3094, 555, 3094, 11, 323, 923, 364, 6967, 6, 520, 279, 842, 315, 1855, 3094, 13, 128009, 128006, 882, 128007, 271, 13617, 22854, 3187, 16, 25, 2684, 527, 220, 868, 12690, 304, 279, 10707, 588, 13, 41234, 7487, 690, 6136, 12690, 304, 279, 10707, 588, 3432, 13, 4740, 814, 527, 2884, 11, 1070, 690, 387, 220, 1691, 12690, 13, 2650, 1690, 12690, 1550, 279, 10707, 588, 7487, 6136, 3432, 5380, 16533, 25, 15166, 220, 16, 25, 1226, 1212, 449, 220, 868, 12690, 13, 220, 6967, 8468, 220, 17, 25, 25929, 584, 617, 220, 1691, 12690, 13, 220, 6967, 8468, 220, 18, 25, 578, 6811, 2011, 387, 279, 1396, 315, 12690, 814, 39441, 13, 220, 6967, 8468, 220, 19, 25, 2100, 11, 814, 2011, 617, 39441, 220, 1691, 482, 220, 868, 284, 220, 21, 12690, 13, 220, 6967, 8468, 220, 20, 25, 578, 4320, 374, 27370, 220, 21, 13, 220, 6967, 128009, 128006, 882, 128007, 271, 13617, 22854, 3187, 17, 25, 1442, 1070, 527, 220, 18, 9515, 304, 279, 13217, 2763, 323, 220, 17, 810, 9515, 17782, 11, 1268, 1690, 9515, 527, 304, 279, 13217, 2763, 5380, 16533, 25, 15166, 220, 16, 25, 2684, 527, 220, 18, 9515, 304, 279, 13217, 2763, 2736, 13, 220, 6967, 15166, 220, 17, 25, 220, 17, 810, 17782, 13, 220, 6967, 15166, 220, 18, 25, 4800, 1070, 527, 220, 18, 489, 220, 17, 284, 220, 20, 9515, 13, 220, 6967, 15166, 220, 19, 25, 578, 4320, 374, 27370, 220, 20, 13, 220, 6967, 128009, 128006, 882, 128007, 271, 13617, 22854, 3187, 18, 25, 67961, 1047, 220, 843, 100049, 323, 1077, 13219, 1047, 220, 2983, 13, 1442, 814, 30912, 220, 1758, 11, 1268, 1690, 9863, 656, 814, 617, 2163, 304, 2860, 5380, 16533, 25, 15166, 220, 16, 25, 67961, 1047, 220, 843, 100049, 323, 67961, 753, 13219, 1047, 220, 2983, 13, 220, 6967, 15166, 220, 17, 25, 3011, 3445, 1070, 1051, 13517, 220, 843, 489, 220, 2983, 284, 220, 5728, 100049, 13, 220, 6967, 15166, 220, 18, 25, 220, 1758, 617, 1027, 35661, 13, 220, 6967, 15166, 220, 19, 25, 2100, 304, 2860, 814, 2103, 617, 220, 5728, 482, 220, 1758, 284, 220, 2137, 100049, 13, 220, 6967, 15166, 220, 20, 25, 578, 4320, 374, 27370, 220, 2137, 13, 220, 6967, 128009, 128006, 882, 128007, 271, 13617, 22854, 3187, 19, 25, 18984, 1047, 220, 508, 326, 980, 575, 3806, 13, 1283, 6688, 423, 18314, 1063, 326, 980, 575, 3806, 13, 4800, 18984, 706, 220, 717, 326, 980, 575, 3806, 13, 2650, 1690, 326, 980, 575, 3806, 1550, 18984, 3041, 311, 423, 18314, 5380, 16533, 25, 15166, 220, 16, 25, 18984, 1047, 220, 508, 326, 980, 575, 3806, 13, 220, 6967, 15166, 220, 17, 25, 8876, 568, 1193, 706, 220, 717, 1457, 11, 568, 2011, 617, 2728, 279, 2800, 311, 423, 18314, 13, 220, 6967, 15166, 220, 18, 25, 578, 1396, 315, 326, 980, 575, 3806, 568, 706, 2728, 311, 423, 18314, 2011, 617, 1027, 220, 508, 482, 220, 717, 284, 220, 23, 326, 980, 575, 3806, 13, 220, 6967, 15166, 220, 19, 25, 578, 4320, 374, 27370, 220, 23, 13, 220, 6967, 128009, 128006, 882, 128007, 271, 13617, 22854, 3187, 20, 25, 56637, 706, 4330, 23939, 13, 1789, 10280, 11, 568, 2751, 1403, 23939, 1855, 505, 813, 3450, 323, 18233, 13, 2650, 1690, 23939, 1587, 568, 617, 1457, 5380, 16533, 25, 15166, 220, 16, 25, 1283, 706, 220, 20, 23939, 13, 220, 6967, 15166, 220, 17, 25, 1283, 2751, 220, 17, 505, 3450, 11, 779, 1306, 430, 568, 706, 220, 20, 489, 220, 17, 284, 220, 22, 23939, 13, 220, 6967, 15166, 220, 18, 25, 5112, 568, 2751, 220, 17, 810, 505, 18233, 11, 779, 304, 2860, 568, 706, 220, 22, 489, 220, 17, 284, 220, 24, 23939, 13, 220, 6967, 15166, 220, 19, 25, 578, 4320, 374, 27370, 220, 24, 13, 220, 6967, 128009, 128006, 882, 128007, 271, 13617, 22854, 3187, 21, 25, 2684, 1051, 11888, 19002, 304, 279, 3622, 3130, 13, 21594, 810, 19002, 1051, 10487, 1855, 1938, 11, 505, 7159, 311, 7950, 13, 2650, 1690, 19002, 527, 1457, 304, 279, 3622, 3130, 5380, 16533, 25, 15166, 220, 16, 25, 2684, 527, 220, 19, 2919, 505, 7159, 311, 7950, 13, 220, 6967, 15166, 220, 17, 25, 220, 20, 19002, 1051, 3779, 1855, 1938, 13, 220, 6967, 15166, 220, 18, 25, 3011, 3445, 304, 2860, 220, 19, 353, 220, 20, 284, 220, 508, 19002, 1051, 3779, 13, 220, 6967, 15166, 220, 19, 25, 2684, 1051, 220, 24, 19002, 304, 279, 7314, 11, 779, 1457, 1070, 527, 220, 24, 489, 220, 508, 284, 220, 1682, 19002, 13, 220, 6967, 15166, 220, 20, 25, 578, 4320, 374, 27370, 220, 1682, 13, 220, 6967, 128009, 128006, 882, 128007, 271, 13617, 22854, 3187, 22, 25, 8096, 1047, 220, 2970, 19665, 20953, 13, 1952, 7742, 11, 568, 5675, 220, 1419, 19665, 20953, 13, 1952, 8079, 11, 568, 5675, 220, 17, 810, 13, 2650, 1690, 19665, 20953, 1550, 568, 617, 520, 279, 842, 315, 8079, 5380, 16533, 25, 15166, 220, 16, 25, 8096, 15453, 1047, 220, 2970, 20953, 13, 220, 6967, 15166, 220, 17, 25, 1283, 5675, 220, 1419, 389, 7742, 11, 779, 1306, 430, 568, 706, 220, 2970, 482, 220, 1419, 284, 220, 1758, 20953, 13, 220, 6967, 15166, 220, 18, 25, 1952, 8079, 568, 5675, 220, 17, 810, 779, 1457, 568, 706, 220, 1758, 482, 220, 17, 284, 220, 1644, 20953, 13, 220, 6967, 15166, 220, 19, 25, 578, 4320, 374, 27370, 220, 1644, 13, 220, 6967, 128009, 128006, 882, 128007, 271, 13617, 22854, 3187, 23, 25, 60387, 706, 400, 1419, 13, 3005, 11021, 4330, 9145, 2053, 369, 400, 18, 1855, 13, 2650, 1790, 3300, 1587, 1364, 617, 2163, 5380, 16533, 25, 15166, 220, 16, 25, 3005, 11021, 220, 20, 9145, 2053, 369, 400, 18, 1855, 13, 220, 6967, 15166, 220, 17, 25, 1115, 3445, 1364, 7543, 220, 20, 353, 400, 18, 284, 400, 868, 389, 279, 9145, 2053, 13, 220, 6967, 15166, 220, 18, 25, 3005, 1047, 400, 1419, 304, 7314, 11, 779, 1457, 1364, 706, 400, 1419, 482, 400, 868, 284, 400, 23, 13, 220, 6967, 15166, 220, 19, 25, 578, 4320, 374, 27370, 220, 23, 13, 220, 6967, 128009, 128006, 882, 128007, 271, 50, 4035, 279, 2768, 37072, 3575, 25, 54765, 753, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 3005, 50777, 2380, 369, 17954, 1475, 6693, 323, 293, 2094, 55404, 1354, 369, 1077, 4885, 1475, 1938, 449, 3116, 13, 3005, 31878, 279, 27410, 520, 279, 20957, 6, 3157, 7446, 369, 400, 17, 824, 7878, 37085, 19151, 13, 2650, 1790, 304, 11441, 1587, 1364, 1304, 1475, 1938, 520, 279, 20957, 6, 3157, 30, 30379, 701, 1620, 4320, 374, 10666, 2949, 279, 3645, 364, 827, 314, 20173, 4320, 24398, 128009], prompt_logprobs=None, outputs=[CompletionOutput(index=0, text="<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ", token_ids=[128006, 78191, 128007, 271, 8468, 220, 16, 25, 54765, 596, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 220, 6967], cumulative_logprob=0.0, logprobs=[{128006: Logprob(logprob=0.0, rank=1, decoded_token='<|start_header_id|>')}, {78191: Logprob(logprob=0.0, rank=1, decoded_token='assistant')}, {128007: Logprob(logprob=0.0, rank=1, decoded_token='<|end_header_id|>')}, {271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16: Logprob(logprob=0.0, rank=1, decoded_token='1')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {54765: Logprob(logprob=0.0, rank=1, decoded_token=' Janet')}, {596: Logprob(logprob=0.0, rank=1, decoded_token="'s")}, {78878: Logprob(logprob=0.0, rank=1, decoded_token=' ducks')}, {11203: Logprob(logprob=0.0, rank=1, decoded_token=' lay')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {845: Logprob(logprob=0.0, rank=1, decoded_token='16')}, {19335: Logprob(logprob=0.0, rank=1, decoded_token=' eggs')}, {824: Logprob(logprob=0.0, rank=1, decoded_token=' per')}, {1938: Logprob(logprob=0.0, rank=1, decoded_token=' day')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], finish_reason=stop, stop_reason=6967), CompletionOutput(index=1, text="<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ", token_ids=[128006, 78191, 128007, 271, 8468, 220, 16, 25, 54765, 596, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 220, 6967], cumulative_logprob=0.0, logprobs=[{128006: Logprob(logprob=0.0, rank=1, decoded_token='<|start_header_id|>')}, {78191: Logprob(logprob=0.0, rank=1, decoded_token='assistant')}, {128007: Logprob(logprob=0.0, rank=1, decoded_token='<|end_header_id|>')}, {271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16: Logprob(logprob=0.0, rank=1, decoded_token='1')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {54765: Logprob(logprob=0.0, rank=1, decoded_token=' Janet')}, {596: Logprob(logprob=0.0, rank=1, decoded_token="'s")}, {78878: Logprob(logprob=0.0, rank=1, decoded_token=' ducks')}, {11203: Logprob(logprob=0.0, rank=1, decoded_token=' lay')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {845: Logprob(logprob=0.0, rank=1, decoded_token='16')}, {19335: Logprob(logprob=0.0, rank=1, decoded_token=' eggs')}, {824: Logprob(logprob=0.0, rank=1, decoded_token=' per')}, {1938: Logprob(logprob=0.0, rank=1, decoded_token=' day')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], finish_reason=stop, stop_reason=6967), CompletionOutput(index=2, text="<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ", token_ids=[128006, 78191, 128007, 271, 8468, 220, 16, 25, 54765, 596, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 220, 6967], cumulative_logprob=0.0, logprobs=[{128006: Logprob(logprob=0.0, rank=1, decoded_token='<|start_header_id|>')}, {78191: Logprob(logprob=0.0, rank=1, decoded_token='assistant')}, {128007: Logprob(logprob=0.0, rank=1, decoded_token='<|end_header_id|>')}, {271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16: Logprob(logprob=0.0, rank=1, decoded_token='1')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {54765: Logprob(logprob=0.0, rank=1, decoded_token=' Janet')}, {596: Logprob(logprob=0.0, rank=1, decoded_token="'s")}, {78878: Logprob(logprob=0.0, rank=1, decoded_token=' ducks')}, {11203: Logprob(logprob=0.0, rank=1, decoded_token=' lay')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {845: Logprob(logprob=0.0, rank=1, decoded_token='16')}, {19335: Logprob(logprob=0.0, rank=1, decoded_token=' eggs')}, {824: Logprob(logprob=0.0, rank=1, decoded_token=' per')}, {1938: Logprob(logprob=0.0, rank=1, decoded_token=' day')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], finish_reason=stop, stop_reason=6967), CompletionOutput(index=3, text="<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ", token_ids=[128006, 78191, 128007, 271, 8468, 220, 16, 25, 54765, 596, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 220, 6967], cumulative_logprob=0.0, logprobs=[{128006: Logprob(logprob=0.0, rank=1, decoded_token='<|start_header_id|>')}, {78191: Logprob(logprob=0.0, rank=1, decoded_token='assistant')}, {128007: Logprob(logprob=0.0, rank=1, decoded_token='<|end_header_id|>')}, {271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16: Logprob(logprob=0.0, rank=1, decoded_token='1')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {54765: Logprob(logprob=0.0, rank=1, decoded_token=' Janet')}, {596: Logprob(logprob=0.0, rank=1, decoded_token="'s")}, {78878: Logprob(logprob=0.0, rank=1, decoded_token=' ducks')}, {11203: Logprob(logprob=0.0, rank=1, decoded_token=' lay')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {845: Logprob(logprob=0.0, rank=1, decoded_token='16')}, {19335: Logprob(logprob=0.0, rank=1, decoded_token=' eggs')}, {824: Logprob(logprob=0.0, rank=1, decoded_token=' per')}, {1938: Logprob(logprob=0.0, rank=1, decoded_token=' day')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], finish_reason=stop, stop_reason=6967), CompletionOutput(index=4, text="<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ", token_ids=[128006, 78191, 128007, 271, 8468, 220, 16, 25, 54765, 596, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 220, 6967], cumulative_logprob=0.0, logprobs=[{128006: Logprob(logprob=0.0, rank=1, decoded_token='<|start_header_id|>')}, {78191: Logprob(logprob=0.0, rank=1, decoded_token='assistant')}, {128007: Logprob(logprob=0.0, rank=1, decoded_token='<|end_header_id|>')}, {271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16: Logprob(logprob=0.0, rank=1, decoded_token='1')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {54765: Logprob(logprob=0.0, rank=1, decoded_token=' Janet')}, {596: Logprob(logprob=0.0, rank=1, decoded_token="'s")}, {78878: Logprob(logprob=0.0, rank=1, decoded_token=' ducks')}, {11203: Logprob(logprob=0.0, rank=1, decoded_token=' lay')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {845: Logprob(logprob=0.0, rank=1, decoded_token='16')}, {19335: Logprob(logprob=0.0, rank=1, decoded_token=' eggs')}, {824: Logprob(logprob=0.0, rank=1, decoded_token=' per')}, {1938: Logprob(logprob=0.0, rank=1, decoded_token=' day')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], finish_reason=stop, stop_reason=6967), CompletionOutput(index=5, text="<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ", token_ids=[128006, 78191, 128007, 271, 8468, 220, 16, 25, 54765, 596, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 220, 6967], cumulative_logprob=0.0, logprobs=[{128006: Logprob(logprob=0.0, rank=1, decoded_token='<|start_header_id|>')}, {78191: Logprob(logprob=0.0, rank=1, decoded_token='assistant')}, {128007: Logprob(logprob=0.0, rank=1, decoded_token='<|end_header_id|>')}, {271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16: Logprob(logprob=0.0, rank=1, decoded_token='1')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {54765: Logprob(logprob=0.0, rank=1, decoded_token=' Janet')}, {596: Logprob(logprob=0.0, rank=1, decoded_token="'s")}, {78878: Logprob(logprob=0.0, rank=1, decoded_token=' ducks')}, {11203: Logprob(logprob=0.0, rank=1, decoded_token=' lay')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {845: Logprob(logprob=0.0, rank=1, decoded_token='16')}, {19335: Logprob(logprob=0.0, rank=1, decoded_token=' eggs')}, {824: Logprob(logprob=0.0, rank=1, decoded_token=' per')}, {1938: Logprob(logprob=0.0, rank=1, decoded_token=' day')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], finish_reason=stop, stop_reason=6967), CompletionOutput(index=6, text="<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ", token_ids=[128006, 78191, 128007, 271, 8468, 220, 16, 25, 54765, 596, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 220, 6967], cumulative_logprob=0.0, logprobs=[{128006: Logprob(logprob=0.0, rank=1, decoded_token='<|start_header_id|>')}, {78191: Logprob(logprob=0.0, rank=1, decoded_token='assistant')}, {128007: Logprob(logprob=0.0, rank=1, decoded_token='<|end_header_id|>')}, {271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16: Logprob(logprob=0.0, rank=1, decoded_token='1')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {54765: Logprob(logprob=0.0, rank=1, decoded_token=' Janet')}, {596: Logprob(logprob=0.0, rank=1, decoded_token="'s")}, {78878: Logprob(logprob=0.0, rank=1, decoded_token=' ducks')}, {11203: Logprob(logprob=0.0, rank=1, decoded_token=' lay')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {845: Logprob(logprob=0.0, rank=1, decoded_token='16')}, {19335: Logprob(logprob=0.0, rank=1, decoded_token=' eggs')}, {824: Logprob(logprob=0.0, rank=1, decoded_token=' per')}, {1938: Logprob(logprob=0.0, rank=1, decoded_token=' day')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], finish_reason=stop, stop_reason=6967), CompletionOutput(index=7, text="<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ", token_ids=[128006, 78191, 128007, 271, 8468, 220, 16, 25, 54765, 596, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 220, 6967], cumulative_logprob=0.0, logprobs=[{128006: Logprob(logprob=0.0, rank=1, decoded_token='<|start_header_id|>')}, {78191: Logprob(logprob=0.0, rank=1, decoded_token='assistant')}, {128007: Logprob(logprob=0.0, rank=1, decoded_token='<|end_header_id|>')}, {271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16: Logprob(logprob=0.0, rank=1, decoded_token='1')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {54765: Logprob(logprob=0.0, rank=1, decoded_token=' Janet')}, {596: Logprob(logprob=0.0, rank=1, decoded_token="'s")}, {78878: Logprob(logprob=0.0, rank=1, decoded_token=' ducks')}, {11203: Logprob(logprob=0.0, rank=1, decoded_token=' lay')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {845: Logprob(logprob=0.0, rank=1, decoded_token='16')}, {19335: Logprob(logprob=0.0, rank=1, decoded_token=' eggs')}, {824: Logprob(logprob=0.0, rank=1, decoded_token=' per')}, {1938: Logprob(logprob=0.0, rank=1, decoded_token=' day')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], finish_reason=stop, stop_reason=6967), CompletionOutput(index=8, text="<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ", token_ids=[128006, 78191, 128007, 271, 8468, 220, 16, 25, 54765, 596, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 220, 6967], cumulative_logprob=0.0, logprobs=[{128006: Logprob(logprob=0.0, rank=1, decoded_token='<|start_header_id|>')}, {78191: Logprob(logprob=0.0, rank=1, decoded_token='assistant')}, {128007: Logprob(logprob=0.0, rank=1, decoded_token='<|end_header_id|>')}, {271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16: Logprob(logprob=0.0, rank=1, decoded_token='1')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {54765: Logprob(logprob=0.0, rank=1, decoded_token=' Janet')}, {596: Logprob(logprob=0.0, rank=1, decoded_token="'s")}, {78878: Logprob(logprob=0.0, rank=1, decoded_token=' ducks')}, {11203: Logprob(logprob=0.0, rank=1, decoded_token=' lay')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {845: Logprob(logprob=0.0, rank=1, decoded_token='16')}, {19335: Logprob(logprob=0.0, rank=1, decoded_token=' eggs')}, {824: Logprob(logprob=0.0, rank=1, decoded_token=' per')}, {1938: Logprob(logprob=0.0, rank=1, decoded_token=' day')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], finish_reason=stop, stop_reason=6967), CompletionOutput(index=9, text="<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ", token_ids=[128006, 78191, 128007, 271, 8468, 220, 16, 25, 54765, 596, 78878, 11203, 220, 845, 19335, 824, 1938, 13, 220, 6967], cumulative_logprob=0.0, logprobs=[{128006: Logprob(logprob=0.0, rank=1, decoded_token='<|start_header_id|>')}, {78191: Logprob(logprob=0.0, rank=1, decoded_token='assistant')}, {128007: Logprob(logprob=0.0, rank=1, decoded_token='<|end_header_id|>')}, {271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16: Logprob(logprob=0.0, rank=1, decoded_token='1')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {54765: Logprob(logpr/data2/jeongseokoh/jeongseokoh/inter_SC/inter_SC_llm.py:242: ClusterWarning: The symmetric non-negative hollow observation matrix looks suspiciously like an uncondensed distance matrix
  linked = linkage(jaccard_matrix, 'single')
ob=0.0, rank=1, decoded_token=' Janet')}, {596: Logprob(logprob=0.0, rank=1, decoded_token="'s")}, {78878: Logprob(logprob=0.0, rank=1, decoded_token=' ducks')}, {11203: Logprob(logprob=0.0, rank=1, decoded_token=' lay')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {845: Logprob(logprob=0.0, rank=1, decoded_token='16')}, {19335: Logprob(logprob=0.0, rank=1, decoded_token=' eggs')}, {824: Logprob(logprob=0.0, rank=1, decoded_token=' per')}, {1938: Logprob(logprob=0.0, rank=1, decoded_token=' day')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], finish_reason=stop, stop_reason=6967)], finished=True, metrics=RequestMetrics(arrival_time=1723275351.6319835, last_token_time=1723275351.6319835, first_scheduled_time=1723275351.6419654, first_token_time=1723275351.8251417, time_in_queue=0.009981870651245117, finished_time=1723275352.3745992), lora_request=None)]
Cluster Indices: {1: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 2: [], 3: [], 4: [], 5: []}
[rank0]: Traceback (most recent call last):
[rank0]:   File "/data2/jeongseokoh/jeongseokoh/inter_SC/inter_SC_llm.py", line 859, in <module>
[rank0]:     main()
[rank0]:   File "/data2/jeongseokoh/jeongseokoh/inter_SC/inter_SC_llm.py", line 844, in main
[rank0]:     results = parallel_process(context=c_dataset, question=q_dataset, answer=a_dataset, option=o_dataset, cot_ex=cot_ex, model=model, model_name=selected_model, dataset=selected_dataset)
[rank0]:   File "/data2/jeongseokoh/jeongseokoh/inter_SC/inter_SC_llm.py", line 473, in parallel_process
[rank0]:     original_answer_completion = get_completion(context=c, question=q, choices=o, cot_ex=cot_ex, model=model, model_name=model_name, dataset=dataset)
[rank0]:   File "/data2/jeongseokoh/jeongseokoh/inter_SC/inter_SC_llm.py", line 281, in get_completion
[rank0]:     generated_texts, top_k_indices, top_k_completions = generate_and_filter(True, current_conversations, n_initial, n_intermediate)
[rank0]:   File "/data2/jeongseokoh/jeongseokoh/inter_SC/inter_SC_llm.py", line 258, in generate_and_filter
[rank0]:     for i in clustered_indices[0]:
[rank0]: KeyError: 0
srun: error: n02: task 0: Exited with exit code 1
