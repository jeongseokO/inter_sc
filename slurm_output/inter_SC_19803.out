The token has not been saved to the git credentials helper. Pass `add_to_git_credential=True` in this function directly or `--add-to-git-credential` if using via `huggingface-cli` if you want to set the git credential as well.
Token is valid (permission: fineGrained).
Your token has been saved to /home/jeongseokoh/.cache/huggingface/token
Login successful
Inter SC_beam
Num Path: 10 + 5 x 2, Interval: 85
INFO 08-11 13:31:25 llm_engine.py:161] Initializing an LLM engine (v0.5.0.post1) with config: model='meta-llama/Meta-Llama-3-8B-Instruct', speculative_config=None, tokenizer='meta-llama/Meta-Llama-3-8B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir='../../hub/model/', load_format=LoadFormat.AUTO, tensor_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), seed=0, served_model_name=meta-llama/Meta-Llama-3-8B-Instruct)
INFO 08-11 13:31:29 weight_utils.py:218] Using model weights format ['*.safetensors']
INFO 08-11 13:31:33 model_runner.py:160] Loading model weights took 14.9595 GB
INFO 08-11 13:31:34 gpu_executor.py:83] # GPU blocks: 13407, # CPU blocks: 2048
INFO 08-11 13:31:38 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 08-11 13:31:38 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 08-11 13:31:47 model_runner.py:965] Graph capturing finished in 10 secs.
Model: llama3_8b is selected
Dataset: gsm8k is selected
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.36it/s, est. speed input: 1582.83 toks/s, output: 272.42 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.36it/s, est. speed input: 1582.83 toks/s, output: 272.42 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (1) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7448258629301563 sec
Added Probs: [(0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 1: [], 2: [], 3: [], 4: []}
Selected Indexes: [0, 1, 2, 3, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.60s/it, est. speed input: 736.90 toks/s, output: 36.78 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.12it/s, est. speed input: 3683.89 toks/s, output: 183.88 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.6169984720181674 sec
Added Probs: [(-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30)]
Cluster Indices: {0: [1, 3, 5, 7, 9], 1: [0, 2, 4, 6, 8], 2: [], 3: [], 4: []}
Selected Indexes: [1, 0, 3, 5, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.65s/it, est. speed input: 731.87 toks/s, output: 36.90 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.93it/s, est. speed input: 3542.05 toks/s, output: 187.81 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.720201912918128 sec
Added Probs: [(-6.862016201019287, 32), (-10.086901187896729, 33), (-4.082843989133835, 30), (-4.166400074958801, 31), (-6.862016201019287, 32), (-10.086901187896729, 33), (-6.862016201019287, 32), (-10.086901187896729, 33), (-6.862016201019287, 32), (-10.086901187896729, 33)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [0, 4, 6, 8], 2: [3], 3: [2], 4: []}
Selected Indexes: [1, 0, 3, 2, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.50s/it, est. speed input: 828.05 toks/s, output: 33.39 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.97it/s, est. speed input: 2044.33 toks/s, output: 95.57 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.75it/s, est. speed input: 3408.86 toks/s, output: 176.84 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8335795310558751 sec
Added Probs: [(-7.935717701911926, 37), (-17.452032566070557, 37), (-4.668896675109863, 37), (-6.668896675109863, 37), (-3.44379198551178, 25), (-3.44379198551178, 25), (-5.99651825428009, 25), (-12.15099549293518, 25), (-7.935717701911926, 37), (-17.452032566070557, 37)]
Cluster Indices: {0: [4, 5], 1: [0, 1, 8, 9], 2: [3], 3: [6, 7], 4: [2]}
Selected Indexes: [4, 0, 3, 6, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.08s/it, est. speed input: 1179.31 toks/s, output: 17.52 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.20it/s, est. speed input: 3438.05 toks/s, output: 72.14 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.37it/s, est. speed input: 4289.19 toks/s, output: 105.85 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.495448362082243 sec
Added Probs: [(-7.6835885643959045, 25), (-7.6835885643959045, 25), (-2.3867083340883255, 10), (-9.26170825958252, 9), (-2.3867083340883255, 10), (-9.26170825958252, 9), (-6.69931024312973, 25), (-7.94931024312973, 25), (-2.2667118906974792, 10), (-9.766712188720703, 9)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1546.98 toks/s, output: 2.40 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.49it/s, est. speed input: 4799.72 toks/s, output: 24.24 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.66it/s, est. speed input: 5999.33 toks/s, output: 42.87 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.0860239199828357 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 10), (0.0, 10), (0.0, 1), (0.0, 1), (0.0, 10), (0.0, 10), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 0]
Found EoS token, Break
completions: ["<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes muffins with 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes muffins with 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes muffins for her friends using 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes muffins for her friends using 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes 4 eggs for muffins, so she has 13 - 4 = 9 eggs left. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes 4 eggs for muffins, so she has 13 - 4 = 9 eggs left. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 * $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 * $2 = $18. ******\n\nThe answer is #### 18. ******"]
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 9.039787809946574
>> Answer lists: ['18', '18', '18', '18', '18', '18', '18', '18', '18', '18']
>> Original Correct: 18, True
>> Soft SC  Correct: 18, True
>> Golden    Answer: 18
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.43it/s, est. speed input: 1606.31 toks/s, output: 285.56 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.43it/s, est. speed input: 1606.31 toks/s, output: 285.56 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7032091720029712 sec
Added Probs: [(-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.6672241687774658, 20), (-1.6672241687774658, 20)]
Cluster Indices: {0: [0, 2, 3, 4, 5, 8, 9], 1: [1, 6, 7], 2: [], 3: [], 4: []}
Selected Indexes: [0, 1, 2, 3, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.46s/it, est. speed input: 785.79 toks/s, output: 35.00 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.43it/s, est. speed input: 3928.29 toks/s, output: 174.97 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.4677254180423915 sec
Added Probs: [(-1.4002655148506165, 26), (-2.9002654552459717, 25), (-3.522831439971924, 25), (-5.226556301116943, 26), (-1.4002655148506165, 26), (-2.9002654552459717, 25), (-1.4002655148506165, 26), (-2.9002654552459717, 25), (-1.4002655148506165, 26), (-2.9002654552459717, 25)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [0, 4, 6, 8], 2: [3], 3: [2], 4: []}
Selected Indexes: [1, 0, 3, 2, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.46s/it, est. speed input: 804.07 toks/s, output: 34.36 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.73it/s, est. speed input: 2609.83 toks/s, output: 118.75 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.79it/s, est. speed input: 3262.38 toks/s, output: 153.86 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8044739019824192 sec
Added Probs: [(-1.641285315155983, 25), (-1.641285315155983, 25), (-2.856185406446457, 25), (-8.022629231214523, 38), (-2.933805227279663, 25), (-8.788045227527618, 38), (-0.7557871341705322, 25), (-0.7557871341705322, 25), (-1.641285315155983, 25), (-1.641285315155983, 25)]
Cluster Indices: {0: [5], 1: [0, 1, 8, 9], 2: [4, 6, 7], 3: [3], 4: [2]}
Selected Indexes: [5, 0, 6, 3, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.12s/it, est. speed input: 1077.17 toks/s, output: 23.16 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.45it/s, est. speed input: 5348.11 toks/s, output: 115.80 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.134041997953318 sec
Added Probs: [(0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (-0.9016504883766174, 13), (-0.9016504883766174, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [8, 9], 4: [2, 3]}
Selected Indexes: [4, 6, 0, 8, 2]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It also takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It also takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******']
Answer Probs: [[{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=-0.22541262209415436, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=-0.22541262209415436, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 5.21615163597744
>> Answer lists: ['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']
>> Original Correct: 3, True
>> Soft SC  Correct: 3, True
>> Golden    Answer: 3
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.43s/it, est. speed input: 802.31 toks/s, output: 166.33 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.43s/it, est. speed input: 802.31 toks/s, output: 166.33 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.4343744199723005 sec
Added Probs: [(-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-1.6128770411014557, 29), (-4.473233863711357, 49)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7], 1: [9], 2: [8], 3: [], 4: []}
Selected Indexes: [0, 9, 8, 1, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.47s/it, est. speed input: 798.55 toks/s, output: 29.85 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.30it/s, est. speed input: 1342.47 toks/s, output: 66.41 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.73it/s, est. speed input: 2484.69 toks/s, output: 160.63 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.11it/s, est. speed input: 2484.69 toks/s, output: 160.63 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.3769381099846214 sec
Added Probs: [(-4.940427154302597, 36), (-4.940427154302597, 36), (-10.424155533313751, 60), (-11.546018660068512, 60), (-5.404024124145508, 18), (-5.810808479785919, 26), (-4.940427154302597, 36), (-4.940427154302597, 36), (-4.940427154302597, 36), (-4.940427154302597, 36)]
Cluster Indices: {0: [5], 1: [0, 1, 6, 7, 8, 9], 2: [3], 3: [4], 4: [2]}
Selected Indexes: [5, 0, 3, 4, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:02<00:08,  2.05s/it, est. speed input: 612.03 toks/s, output: 43.85 toks/s]Processed prompts:  60%|██████    | 3/5 [00:02<00:01,  1.69it/s, est. speed input: 1679.63 toks/s, output: 125.24 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  3.01it/s, est. speed input: 2562.80 toks/s, output: 199.10 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.10it/s, est. speed input: 2562.80 toks/s, output: 199.10 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.3989833790110424 sec
Added Probs: [(-11.203635692596436, 51), (-12.996289104223251, 46), (-14.23507346212864, 51), (-18.83130642771721, 46), (-12.984196543693542, 45), (-12.984196543693542, 45), (-19.05882726609707, 43), (-19.68430083990097, 58), (-14.0471760481596, 45), (-20.922222286462784, 45)]
Cluster Indices: {0: [4, 5, 8, 9], 1: [1, 3], 2: [6], 3: [7], 4: [0, 2]}
Selected Indexes: [8, 1, 6, 7, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.25s/it, est. speed input: 1043.91 toks/s, output: 25.70 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.15it/s, est. speed input: 1380.63 toks/s, output: 57.41 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.74it/s, est. speed input: 2554.86 toks/s, output: 133.40 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.43it/s, est. speed input: 3064.85 toks/s, output: 171.89 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.0663159530377015 sec
Added Probs: [(-5.625364065170288, 16), (-5.625364065170288, 16), (-2.904024124145508, 38), (-18.712531089782715, 36), (-13.318167209625244, 43), (-23.818002700805664, 46), (-8.277598261833191, 43), (-24.015767514705658, 39), (-5.56244683265686, 38), (-5.56244683265686, 38)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1584.08 toks/s, output: 2.41 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.81it/s, est. speed input: 2196.51 toks/s, output: 25.28 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.79it/s, est. speed input: 2219.69 toks/s, output: 57.09 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.81it/s, est. speed input: 3004.81 toks/s, output: 113.30 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.32it/s, est. speed input: 3004.81 toks/s, output: 113.30 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.1658826649654657 sec
Added Probs: [(-4.930817559361458, 35), (-4.930817559361458, 35), (-10.271316766738892, 38), (-17.205671817064285, 38), (-11.648671925067902, 17), (-28.212916031479836, 51), (0.0, 1), (0.0, 1), (0.0, 14), (0.0, 14)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [6, 7], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 2, 6, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.18it/s, est. speed input: 1557.57 toks/s, output: 2.37 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.09it/s, est. speed input: 2549.85 toks/s, output: 31.09 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.49it/s, est. speed input: 2922.95 toks/s, output: 61.00 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.66it/s, est. speed input: 3501.09 toks/s, output: 86.79 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.89064357499592 sec
Added Probs: [(-18.950948774814606, 40), (-29.025279343128204, 13), (-14.978281080722809, 25), (-42.62918043136597, 37), (0.0, 1), (0.0, 1), (-9.050416588783264, 17), (-27.478724598884583, 27), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.14it/s, est. speed input: 1495.52 toks/s, output: 2.27 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.79it/s, est. speed input: 3208.33 toks/s, output: 25.96 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.97it/s, est. speed input: 5285.99 toks/s, output: 72.26 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2721788849448785 sec
Added Probs: [(0.0, 1), (0.0, 1), (-7.887168273329735, 14), (-7.887168273329735, 14), (0.0, 1), (0.0, 1), (0.0, 15), (0.0, 15), (-3.1418703757226467, 15), (-8.39187016710639, 14)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.13it/s, est. speed input: 1481.26 toks/s, output: 2.27 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.80it/s, est. speed input: 5383.84 toks/s, output: 30.53 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.02it/s, est. speed input: 5383.84 toks/s, output: 30.53 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2568925730884075 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 15), (0.0, 15), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [0, 1], 4: [2, 3]}
Selected Indexes: [4, 6, 8, 0, 2]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is $80,000 + (150% of $80,000) = $80,000 + $120,000 = $200,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $200,000 - $130,000 = $70,000. ****** Step 5: The answer is #### 70000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is $80,000 + (150% of $80,000) = $80,000 + $120,000 = $200,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $200,000 - $130,000 = $70,000. ****** Step 5: The answer is #### 70000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: To find the new value of the house, we multiply the original value by 1.5 (since 150% is the same as 1.5 times the original value): $80,000 * 1.5 = $120,000. ****** Step 4: Since Josh spent $80,000 on the house and $50,000 on repairs, his total cost is $80,000 + $50,000 = $130,000. ****** Step 5: To find the profit, we subtract the cost from the new value of the house: $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. Josh actually lost $10,000. ****** Step 7: The answer is #### -10,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: To find the new value of the house, we multiply the original value by 1.5 (since 150% is the same as 1.5 times the original value): $80,000 * 1.5 = $120,000. ****** Step 4: Since Josh spent $80,000 on the house and $50,000 on repairs, his total cost is $80,000 + $50,000 = $130,000. ****** Step 5: To find the profit, we subtract the cost from the new value of the house: $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. Josh actually lost $10,000. ****** Step 7: The answer is #### -10,000. ******', "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: This means the new value of the house is 1.5 times the original value, so it's now 1.5 * $80,000 = $120,000. ****** Step 4: Josh originally spent $80,000 on the house and $50,000 on repairs, for a total of $80,000 + $50,000 = $130,000. ****** Step 5: He sold the house for $120,000, so his profit is $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. ****** Step 7: Josh actually lost $10,000. ****** Step 8: The answer is #### -10,000. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: This means the new value of the house is 1.5 times the original value, so it's now 1.5 * $80,000 = $120,000. ****** Step 4: Josh originally spent $80,000 on the house and $50,000 on repairs, for a total of $80,000 + $50,000 = $130,000. ****** Step 5: He sold the house for $120,000, so his profit is $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. ****** Step 7: Josh actually lost $10,000. ****** Step 8: The answer is #### -10,000. ******", '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******\n\nStep 2: The value of the house increased by 150%, so the new value is 1.5 times the original value. The original value is $80,000, so the new value is 1.5 * $80,000 = $120,000. ******\n\nStep 3: Since Josh spent $130,000 and the house is now worth $120,000, he made a loss of $130,000 - $120,000 = $10,000. ******\n\nStep 4: The answer is #### -10,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******\n\nStep 2: The value of the house increased by 150%, so the new value is 1.5 times the original value. The original value is $80,000, so the new value is 1.5 * $80,000 = $120,000. ******\n\nStep 3: Since Josh spent $130,000 and the house is now worth $120,000, he made a loss of $130,000 - $120,000 = $10,000. ******\n\nStep 4: The answer is #### -10,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is 150% of the original value, which is 1.5 x $80,000 = $120,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $120,000 - $130,000 = -$10,000. ****** Step 5: However, this is a loss, not a profit. ****** Step 6: To find the profit, we need to subtract the original value from the new value, which is $120,000 - $80,000 = $40,000. ****** Step 7: The answer is #### 40,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is 150% of the original value, which is 1.5 x $80,000 = $120,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $120,000 - $130,000 = -$10,000. ****** Step 5: However, this is a loss, not a profit. ****** Step 6: To find the profit, we need to subtract the original value from the new value, which is $120,000 - $80,000 = $40,000. ****** Step 7: The answer is #### 40,000. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {23: Logprob(logprob=0.0, rank=1, decoded_token='8')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {482: Logprob(logprob=0.0, rank=1, decoded_token=' -')}, {605: Logprob(logprob=0.0, rank=1, decoded_token='10')}, {11: Logprob(logprob=0.0, rank=1, decoded_token=',')}, {931: Logprob(logprob=0.0, rank=1, decoded_token='000')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {23: Logprob(logprob=0.0, rank=1, decoded_token='8')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {482: Logprob(logprob=0.0, rank=1, decoded_token=' -')}, {605: Logprob(logprob=0.0, rank=1, decoded_token='10')}, {11: Logprob(logprob=0.0, rank=1, decoded_token=',')}, {931: Logprob(logprob=0.0, rank=1, decoded_token='000')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 15.107461723033339
>> Answer lists: ['70000', '70000', '-10000', '-10000', '-10000', '-10000', '-10000', '-10000', '40000', '40000']
>> Original Correct: -10000, False
>> Soft SC  Correct: 70000, True
>> Golden    Answer: 70000
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.33it/s, est. speed input: 1506.58 toks/s, output: 284.55 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.33it/s, est. speed input: 1506.58 toks/s, output: 284.55 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7552470320370048 sec
Added Probs: [(-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-2.6544992923736572, 19), (-3.3412375450134277, 19)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7], 1: [8], 2: [9], 3: [], 4: []}
Selected Indexes: [0, 8, 9, 1, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.13s/it, est. speed input: 1015.76 toks/s, output: 23.81 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.52it/s, est. speed input: 1579.22 toks/s, output: 54.08 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.47it/s, est. speed input: 3573.69 toks/s, output: 151.77 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.10it/s, est. speed input: 3573.69 toks/s, output: 151.77 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6248923690291122 sec
Added Probs: [(-1.3862943649291992, 26), (-1.3862943649291992, 26), (-7.152077674865723, 30), (-7.811995029449463, 32), (-1.6557369232177734, 13), (-5.01667594909668, 14), (-1.3862943649291992, 26), (-1.3862943649291992, 26), (-1.3862943649291992, 26), (-1.3862943649291992, 26)]
Cluster Indices: {0: [5], 1: [0, 1, 6, 7, 8, 9], 2: [2], 3: [4], 4: [3]}
Selected Indexes: [5, 0, 2, 4, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.45s/it, est. speed input: 802.49 toks/s, output: 32.35 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.34it/s, est. speed input: 2211.52 toks/s, output: 99.49 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.05it/s, est. speed input: 3588.72 toks/s, output: 169.73 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6565488930791616 sec
Added Probs: [(-4.93377149105072, 22), (-5.154599279165268, 25), (-1.995374321937561, 30), (-1.995374321937561, 30), (-5.30536150932312, 28), (-7.492102324962616, 32), (-5.940858364105225, 26), (-8.112035125494003, 25), (-2.9584905356168747, 30), (-2.9584905356168747, 30)]
Cluster Indices: {0: [5, 8, 9], 1: [4], 2: [0, 1], 3: [2, 3], 4: [6, 7]}
Selected Indexes: [8, 4, 1, 2, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.14s/it, est. speed input: 1064.79 toks/s, output: 22.80 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.91it/s, est. speed input: 2988.85 toks/s, output: 75.56 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.53it/s, est. speed input: 3454.16 toks/s, output: 110.22 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.87it/s, est. speed input: 3454.16 toks/s, output: 110.22 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7533723179949448 sec
Added Probs: [(0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (-14.431455254554749, 34), (-24.56932258605957, 36), (0.0, 13), (0.0, 13), (-1.8963079452514648, 13), (-15.947615146636963, 31)]
Cluster Indices: {0: [5], 1: [6, 7], 2: [0, 1, 2, 3], 3: [8, 9], 4: [4]}
Selected Indexes: [5, 6, 0, 8, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.25it/s, est. speed input: 1526.88 toks/s, output: 2.49 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.20it/s, est. speed input: 4353.42 toks/s, output: 28.55 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.36it/s, est. speed input: 5323.58 toks/s, output: 52.30 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.1594382849289104 sec
Added Probs: [(0.0, 14), (0.0, 14), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 2, 8]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he does this for 7 days a week, the total number of meters he runs is 7 * 180 = 1260 meters. ****** Step 5: The answer is #### 1260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he does this for 7 days a week, the total number of meters he runs is 7 * 180 = 1260 meters. ****** Step 5: The answer is #### 1260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints 3 times a week. ****** Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints 3 times a week. ****** Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per day. ****** Step 2: He runs 3 days a week, so in total he runs 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per day. ****** Step 2: He runs 3 days a week, so in total he runs 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: Each sprint is 60 meters. ****** Step 3: So, the total distance he runs per week is 3 * 60 = 180 meters. ****** Step 4: The answer is #### 180. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: Each sprint is 60 meters. ****** Step 3: So, the total distance he runs per week is 3 * 60 = 180 meters. ****** Step 4: The answer is #### 180. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he runs 3 days a week, the total meters he runs in a week is 3 * 180 = 540 meters. ****** Step 5: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he runs 3 days a week, the total meters he runs in a week is 3 * 180 = 540 meters. ****** Step 5: The answer is #### 540. ******']
Answer Probs: [[{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {9390: Logprob(logprob=0.0, rank=1, decoded_token='126')}, {15: Logprob(logprob=0.0, rank=1, decoded_token='0')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {9390: Logprob(logprob=0.0, rank=1, decoded_token='126')}, {15: Logprob(logprob=0.0, rank=1, decoded_token='0')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {17048: Logprob(logprob=0.0, rank=1, decoded_token='540')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {17048: Logprob(logprob=0.0, rank=1, decoded_token='540')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 7.0825868509709835
>> Answer lists: ['1260', '1260', '540', '540', '540', '540', '180', '180', '540', '540']
>> Original Correct: 540, True
>> Soft SC  Correct: 540, True
>> Golden    Answer: 540
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s, est. speed input: 1272.02 toks/s, output: 246.60 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s, est. speed input: 1272.02 toks/s, output: 246.60 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.952555741998367 sec
Added Probs: [(-0.8395949006080627, 24), (-0.8395949006080627, 24), (-0.8395949006080627, 24), (-0.8395949006080627, 24), (-0.8395949006080627, 24), (-1.3395949006080627, 22), (-1.3395949006080627, 22), (-1.3395949006080627, 22), (-3.161880850791931, 19), (-3.7907389402389526, 29)]
Cluster Indices: {0: [5, 6, 7], 1: [9], 2: [8], 3: [0, 1, 2, 3, 4], 4: []}
Selected Indexes: [5, 9, 8, 0, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.27s/it, est. speed input: 968.31 toks/s, output: 26.79 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.00it/s, est. speed input: 3054.85 toks/s, output: 101.10 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.96it/s, est. speed input: 3646.44 toks/s, output: 127.45 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6980495150201023 sec
Added Probs: [(0.0, 17), (0.0, 17), (-6.809253215789795, 27), (-7.251251578330994, 30), (-2.676568627357483, 19), (-7.910082221031189, 33), (-3.0038580894470215, 19), (-4.0115742683410645, 19), (0.0, 17), (0.0, 17)]
Cluster Indices: {0: [5], 1: [0, 1, 8, 9], 2: [4], 3: [2, 3], 4: [6, 7]}
Selected Indexes: [5, 0, 4, 3, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.41s/it, est. speed input: 895.02 toks/s, output: 28.44 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.47it/s, est. speed input: 2490.41 toks/s, output: 86.51 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.13it/s, est. speed input: 3706.01 toks/s, output: 140.76 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.96it/s, est. speed input: 3706.01 toks/s, output: 140.76 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7029756759293377 sec
Added Probs: [(-5.0114733427762985, 18), (-8.791347205638885, 22), (-3.0865302085876465, 26), (-19.428138971328735, 23), (-2.7155274152755737, 19), (-18.678828835487366, 33), (-6.38695764541626, 24), (-9.857072174549103, 18), (-3.837664783000946, 28), (-22.61335176229477, 27)]
Cluster Indices: {0: [0, 1, 5], 1: [6, 7], 2: [3, 9], 3: [2, 8], 4: [4]}
Selected Indexes: [0, 6, 3, 2, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.31s/it, est. speed input: 974.93 toks/s, output: 27.48 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.46it/s, est. speed input: 1636.71 toks/s, output: 54.64 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.98it/s, est. speed input: 2060.48 toks/s, output: 81.12 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.72it/s, est. speed input: 2534.88 toks/s, output: 109.73 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.85it/s, est. speed input: 2737.80 toks/s, output: 133.19 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.15it/s, est. speed input: 2737.80 toks/s, output: 133.19 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.339566724956967 sec
Added Probs: [(0.0, 18), (0.0, 18), (-14.361960530281067, 57), (-15.836016297340393, 33), (-10.827795505523682, 27), (-10.990111589431763, 22), (-12.05404245853424, 26), (-15.972367286682129, 44), (-5.033793687820435, 27), (-28.571627140045166, 38)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1, 9], 4: [8]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.18s/it, est. speed input: 1139.34 toks/s, output: 21.99 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.58it/s, est. speed input: 1850.13 toks/s, output: 49.00 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.60it/s, est. speed input: 3351.07 toks/s, output: 109.44 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.40it/s, est. speed input: 3448.47 toks/s, output: 129.97 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.64it/s, est. speed input: 3448.47 toks/s, output: 129.97 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.9048519110074267 sec
Added Probs: [(-2.370384931564331, 22), (-2.370384931564331, 22), (-4.918833076953888, 26), (-6.960308030247688, 27), (0.0, 13), (0.0, 13), (-3.776789605617523, 24), (-3.776789605617523, 24), (-15.18961288034916, 35), (-15.211128741502762, 40)]
Cluster Indices: {0: [4, 5], 1: [6, 7, 8], 2: [0, 1], 3: [2, 3], 4: [9]}
Selected Indexes: [4, 6, 0, 2, 9]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.17it/s, est. speed input: 1594.86 toks/s, output: 2.35 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.30it/s, est. speed input: 1710.68 toks/s, output: 35.76 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.14it/s, est. speed input: 2396.91 toks/s, output: 66.95 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.08it/s, est. speed input: 3000.04 toks/s, output: 101.24 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.93it/s, est. speed input: 3093.36 toks/s, output: 119.05 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.32it/s, est. speed input: 3093.36 toks/s, output: 119.05 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.162459251936525 sec
Added Probs: [(0.0, 1), (0.0, 1), (-6.4028443694114685, 27), (-6.4028443694114685, 27), (-13.972560346126556, 26), (-36.64370933175087, 50), (-2.3212260603904724, 35), (-6.821225881576538, 33), (-22.874168157577515, 25), (-24.600374579429626, 31)]
Cluster Indices: {0: [5], 1: [4, 6, 7], 2: [8, 9], 3: [0, 1], 4: [2, 3]}
Selected Indexes: [5, 6, 9, 0, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.12it/s, est. speed input: 1516.98 toks/s, output: 2.23 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.77it/s, est. speed input: 2223.34 toks/s, output: 22.82 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.07it/s, est. speed input: 5537.08 toks/s, output: 86.38 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2400055519538 sec
Added Probs: [(0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: She needs to give 3 cups of feed to each of the 20 chickens. ****** Step 4: So, in total, she needs to give 20 * 3 = 60 cups of feed. ****** Step 5: She has already given 15 + 25 = 40 cups of feed. ****** Step 6: To find out how many cups of feed she needs to give in the final meal, subtract the total cups of feed she has already given from the total cups of feed needed: 60 - 40 = 20. ****** Step 7: The answer is #### 20. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: She needs to give 3 cups of feed to each of the 20 chickens. ****** Step 4: So, in total, she needs to give 20 * 3 = 60 cups of feed. ****** Step 5: She has already given 15 + 25 = 40 cups of feed. ****** Step 6: To find out how many cups of feed she needs to give in the final meal, subtract the total cups of feed she has already given from the total cups of feed needed: 60 - 40 = 20. ****** Step 7: The answer is #### 20. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: In total, she has given 15 + 25 = 40 cups of feed so far. ****** Step 4: She needs to give feed to 20 chickens, and each chicken needs 3 cups of feed. ****** Step 5: So, she needs to give 20 * 3 = 60 cups of feed in total. ****** Step 6: Since she has already given 40 cups, she needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: In total, she has given 15 + 25 = 40 cups of feed so far. ****** Step 4: She needs to give feed to 20 chickens, and each chicken needs 3 cups of feed. ****** Step 5: So, she needs to give 20 * 3 = 60 cups of feed in total. ****** Step 6: Since she has already given 40 cups, she needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******', "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: In the morning, she gives them 15 cups of feed. ****** Step 3: In the afternoon, she gives them 25 cups of feed. ****** Step 4: In total, she has given them 15 + 25 = 40 cups of feed so far. ****** Step 5: Since each chicken needs 3 cups of feed, and there are 20 chickens, the total amount of feed needed is 20 * 3 = 60 cups. ****** Step 6: Since she has already given them 40 cups, she still needs 60 - 40 = 20 cups of feed. ****** Step 7: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: In the morning, she gives them 15 cups of feed. ****** Step 3: In the afternoon, she gives them 25 cups of feed. ****** Step 4: In total, she has given them 15 + 25 = 40 cups of feed so far. ****** Step 5: Since each chicken needs 3 cups of feed, and there are 20 chickens, the total amount of feed needed is 20 * 3 = 60 cups. ****** Step 6: Since she has already given them 40 cups, she still needs 60 - 40 = 20 cups of feed. ****** Step 7: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's chickens need 3 cups of feed each, and there are 20 chickens. ****** Step 2: So, the total feed needed for the day is 20 chickens * 3 cups/chicken = 60 cups. ****** Step 3: She has already given 15 cups in the morning and 25 cups in the afternoon. ****** Step 4: To find out how many cups she needs to give in the final meal, subtract the total cups given so far from the total cups needed for the day: 60 - (15 + 25) = 60 - 40 = 20 cups. ****** Step 5: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's chickens need 3 cups of feed each, and there are 20 chickens. ****** Step 2: So, the total feed needed for the day is 20 chickens * 3 cups/chicken = 60 cups. ****** Step 3: She has already given 15 cups in the morning and 25 cups in the afternoon. ****** Step 4: To find out how many cups she needs to give in the final meal, subtract the total cups given so far from the total cups needed for the day: 60 - (15 + 25) = 60 - 40 = 20 cups. ****** Step 5: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: Each chicken needs 3 cups of feed, so the total feed needed per meal is 20 * 3 = 60 cups. ****** Step 3: In the morning, she gives 15 cups of feed. ****** Step 4: In the afternoon, she gives 25 cups of feed. ****** Step 5: So far, she has given 15 + 25 = 40 cups of feed. ****** Step 6: She still needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: Each chicken needs 3 cups of feed, so the total feed needed per meal is 20 * 3 = 60 cups. ****** Step 3: In the morning, she gives 15 cups of feed. ****** Step 4: In the afternoon, she gives 25 cups of feed. ****** Step 5: So far, she has given 15 + 25 = 40 cups of feed. ****** Step 6: She still needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******"]
Answer Probs: [[{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 12.194410593016073
>> Answer lists: ['20', '20', '20', '20', '20', '20', '20', '20', '20', '20']
>> Original Correct: 20, True
>> Soft SC  Correct: 20, True
>> Golden    Answer: 20
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.59s/it, est. speed input: 725.75 toks/s, output: 180.02 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.59s/it, est. speed input: 725.75 toks/s, output: 180.02 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.5915818740613759 sec
Added Probs: [(-0.6278396248817444, 20), (-0.6278396248817444, 20), (-0.6278396248817444, 20), (-0.6278396248817444, 20), (-2.695986747741699, 17), (-3.346505492925644, 41), (-3.346505492925644, 41), (-3.844576418399811, 28), (-4.425843507051468, 25), (-12.707034707069397, 54)]
Cluster Indices: {0: [5, 6, 7], 1: [0, 1, 2, 3], 2: [8], 3: [9], 4: [4]}
Selected Indexes: [5, 0, 8, 9, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.60s/it, est. speed input: 731.96 toks/s, output: 35.57 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.67it/s, est. speed input: 2532.29 toks/s, output: 136.58 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.57it/s, est. speed input: 3049.92 toks/s, output: 174.07 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.9526852880371734 sec
Added Probs: [(-8.701259523630142, 40), (-17.425561726093292, 43), (-7.986263334751129, 27), (-8.095078229904175, 30), (-5.445624768733978, 30), (-6.970257043838501, 30), (-5.580204486846924, 38), (-6.400652676820755, 40), (-2.4256208539009094, 30), (-4.552144348621368, 30)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [6, 7], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 3, 6, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.48s/it, est. speed input: 838.71 toks/s, output: 33.68 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.87it/s, est. speed input: 1954.75 toks/s, output: 94.37 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.62it/s, est. speed input: 2579.55 toks/s, output: 146.55 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.12it/s, est. speed input: 2579.55 toks/s, output: 146.55 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.372126742033288 sec
Added Probs: [(-9.140857636928558, 40), (-26.66715171933174, 39), (-8.624547064304352, 26), (-15.16963666677475, 59), (-0.6042400002479553, 25), (-0.6042400002479553, 25), (-1.1606130301952362, 25), (-3.410612940788269, 24), (-12.760174736380577, 40), (-28.108588457107544, 43)]
Cluster Indices: {0: [4, 5], 1: [0, 6, 7, 8], 2: [2], 3: [1, 9], 4: [3]}
Selected Indexes: [4, 6, 2, 9, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.16s/it, est. speed input: 1091.87 toks/s, output: 22.49 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.53it/s, est. speed input: 1710.88 toks/s, output: 50.82 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.80it/s, est. speed input: 3514.54 toks/s, output: 130.75 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.81it/s, est. speed input: 3514.54 toks/s, output: 130.75 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7935844730818644 sec
Added Probs: [(-6.262373447418213, 24), (-8.06003713607788, 37), (0.0, 25), (0.0, 25), (0.0, 24), (0.0, 24), (-1.007716178894043, 23), (-6.007716178894043, 25), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [0, 1], 2: [6, 7], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 1, 6, 2, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1534.15 toks/s, output: 2.41 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.87it/s, est. speed input: 2224.90 toks/s, output: 24.13 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.41it/s, est. speed input: 2689.20 toks/s, output: 51.71 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.39it/s, est. speed input: 2750.85 toks/s, output: 73.88 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  3.09it/s, est. speed input: 3177.77 toks/s, output: 112.98 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.49it/s, est. speed input: 3177.77 toks/s, output: 112.98 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.0212182250106707 sec
Added Probs: [(-4.12969708442688, 24), (-4.893830418586731, 39), (0.0, 13), (0.0, 13), (0.0, 23), (0.0, 23), (-13.215296268463135, 45), (-13.215296268463135, 45), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [8, 9], 3: [6, 7], 4: [0, 1]}
Selected Indexes: [4, 2, 8, 6, 1]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.19it/s, est. speed input: 1568.35 toks/s, output: 2.38 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.95it/s, est. speed input: 3360.50 toks/s, output: 25.69 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.21it/s, est. speed input: 4481.04 toks/s, output: 71.64 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.44it/s, est. speed input: 4481.04 toks/s, output: 71.64 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.4639926510863006 sec
Added Probs: [(-1.879570484161377, 24), (-1.879570484161377, 24), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 1], 3: [6, 7], 4: [8, 9]}
Selected Indexes: [4, 2, 0, 6, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.17it/s, est. speed input: 1492.04 toks/s, output: 2.34 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  5.17it/s, est. speed input: 5622.23 toks/s, output: 29.16 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.29it/s, est. speed input: 5622.23 toks/s, output: 29.16 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.1784766220953315 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [6, 7], 3: [8, 9], 4: [0, 1]}
Selected Indexes: [4, 2, 6, 8, 0]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of 16 glasses is: 8 glasses at $5 each = 8 x $5 = $40 8 glasses at $3 each = 8 x $3 = $24 Total cost = $40 + $24 = $64 ****** Step 4: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of 16 glasses is: 8 glasses at $5 each = 8 x $5 = $40 8 glasses at $3 each = 8 x $3 = $24 Total cost = $40 + $24 = $64 ****** Step 4: The answer is #### 64. ******', "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Let's calculate the cost of the first 8 glasses (since the 9th glass onwards will be at a discounted price). 8 glasses at $5 each will cost 8 * $5 = $40. ****** Step 2: The next 8 glasses will be at a discounted price of 60% of $5, which is 0.6 * $5 = $3. ****** Step 3: The cost of the next 8 glasses will be 8 * $3 = $24. ****** Step 4: To find the total cost, add the cost of the first 8 glasses and the next 8 glasses: $40 + $24 = $64. ****** Step 5: The answer is #### 64. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Let's calculate the cost of the first 8 glasses (since the 9th glass onwards will be at a discounted price). 8 glasses at $5 each will cost 8 * $5 = $40. ****** Step 2: The next 8 glasses will be at a discounted price of 60% of $5, which is 0.6 * $5 = $3. ****** Step 3: The cost of the next 8 glasses will be 8 * $3 = $24. ****** Step 4: To find the total cost, add the cost of the first 8 glasses and the next 8 glasses: $40 + $24 = $64. ****** Step 5: The answer is #### 64. ******", '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The first glass costs $5. ****** Step 2: Every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 3: Kylar wants to buy 16 glasses, so he will need to buy 8 regular glasses (at $5 each) and 8 discounted glasses (at $3 each). ****** Step 4: The total cost of the regular glasses is 8 * $5 = $40. ****** Step 5: The total cost of the discounted glasses is 8 * $3 = $24. ****** Step 6: The total cost of all 16 glasses is $40 + $24 = $64. ****** Step 7: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The first glass costs $5. ****** Step 2: Every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 3: Kylar wants to buy 16 glasses, so he will need to buy 8 regular glasses (at $5 each) and 8 discounted glasses (at $3 each). ****** Step 4: The total cost of the regular glasses is 8 * $5 = $40. ****** Step 5: The total cost of the discounted glasses is 8 * $3 = $24. ****** Step 6: The total cost of all 16 glasses is $40 + $24 = $64. ****** Step 7: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: One glass costs $5, but every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 2: Kylar wants to buy 16 glasses, so the first 8 glasses will cost $5 each, and the remaining 8 glasses will cost $3 each. ****** Step 3: The total cost of the first 8 glasses is 8 * $5 = $40. ****** Step 4: The total cost of the remaining 8 glasses is 8 * $3 = $24. ****** Step 5: The total amount Kylar needs to pay is the sum of the costs of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: One glass costs $5, but every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 2: Kylar wants to buy 16 glasses, so the first 8 glasses will cost $5 each, and the remaining 8 glasses will cost $3 each. ****** Step 3: The total cost of the first 8 glasses is 8 * $5 = $40. ****** Step 4: The total cost of the remaining 8 glasses is 8 * $3 = $24. ****** Step 5: The total amount Kylar needs to pay is the sum of the costs of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of the first 8 glasses is 8 x $5 = $40. ****** Step 4: The cost of the remaining 8 glasses is 8 x $3 = $24. ****** Step 5: The total cost is the sum of the cost of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of the first 8 glasses is 8 x $5 = $40. ****** Step 4: The cost of the remaining 8 glasses is 8 x $3 = $24. ****** Step 5: The total cost is the sum of the cost of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1227: Logprob(logprob=0.0, rank=1, decoded_token='64')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1227: Logprob(logprob=0.0, rank=1, decoded_token='64')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 12.595574218896218
>> Answer lists: ['64', '64', '64', '64', '64', '64', '64', '64', '64', '64']
>> Original Correct: 64, True
>> Soft SC  Correct: 64, True
>> Golden    Answer: 64
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.22s/it, est. speed input: 938.16 toks/s, output: 195.86 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.22s/it, est. speed input: 938.16 toks/s, output: 195.86 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.2184184229699895 sec
Added Probs: [(-0.9481539726257324, 16), (-0.9481539726257324, 16), (-0.9481539726257324, 16), (-1.4481539726257324, 16), (-1.4481539726257324, 16), (-1.4481539726257324, 16), (-2.6000328063964844, 34), (-2.8500328063964844, 34), (-2.8500328063964844, 34), (-4.426449298858643, 40)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5], 1: [6, 7, 8, 9], 2: [], 3: [], 4: []}
Selected Indexes: [0, 6, 1, 2, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.60s/it, est. speed input: 723.74 toks/s, output: 37.56 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.08it/s, est. speed input: 3571.34 toks/s, output: 186.02 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.6341797529021278 sec
Added Probs: [(-1.778402328491211, 30), (-1.778402328491211, 30), (0.0, 31), (0.0, 31), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30)]
Cluster Indices: {0: [0, 1, 4, 5, 6, 7, 8, 9], 1: [2, 3], 2: [], 3: [], 4: []}
Selected Indexes: [0, 2, 1, 4, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.52s/it, est. speed input: 789.72 toks/s, output: 35.42 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.11it/s, est. speed input: 3701.05 toks/s, output: 182.94 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.618277645087801 sec
Added Probs: [(0.0, 30), (0.0, 30), (-3.795611411333084, 27), (-6.079780161380768, 27), (0.0, 30), (0.0, 30), (0.0, 30), (0.0, 30), (0.0, 30), (0.0, 30)]
Cluster Indices: {0: [0, 1, 4, 5, 6, 7, 8, 9], 1: [3], 2: [2], 3: [], 4: []}
Selected Indexes: [0, 3, 2, 1, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.46s/it, est. speed input: 830.43 toks/s, output: 32.78 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.81it/s, est. speed input: 2778.23 toks/s, output: 121.86 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.81it/s, est. speed input: 3429.56 toks/s, output: 160.00 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.793938091956079 sec
Added Probs: [(-0.9848555326461792, 24), (-0.9848555326461792, 24), (-2.015432357788086, 35), (-2.015432357788086, 35), (-1.9014905095100403, 35), (-5.40149050951004, 36), (-0.9848555326461792, 24), (-0.9848555326461792, 24), (-0.9848555326461792, 24), (-0.9848555326461792, 24)]
Cluster Indices: {0: [4, 5], 1: [0, 1, 6, 7, 8, 9], 2: [2, 3], 3: [], 4: []}
Selected Indexes: [4, 0, 2, 5, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.09s/it, est. speed input: 1163.76 toks/s, output: 18.40 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.26it/s, est. speed input: 4213.44 toks/s, output: 75.33 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.18it/s, est. speed input: 5272.45 toks/s, output: 98.75 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.206264651962556 sec
Added Probs: [(-2.87969708442688, 10), (-4.12969708442688, 14), (0.0, 13), (0.0, 13), (0.0, 14), (0.0, 14), (-1.2596452236175537, 10), (-1.2596452236175537, 10), (-1.2596452236175537, 10), (-1.2596452236175537, 10)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 6, 7, 8, 9], 3: [1], 4: []}
Selected Indexes: [4, 2, 0, 1, 5]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\n\nStep 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Seattle has 20 sheep. ****** Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ****** Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ****** Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ****** Step 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Seattle has 20 sheep. ****** Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ****** Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ****** Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ****** Step 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\r\n\r\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\r\n\r\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\r\n\r\nStep 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\r\n\r\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\r\n\r\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\r\n\r\nStep 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******']
Answer Probs: [[{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.575939416885376, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=-0.825939416885376, rank=2, decoded_token='Step'), 791: Logprob(logprob=-0.575939416885376, rank=1, decoded_token='The')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=0.0, rank=1, decoded_token='\r\n\r\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=0.0, rank=1, decoded_token='\r\n\r\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 7.609560757991858
>> Answer lists: ['260', '260', '260', '260', '260', '260', '260', '260', '260', '260']
>> Original Correct: 260, True
>> Soft SC  Correct: 260, True
>> Golden    Answer: 260
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.46it/s, est. speed input: 1696.23 toks/s, output: 275.41 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.46it/s, est. speed input: 1696.23 toks/s, output: 275.41 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.6893035549437627 sec
Added Probs: [(-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-3.707822322845459, 18)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8], 1: [9], 2: [], 3: [], 4: []}
Selected Indexes: [0, 9, 1, 2, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:07,  1.78s/it, est. speed input: 664.36 toks/s, output: 37.66 toks/s]Processed prompts:  40%|████      | 2/5 [00:02<00:02,  1.10it/s, est. speed input: 1139.71 toks/s, output: 73.73 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.41it/s, est. speed input: 2849.70 toks/s, output: 198.04 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 2.0872154380194843 sec
Added Probs: [(-14.20136097073555, 39), (-16.760039508342743, 47), (-17.976228535175323, 36), (-18.14704978466034, 31), (-14.20136097073555, 39), (-16.760039508342743, 47), (-14.20136097073555, 39), (-16.760039508342743, 47), (-14.20136097073555, 39), (-16.760039508342743, 47)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [0, 4, 6, 8], 2: [3], 3: [2], 4: []}
Selected Indexes: [1, 0, 3, 2, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.27s/it, est. speed input: 958.69 toks/s, output: 26.08 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.66it/s, est. speed input: 1735.64 toks/s, output: 52.74 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.17it/s, est. speed input: 2261.26 toks/s, output: 92.62 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.32it/s, est. speed input: 2830.65 toks/s, output: 130.12 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.1712924710009247 sec
Added Probs: [(-11.998238280415535, 30), (-15.394706681370735, 51), (-7.623575448989868, 22), (-13.072678819298744, 19), (-1.1606130301952362, 16), (-3.410612940788269, 17), (-10.24505540728569, 22), (-10.762484952807426, 23), (-11.998238280415535, 30), (-15.394706681370735, 51)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [1, 9], 3: [2, 3], 4: [0, 8]}
Selected Indexes: [4, 6, 1, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.42s/it, est. speed input: 866.91 toks/s, output: 28.92 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.54it/s, est. speed input: 1616.60 toks/s, output: 60.89 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.17it/s, est. speed input: 2833.48 toks/s, output: 115.18 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.76it/s, est. speed input: 3450.73 toks/s, output: 148.42 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.823943706927821 sec
Added Probs: [(-9.330696523189545, 19), (-19.00115144252777, 22), (-2.768475353717804, 26), (-6.768475353717804, 26), (-12.852477610111237, 23), (-15.741808235645294, 35), (-3.1562888622283936, 26), (-7.1562888622283936, 26), (-17.851562798023224, 29), (-31.528457939624786, 37)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 1], 3: [6, 7], 4: [8, 9]}
Selected Indexes: [5, 2, 0, 6, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.46s/it, est. speed input: 853.93 toks/s, output: 30.79 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.47it/s, est. speed input: 1604.06 toks/s, output: 62.56 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.38it/s, est. speed input: 2409.26 toks/s, output: 115.31 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.91it/s, est. speed input: 2779.45 toks/s, output: 143.13 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.18it/s, est. speed input: 2779.45 toks/s, output: 143.13 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.3105012830346823 sec
Added Probs: [(-22.251409590244293, 27), (-29.186080992221832, 28), (-36.01693630218506, 29), (-39.60538938641548, 27), (-8.082794025540352, 23), (-15.76187014579773, 22), (-36.98085129261017, 29), (-58.97597387433052, 55), (-26.987846232950687, 41), (-28.5769035294652, 48)]
Cluster Indices: {0: [4, 5], 1: [2, 6, 7], 2: [8, 9], 3: [0, 1], 4: [3]}
Selected Indexes: [4, 6, 9, 0, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.62s/it, est. speed input: 782.59 toks/s, output: 33.86 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.36it/s, est. speed input: 1482.01 toks/s, output: 65.16 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.12it/s, est. speed input: 2059.99 toks/s, output: 99.65 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.43it/s, est. speed input: 2349.27 toks/s, output: 124.69 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.91it/s, est. speed input: 2684.70 toks/s, output: 157.15 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.05it/s, est. speed input: 2684.70 toks/s, output: 157.15 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.4491191529668868 sec
Added Probs: [(-26.258243769407272, 27), (-33.85634592175484, 28), (-8.531932085752487, 32), (-25.991460040211678, 26), (-1.5115742683410645, 38), (-1.5115742683410645, 38), (-15.503243923187256, 59), (-17.67183816432953, 48), (-27.8835109770298, 37), (-35.63118204474449, 50)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [0, 1], 3: [2, 3], 4: [6, 7]}
Selected Indexes: [4, 9, 0, 2, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.24s/it, est. speed input: 1087.02 toks/s, output: 21.04 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.49it/s, est. speed input: 1748.31 toks/s, output: 47.66 toks/s]Processed prompts:  60%|██████    | 3/5 [00:02<00:01,  1.49it/s, est. speed input: 1819.22 toks/s, output: 72.37 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.14it/s, est. speed input: 2297.44 toks/s, output: 102.17 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.05it/s, est. speed input: 2767.43 toks/s, output: 138.19 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.4509977510897443 sec
Added Probs: [(-49.73499137163162, 40), (-58.43362212181091, 58), (0.0, 13), (0.0, 13), (-13.816883742809296, 23), (-24.81145343184471, 23), (-28.904458805918694, 38), (-50.09462910890579, 48), (-20.31282451748848, 54), (-40.42322638630867, 27)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 1]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.09it/s, est. speed input: 1473.18 toks/s, output: 2.17 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.74it/s, est. speed input: 2138.19 toks/s, output: 22.36 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.51it/s, est. speed input: 3094.23 toks/s, output: 74.06 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.23it/s, est. speed input: 3094.23 toks/s, output: 74.06 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.2538071810267866 sec
Added Probs: [(0.0, 13), (0.0, 13), (-47.83636021614075, 34), (-54.488656520843506, 52), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 3, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.08it/s, est. speed input: 1593.04 toks/s, output: 2.17 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.91it/s, est. speed input: 5696.29 toks/s, output: 27.56 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.05it/s, est. speed input: 5696.29 toks/s, output: 27.56 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2486809610854834 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (-2.2673614025115967, 13), (-2.2673614025115967, 13), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [8, 9], 4: [0, 1]}
Selected Indexes: [4, 6, 2, 8, 0]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart. To find 40% of 200 GB, we multiply 200 GB by 0.4, which is 80 GB. ****** Step 4: So, she has downloaded 80 GB before the restart. This means she has 200 - 80 = 120 GB left to download. ****** Step 5: Since she has to restart the download from the beginning, she has to start again from 0 GB. ****** Step 6: Now, she has 120 GB left to download, and she can download 2 GB/minute. To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Adding the time it took to download the first 80 GB (40 minutes) and the time it took to download the remaining 120 GB (60 minutes), we get a total time of 40 + 60 = 100 minutes. ****** Step 8: The answer is #### 100. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart. To find 40% of 200 GB, we multiply 200 GB by 0.4, which is 80 GB. ****** Step 4: So, she has downloaded 80 GB before the restart. This means she has 200 - 80 = 120 GB left to download. ****** Step 5: Since she has to restart the download from the beginning, she has to start again from 0 GB. ****** Step 6: Now, she has 120 GB left to download, and she can download 2 GB/minute. To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Adding the time it took to download the first 80 GB (40 minutes) and the time it took to download the remaining 120 GB (60 minutes), we get a total time of 40 + 60 = 100 minutes. ****** Step 8: The answer is #### 100. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She normally downloads 2 GB/minute, so the normal download time would be 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: She has to restart the download from the beginning, so she will have to download 80 GB again. ****** Step 6: This means the total download time will be 100 minutes + 20 minutes (for the restart) + 80 GB / 2 GB/minute = 100 + 20 + 40 = 160 minutes. ****** Step 7: The answer is #### 160. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She normally downloads 2 GB/minute, so the normal download time would be 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: She has to restart the download from the beginning, so she will have to download 80 GB again. ****** Step 6: This means the total download time will be 100 minutes + 20 minutes (for the restart) + 80 GB / 2 GB/minute = 100 + 20 + 40 = 160 minutes. ****** Step 7: The answer is #### 160. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She can download 2 GB/minute, so to find the total time needed, we divide 200 by 2. ****** Step 3: 200 / 2 = 100 minutes. ****** Step 4: But then Windows forces a restart, which takes 20 minutes. ****** Step 5: So, the total time needed is 100 + 20 = 120 minutes. ****** Step 6: But she has to restart the download from the beginning, so she has to download 200 GB again. ****** Step 7: So, the total time needed is 2 * 120 = 240 minutes. ****** Step 8: The answer is #### 240. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She can download 2 GB/minute, so to find the total time needed, we divide 200 by 2. ****** Step 3: 200 / 2 = 100 minutes. ****** Step 4: But then Windows forces a restart, which takes 20 minutes. ****** Step 5: So, the total time needed is 100 + 20 = 120 minutes. ****** Step 6: But she has to restart the download from the beginning, so she has to download 200 GB again. ****** Step 7: So, the total time needed is 2 * 120 = 240 minutes. ****** Step 8: The answer is #### 240. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She normally downloads 2 GB/minute, so the time it takes to download the file is 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: So, the download is interrupted after 80 GB, and the remaining 120 GB needs to be downloaded again. ****** Step 6: The time it takes to download the remaining 120 GB is 120 GB / 2 GB/minute = 60 minutes. ****** Step 7: But this includes the 20 minutes it takes to install the updates, so the actual download time is 60 minutes - 20 minutes = 40 minutes. ****** Step 8: The total time it takes to download the file is the time it takes to download the first 80 GB plus the time it takes to download the remaining 120 GB: 40 minutes + 20 minutes = 60 minutes. ****** Step 9: The answer is #### 60. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She normally downloads 2 GB/minute, so the time it takes to download the file is 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: So, the download is interrupted after 80 GB, and the remaining 120 GB needs to be downloaded again. ****** Step 6: The time it takes to download the remaining 120 GB is 120 GB / 2 GB/minute = 60 minutes. ****** Step 7: But this includes the 20 minutes it takes to install the updates, so the actual download time is 60 minutes - 20 minutes = 40 minutes. ****** Step 8: The total time it takes to download the file is the time it takes to download the first 80 GB plus the time it takes to download the remaining 120 GB: 40 minutes + 20 minutes = 60 minutes. ****** Step 9: The answer is #### 60. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart, which takes 20 minutes. ****** Step 4: So, Carla has to restart the download from the beginning, which means she has to download the entire file again. ****** Step 5: Since she has already downloaded 40% of the file (0.4 * 200 = 80 GB), she only needs to download the remaining 120 GB (200 - 80 = 120). ****** Step 6: To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Since she has already spent 20 minutes restarting the computer, the total time it takes to download the file is 100 minutes (initial download time) + 20 minutes (restart time) + 60 minutes (remaining download time) = 180 minutes. ****** Step 8: The answer is #### 180. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart, which takes 20 minutes. ****** Step 4: So, Carla has to restart the download from the beginning, which means she has to download the entire file again. ****** Step 5: Since she has already downloaded 40% of the file (0.4 * 200 = 80 GB), she only needs to download the remaining 120 GB (200 - 80 = 120). ****** Step 6: To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Since she has already spent 20 minutes restarting the computer, the total time it takes to download the file is 100 minutes (initial download time) + 20 minutes (restart time) + 60 minutes (remaining download time) = 180 minutes. ****** Step 8: The answer is #### 180. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {24: Logprob(logprob=0.0, rank=1, decoded_token='9')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1399: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='60')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {24: Logprob(logprob=0.0, rank=1, decoded_token='9')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1399: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='60')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 17.790901649044827
>> Answer lists: ['100', '100', '160', '160', '240', '240', '60', '60', '180', '180']
>> Original Correct: 100, False
>> Soft SC  Correct: 100, False
>> Golden    Answer: 160
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:04<00:00,  4.25s/it, est. speed input: 282.40 toks/s, output: 99.31 toks/s]Processed prompts: 100%|██████████| 1/1 [00:04<00:00,  4.25s/it, est. speed input: 282.40 toks/s, output: 99.31 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 4.252328146016225 sec
Added Probs: [(-1.2128104269504547, 21), (-1.2128104269504547, 21), (-1.2128104269504547, 21), (-1.523741990327835, 24), (-1.523741990327835, 24), (-2.6587229818105698, 37), (-2.8847236931324005, 37), (-2.8847236931324005, 37), (-4.5674896240234375, 40), (-12.368481203913689, 160)]
Cluster Indices: {0: [5], 1: [3, 4], 2: [9], 3: [0, 1, 2], 4: [6, 7, 8]}
Selected Indexes: [5, 3, 9, 0, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1632.21 toks/s, output: 2.40 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.50it/s, est. speed input: 1870.94 toks/s, output: 31.17 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.24it/s, est. speed input: 2435.60 toks/s, output: 63.15 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.76it/s, est. speed input: 2799.82 toks/s, output: 87.18 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.67it/s, est. speed input: 3347.97 toks/s, output: 119.97 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8874625749886036 sec
Added Probs: [(-10.791451245546341, 28), (-15.048938155174255, 28), (-7.545492649078369, 21), (-8.108418017625809, 37), (0.0, 1), (0.0, 1), (-5.950574308633804, 21), (-9.667573660612106, 20), (-5.839049518108368, 40), (-9.93534243106842, 28)]
Cluster Indices: {0: [4, 5], 1: [2, 6], 2: [0, 1, 8, 9], 3: [7], 4: [3]}
Selected Indexes: [4, 6, 8, 7, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1629.00 toks/s, output: 2.40 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.54it/s, est. speed input: 1920.14 toks/s, output: 31.01 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.41it/s, est. speed input: 2579.69 toks/s, output: 60.41 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.73it/s, est. speed input: 3543.64 toks/s, output: 119.99 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.78it/s, est. speed input: 3543.64 toks/s, output: 119.99 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8117359429597855 sec
Added Probs: [(0.0, 1), (0.0, 1), (-10.34605622291565, 25), (-10.547453731298447, 23), (-10.538383841514587, 37), (-11.555784523487091, 36), (-2.908923089504242, 20), (-2.908923089504242, 20), (-5.17218804359436, 26), (-5.5652115046978, 27)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 2, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.19it/s, est. speed input: 1612.93 toks/s, output: 2.37 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.43it/s, est. speed input: 1830.04 toks/s, output: 33.20 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.32it/s, est. speed input: 2514.62 toks/s, output: 60.50 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.90it/s, est. speed input: 2928.52 toks/s, output: 92.26 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.79it/s, est. speed input: 3618.11 toks/s, output: 131.07 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8046078060287982 sec
Added Probs: [(-1.8963079452514648, 36), (-1.8963079452514648, 36), (-4.485453963279724, 27), (-7.132316589355469, 19), (0.0, 1), (0.0, 1), (-12.393887758255005, 35), (-13.290196061134338, 34), (-13.234334111213684, 23), (-20.05162477493286, 23)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [8, 9], 3: [0, 1], 4: [6, 7]}
Selected Indexes: [4, 2, 8, 0, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.17it/s, est. speed input: 1585.66 toks/s, output: 2.33 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.41it/s, est. speed input: 1812.72 toks/s, output: 30.12 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.97it/s, est. speed input: 2281.54 toks/s, output: 63.54 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.31it/s, est. speed input: 2588.93 toks/s, output: 91.85 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  3.03it/s, est. speed input: 3009.18 toks/s, output: 127.51 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.28it/s, est. speed input: 3009.18 toks/s, output: 127.51 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.2080663859378546 sec
Added Probs: [(0.0, 1), (0.0, 1), (-7.2881118953228, 23), (-12.821451723575592, 19), (-19.867730140686035, 41), (-22.217923626303673, 51), (-25.53316220641136, 33), (-41.1141063272953, 45), (-4.814052134752274, 33), (-4.814052134752274, 33)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [6, 7], 3: [0, 1], 4: [2, 3]}
Selected Indexes: [5, 8, 6, 0, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.12it/s, est. speed input: 1520.92 toks/s, output: 2.24 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.41it/s, est. speed input: 1865.61 toks/s, output: 25.85 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.28it/s, est. speed input: 3362.00 toks/s, output: 82.99 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  1.93it/s, est. speed input: 2602.88 toks/s, output: 96.04 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  1.93it/s, est. speed input: 2602.88 toks/s, output: 96.04 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.604699457064271 sec
Added Probs: [(-62.0573308467865, 50), (-64.1602572798729, 66), (-10.531653642654419, 27), (-10.531653642654419, 24), (-7.688589155673981, 22), (-10.20848035812378, 14), (0.0, 1), (0.0, 1), (-1.5115742683410645, 22), (-1.5115742683410645, 22)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [0, 1], 4: [2, 3]}
Selected Indexes: [4, 6, 8, 1, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.10it/s, est. speed input: 1497.43 toks/s, output: 2.20 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  3.06it/s, est. speed input: 3631.73 toks/s, output: 20.80 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.27it/s, est. speed input: 3890.57 toks/s, output: 44.38 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.35it/s, est. speed input: 4607.56 toks/s, output: 70.94 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.5066364789381623 sec
Added Probs: [(-1.2582125216722488, 10), (-1.2582125216722488, 10), (0.0, 1), (0.0, 1), (-3.3185389041900635, 20), (-11.900581121444702, 19), (0.0, 1), (0.0, 1), (-32.03127144277096, 23), (-45.451143845915794, 20)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [0, 1], 3: [6, 7], 4: [2, 3]}
Selected Indexes: [4, 8, 0, 6, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.09it/s, est. speed input: 1506.75 toks/s, output: 2.18 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.14it/s, est. speed input: 4919.02 toks/s, output: 34.03 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.54it/s, est. speed input: 4919.02 toks/s, output: 34.03 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.4230799080105498 sec
Added Probs: [(0.0, 20), (0.0, 20), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.09it/s, est. speed input: 1535.74 toks/s, output: 2.17 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.51it/s, est. speed input: 4304.21 toks/s, output: 38.35 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.09it/s, est. speed input: 4304.21 toks/s, output: 38.35 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6289404609706253 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (-48.35835313796997, 28), (-71.89689984172583, 26), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 1], 3: [6, 7], 4: [8, 9]}
Selected Indexes: [4, 2, 0, 6, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.08it/s, est. speed input: 1497.82 toks/s, output: 2.16 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.02it/s, est. speed input: 3809.72 toks/s, output: 43.63 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.73it/s, est. speed input: 3809.72 toks/s, output: 43.63 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8486338570946828 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (-26.65606379508972, 36), (-26.65606379508972, 36), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.08it/s, est. speed input: 1530.52 toks/s, output: 2.16 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.80it/s, est. speed input: 5587.36 toks/s, output: 25.46 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.98it/s, est. speed input: 5587.36 toks/s, output: 25.46 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.269633068004623 sec
Added Probs: [(0.0, 1), (0.0, 1), (-6.95858895778656, 14), (-8.33358895778656, 10), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 2, 8]
Found EoS token, Break
completions: ["<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph, so he covers a distance of 3 x 60 = 180 miles. ******\n\nStep 2: He turns around and tries to get home in 4 hours. He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ******\r\n\r\nStep 3: He spends the next half-hour driving at 30 mph, so he covers a distance of 0.5 x 30 = 15 miles. ******\r\n\r\nStep 4: He spends the remaining 2 hours driving at 80 mph, so he covers a distance of 2 x 80 = 160 miles. ******\r\n\r\nStep 5: In total, John has covered a distance of 180 (initially) + 15 + 160 = 355 miles. ******\r\n\r\nStep 6: Since he turned around, he is now 355 miles away from home. ******\r\n\r\nThe answer is #### 355. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph, so he covers a distance of 3 x 60 = 180 miles. ******\n\nStep 2: He turns around and tries to get home in 4 hours. He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ******\r\n\r\nStep 3: He spends the next half-hour driving at 30 mph, so he covers a distance of 0.5 x 30 = 15 miles. ******\r\n\r\nStep 4: He spends the remaining 2 hours driving at 80 mph, so he covers a distance of 2 x 80 = 160 miles. ******\r\n\r\nStep 5: In total, John has covered a distance of 180 (initially) + 15 + 160 = 355 miles. ******\r\n\r\nStep 6: Since he turned around, he is now 355 miles away from home. ******\r\n\r\nThe answer is #### 355. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph. ****** \nDistance covered = Speed * Time = 60 * 3 = 180 miles. ****** \nStep 2: He turns around and tries to get home in 4 hours. ****** \nStep 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ****** \nStep 4: He drives at 30 mph for half an hour (0.5 hours). ****** \nDistance covered = Speed * Time = 30 * 0.5 = 15 miles. ****** \nStep 5: He drives at 80 mph for the remaining 2 hours. ****** \nDistance covered = Speed * Time = 80 * 2 = 160 miles. ****** \nStep 6: Total distance covered in the second part of his journey = 15 + 160 = 175 miles. ****** \nStep 7: Total distance from home = Distance covered in the first part - Distance covered in the second part = 180 - 175 = 5 miles. ****** \nStep 8: The answer is #### 5. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph. ****** \nDistance covered = Speed * Time = 60 * 3 = 180 miles. ****** \nStep 2: He turns around and tries to get home in 4 hours. ****** \nStep 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ****** \nStep 4: He drives at 30 mph for half an hour (0.5 hours). ****** \nDistance covered = Speed * Time = 30 * 0.5 = 15 miles. ****** \nStep 5: He drives at 80 mph for the remaining 2 hours. ****** \nDistance covered = Speed * Time = 80 * 2 = 160 miles. ****** \nStep 6: Total distance covered in the second part of his journey = 15 + 160 = 175 miles. ****** \nStep 7: Total distance from home = Distance covered in the first part - Distance covered in the second part = 180 - 175 = 5 miles. ****** \nThe answer is #### 5. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph, so he covers a distance of 3 * 60 = 180 miles.\n\nStep 2: He then spends 2 hours in standstill traffic, so he doesn't cover any distance.\n\nStep 3: He drives for half an hour at 30 mph, so he covers a distance of 0.5 * 30 = 15 miles.\n\nStep 4: He spends the remaining 2 hours at 80 mph, so he covers a distance of 2 * 80 = 160 miles.\n\nStep 5: In total, John covers a distance of 180 + 15 + 160 = 355 miles.\n\nStep 6: The answer is #### 355.******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph, so he covers a distance of 3 * 60 = 180 miles.\n\nStep 2: He then spends 2 hours in standstill traffic, so he doesn't cover any distance.\n\nStep 3: He drives for half an hour at 30 mph, so he covers a distance of 0.5 * 30 = 15 miles.\n\nStep 4: He spends the remaining 2 hours at 80 mph, so he covers a distance of 2 * 80 = 160 miles.\n\nStep 5: In total, John covers a distance of 180 + 15 + 160 = 355 miles.\n\nStep 6: The answer is #### 355.******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at a speed of 60 mph. ******\n\nDistance = Speed * Time = 60 * 3 = 180 miles\n\nStep 2: He then turns around and tries to get home in 4 hours. ****** Step 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ****** Step 4: He then drives at 30 mph for half an hour (0.5 hours). ****** Distance = Speed * Time = 30 * 0.5 = 15 miles\n\nStep 5: He then drives at 80 mph for the remaining 4 - 2 - 0.5 = 1.5 hours. ****** Distance = Speed * Time = 80 * 1.5 = 120 miles\n\nStep 6: Total distance from home = Distance covered before turning around + distance covered on the way back = 180 + 15 + 120 = 315 miles\n\nStep 7: The answer is #### 315. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at a speed of 60 mph. ******\n\nDistance = Speed * Time = 60 * 3 = 180 miles\n\nStep 2: He then turns around and tries to get home in 4 hours. ****** Step 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ****** Step 4: He then drives at 30 mph for half an hour (0.5 hours). ****** Distance = Speed * Time = 30 * 0.5 = 15 miles\n\nStep 5: He then drives at 80 mph for the remaining 4 - 2 - 0.5 = 1.5 hours. ****** Distance = Speed * Time = 80 * 1.5 = 120 miles\n\nStep 6: Total distance from home = Distance covered before turning around + distance covered on the way back = 180 + 15 + 120 = 315 miles\n\nStep 7: The answer is #### 315. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph. ****** Step 2: He covers a distance of 3 * 60 = 180 miles. ****** Step 3: Then he spends 2 hours in standstill traffic, so he doesn't cover any distance. ****** Step 4: He drives at 30 mph for 0.5 hours, covering a distance of 0.5 * 30 = 15 miles. ****** Step 5: He drives at 80 mph for the remaining 2 hours, covering a distance of 2 * 80 = 160 miles. ****** Step 6: In total, he covers a distance of 180 + 15 + 160 = 355 miles. ****** Step 7: He is still the same distance from home, so the answer is #### 355. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph. ****** Step 2: He covers a distance of 3 * 60 = 180 miles. ****** Step 3: Then he spends 2 hours in standstill traffic, so he doesn't cover any distance. ****** Step 4: He drives at 30 mph for 0.5 hours, covering a distance of 0.5 * 30 = 15 miles. ****** Step 5: He drives at 80 mph for the remaining 2 hours, covering a distance of 2 * 80 = 160 miles. ****** Step 6: In total, he covers a distance of 180 + 15 + 160 = 355 miles. ****** Step 7: He is still the same distance from home, so the answer is #### 355. ******"]
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{720: Logprob(logprob=0.0, rank=1, decoded_token=' \n')}, {8468: Logprob(logprob=-0.6325989961624146, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {23: Logprob(logprob=0.0, rank=1, decoded_token='8')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{720: Logprob(logprob=0.0, rank=1, decoded_token=' \n')}, {791: Logprob(logprob=-0.7575989961624146, rank=2, decoded_token='The'), 8468: Logprob(logprob=-0.6325989961624146, rank=1, decoded_token='Step')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 22.58793247898575
>> Answer lists: ['355', '355', '5', '5', '355', '355', '315', '315', '355', '355']
>> Original Correct: 355, False
>> Soft SC  Correct: 355, False
>> Golden    Answer: 45
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.35s/it, est. speed input: 854.72 toks/s, output: 224.77 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.35s/it, est. speed input: 854.72 toks/s, output: 224.77 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.3553219950990751 sec
Added Probs: [(-2.0450993180274963, 26), (-2.0450993180274963, 26), (-2.0515082478523254, 27), (-2.1749846935272217, 24), (-2.1749846935272217, 26), (-2.303437292575836, 26), (-3.2401755452156067, 26), (-3.9335238933563232, 41), (-5.437993407249451, 38), (-7.235729366540909, 44)]
Cluster Indices: {0: [5, 6], 1: [8, 9], 2: [3, 4], 3: [0, 1, 2], 4: [7]}
Selected Indexes: [5, 8, 4, 2, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.47s/it, est. speed input: 802.76 toks/s, output: 33.28 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.39it/s, est. speed input: 1422.71 toks/s, output: 63.79 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.28it/s, est. speed input: 2005.12 toks/s, output: 94.40 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.78it/s, est. speed input: 2362.12 toks/s, output: 128.04 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.43it/s, est. speed input: 2886.84 toks/s, output: 168.21 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.0677139019826427 sec
Added Probs: [(-2.342899978160858, 25), (-12.55947732925415, 32), (-7.323262989521027, 45), (-9.371250867843628, 45), (-4.241990029811859, 25), (-7.45171582698822, 24), (-2.5031550526618958, 25), (-11.005562484264374, 36), (-6.4716856479644775, 42), (-10.61846399307251, 47)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [0, 6], 3: [2, 3], 4: [1, 7]}
Selected Indexes: [4, 8, 6, 2, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.44s/it, est. speed input: 860.05 toks/s, output: 29.87 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.78it/s, est. speed input: 1890.08 toks/s, output: 87.75 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.50it/s, est. speed input: 3057.18 toks/s, output: 161.61 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.192923584021628 sec
Added Probs: [(-8.567809894680977, 38), (-10.983110144734383, 42), (-5.133298583328724, 23), (-5.352654576301575, 20), (-5.897134646773338, 37), (-15.30340026319027, 42), (-4.885919809341431, 25), (-13.631292343139648, 23), (-7.0590696930885315, 29), (-14.181018054485321, 44)]
Cluster Indices: {0: [1, 5], 1: [6, 7], 2: [0, 4], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [1, 6, 4, 2, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.45s/it, est. speed input: 863.87 toks/s, output: 31.82 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.73it/s, est. speed input: 2793.92 toks/s, output: 116.67 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.75it/s, est. speed input: 3447.48 toks/s, output: 155.70 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.829108635080047 sec
Added Probs: [(-3.303757667541504, 23), (-3.303757667541504, 23), (-17.61842167377472, 36), (-21.66843032836914, 35), (-5.278682708740234, 23), (-6.798224449157715, 23), (-6.967875599861145, 37), (-13.52299028635025, 37), (-4.394449234008789, 23), (-9.470795631408691, 23)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 1], 3: [8, 9], 4: [6, 7]}
Selected Indexes: [4, 2, 0, 8, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.21s/it, est. speed input: 1071.00 toks/s, output: 19.79 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.36it/s, est. speed input: 2559.49 toks/s, output: 67.55 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.01it/s, est. speed input: 3077.91 toks/s, output: 92.87 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.86it/s, est. speed input: 3670.83 toks/s, output: 127.17 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7571907349629328 sec
Added Probs: [(0.0, 25), (0.0, 25), (-1.5663087368011475, 14), (-6.5663087368011475, 10), (-7.769372463226318, 22), (-27.081123143434525, 31), (-3.680817559361458, 34), (-4.930817559361458, 33), (0.0, 14), (0.0, 14)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.18it/s, est. speed input: 1548.94 toks/s, output: 2.36 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.94it/s, est. speed input: 3339.43 toks/s, output: 25.56 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.52it/s, est. speed input: 3105.28 toks/s, output: 55.41 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.89it/s, est. speed input: 3770.63 toks/s, output: 91.42 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7406873479485512 sec
Added Probs: [(0.0, 13), (0.0, 13), (-21.399723529815674, 34), (-23.86502516269684, 31), (0.0, 1), (0.0, 1), (-21.961304426193237, 31), (-26.017242193222046, 32), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [8, 9], 4: [0, 1]}
Selected Indexes: [4, 6, 2, 8, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.16it/s, est. speed input: 1521.63 toks/s, output: 2.32 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.00it/s, est. speed input: 4439.39 toks/s, output: 27.03 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.22it/s, est. speed input: 5569.61 toks/s, output: 48.98 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.197119340999052 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Found EoS token, Break
completions: ["<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza works for 40 hours at a rate of $10 per hour, so she earns 40 * $10 = $400. ******\n\nStep 2: For the remaining 5 hours, she works overtime at a rate of 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ****** \n\nStep 3: For the 5 overtime hours, she earns 5 * $12 = $60. ****** \n\nStep 4: In total, Eliza's earnings for the week are $400 (from regular hours) + $60 (from overtime) = $460. ****** \n\nStep 5: The answer is #### 460. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza works for 40 hours at a rate of $10 per hour, so she earns 40 * $10 = $400. ******\n\nStep 2: For the remaining 5 hours, she works overtime at a rate of 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ****** \n\nStep 3: For the 5 overtime hours, she earns 5 * $12 = $60. ****** \n\nStep 4: In total, Eliza's earnings for the week are $400 (from regular hours) + $60 (from overtime) = $460. ****** \n\nStep 5: The answer is #### 460. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza's regular rate is $10 per hour for the first 40 hours. ****** Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours (45 - 40 = 5), she receives overtime pay, which is 1.2 times her regular rate. ****** Step 4: Overtime pay is 1.2 * $10 = $12 per hour. ****** Step 5: For the 5 overtime hours, her earnings are 5 * $12 = $60. ****** Step 6: Her total earnings for the week are $400 (regular pay) + $60 (overtime pay) = $460. ****** Step 7: The answer is #### 460. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza's regular rate is $10 per hour for the first 40 hours. ****** Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours (45 - 40 = 5), she receives overtime pay, which is 1.2 times her regular rate. ****** Step 4: Overtime pay is 1.2 * $10 = $12 per hour. ****** Step 5: For the 5 overtime hours, her earnings are 5 * $12 = $60. ****** Step 6: Her total earnings for the week are $400 (regular pay) + $60 (overtime pay) = $460. ****** Step 7: The answer is #### 460. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza's regular rate is $10 per hour for the first 40 hours. ****** Step 2: She worked for 40 hours at the regular rate, so her earnings for the first 40 hours are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours, she received overtime pay, which is 1.2 times her regular rate. ****** Step 4: Her overtime rate is $10 * 1.2 = $12 per hour. ****** Step 5: She worked for 5 hours at the overtime rate, so her earnings for the overtime hours are 5 * $12 = $60. ****** Step 6: Her total earnings for the week are $400 (for the regular hours) + $60 (for the overtime hours) = $460. ****** Step 7: The answer is #### 460. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza's regular rate is $10 per hour for the first 40 hours. ****** Step 2: She worked for 40 hours at the regular rate, so her earnings for the first 40 hours are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours, she received overtime pay, which is 1.2 times her regular rate. ****** Step 4: Her overtime rate is $10 * 1.2 = $12 per hour. ****** Step 5: She worked for 5 hours at the overtime rate, so her earnings for the overtime hours are 5 * $12 = $60. ****** Step 6: Her total earnings for the week are $400 (for the regular hours) + $60 (for the overtime hours) = $460. ****** Step 7: The answer is #### 460. ******", '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza works 40 hours at $10 per hour, so her earnings for the first 40 hours are 40 * $10 = $400. ******\n\nStep 2: For the remaining 5 hours, she works overtime at 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ******\r\n\r\nStep 3: Her earnings for the overtime hours are 5 * $12 = $60. ******\r\n\r\nStep 4: Her total earnings for the week are the sum of her earnings for the regular hours and the overtime hours: $400 + $60 = $460. ******\r\n\r\nStep 5: The answer is #### 460. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza works 40 hours at $10 per hour, so her earnings for the first 40 hours are 40 * $10 = $400. ******\n\nStep 2: For the remaining 5 hours, she works overtime at 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ******\r\n\r\nStep 3: Her earnings for the overtime hours are 5 * $12 = $60. ******\r\n\r\nStep 4: Her total earnings for the week are the sum of her earnings for the regular hours and the overtime hours: $400 + $60 = $460. ******\r\n\r\nStep 5: The answer is #### 460. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza earns $10 per hour for the first 40 hours she works. ****** Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours, she works overtime and earns 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ****** Step 4: For the overtime hours, her earnings are 5 * $12 = $60. ****** Step 5: Her total earnings for the week are $400 + $60 = $460. ****** Step 6: The answer is #### 460. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza earns $10 per hour for the first 40 hours she works. ****** Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours, she works overtime and earns 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ****** Step 4: For the overtime hours, her earnings are 5 * $12 = $60. ****** Step 5: Her total earnings for the week are $400 + $60 = $460. ****** Step 6: The answer is #### 460. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16551: Logprob(logprob=0.0, rank=1, decoded_token='460')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16551: Logprob(logprob=0.0, rank=1, decoded_token='460')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16551: Logprob(logprob=0.0, rank=1, decoded_token='460')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16551: Logprob(logprob=0.0, rank=1, decoded_token='460')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 12.335387439001352
>> Answer lists: ['460', '460', '460', '460', '460', '460', '460', '460', '460', '460']
>> Original Correct: 460, True
>> Soft SC  Correct: 460, True
>> Golden    Answer: 460
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.34it/s, est. speed input: 1548.23 toks/s, output: 281.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.34it/s, est. speed input: 1548.23 toks/s, output: 281.00 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (1) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7510726780164987 sec
Added Probs: [(-0.575939416885376, 21), (-0.575939416885376, 21), (-0.575939416885376, 21), (-0.575939416885376, 21), (-0.575939416885376, 21), (-0.575939416885376, 21), (-0.575939416885376, 21), (-0.825939416885376, 21), (-0.825939416885376, 21), (-0.825939416885376, 21)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 1: [], 2: [], 3: [], 4: []}
Selected Indexes: [0, 1, 2, 3, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:07,  1.93s/it, est. speed input: 611.63 toks/s, output: 42.57 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.60it/s, est. speed input: 3057.75 toks/s, output: 212.85 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.9376201670384035 sec
Added Probs: [(-3.7369437515735626, 41), (-5.736943751573563, 41), (-3.7369437515735626, 41), (-5.736943751573563, 41), (-3.7369437515735626, 41), (-5.736943751573563, 41), (-3.7369437515735626, 41), (-5.736943751573563, 41), (-3.7369437515735626, 41), (-5.736943751573563, 41)]
Cluster Indices: {0: [1, 3, 5, 7, 9], 1: [0, 2, 4, 6, 8], 2: [], 3: [], 4: []}
Selected Indexes: [1, 0, 3, 5, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:02<00:11,  2.86s/it, est. speed input: 425.88 toks/s, output: 50.35 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  1.72it/s, est. speed input: 2092.77 toks/s, output: 247.08 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 2.921301824040711 sec
Added Probs: [(-20.957959547638893, 73), (-22.875505596399307, 71), (-17.30765037238598, 68), (-22.69412948191166, 75), (-20.957959547638893, 73), (-22.875505596399307, 71), (-20.957959547638893, 73), (-22.875505596399307, 71), (-20.957959547638893, 73), (-22.875505596399307, 71)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [2], 2: [3], 3: [0, 4, 6, 8], 4: []}
Selected Indexes: [1, 2, 3, 0, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:07,  1.91s/it, est. speed input: 676.11 toks/s, output: 39.89 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.62it/s, est. speed input: 3381.67 toks/s, output: 199.45 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.9169646530644968 sec
Added Probs: [(-4.904024124145508, 38), (-6.800332069396973, 38), (-7.556804656982422, 38), (-14.886198043823242, 38), (-7.260763168334961, 38), (-9.06641674041748, 38), (-7.102684140205383, 38), (-7.555200219154358, 38), (-4.904024124145508, 38), (-6.800332069396973, 38)]
Cluster Indices: {0: [3, 5], 1: [1, 6, 9], 2: [2], 3: [0, 7, 8], 4: [4]}
Selected Indexes: [5, 6, 2, 0, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.12s/it, est. speed input: 1186.39 toks/s, output: 16.96 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.46it/s, est. speed input: 5919.09 toks/s, output: 84.79 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.1323653449071571 sec
Added Probs: [(-4.695349335670471, 10), (-12.062572240829468, 9), (-3.6591878533363342, 10), (-11.843542456626892, 9), (-1.1270631104707718, 10), (-12.492679357528687, 9), (-0.898723229765892, 10), (-15.14094591140747, 9), (-3.9718839526176453, 10), (-12.589107155799866, 9)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the number of downloads in the third month was 180 - 54 = 126. ******\n\nStep 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******\n\nThe answer is #### 366. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the number of downloads in the third month was 180 - 54 = 126. ******\n\nStep 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******\r\n\r\nThe answer is #### 366.******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******\n\nThe answer is #### 366. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******\r\n\r\nThe answer is #### 366.******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. 30% of 180 is 0.3 * 180 = 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\n\nThe answer is #### 366. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. 30% of 180 is 0.3 * 180 = 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\r\n\r\nThe answer is #### 366.******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3 = 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\n\nThe answer is #### 366. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3 = 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\r\n\r\nThe answer is #### 366.******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the number of downloads in the third month was 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\n\nThe answer is #### 366. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the number of downloads in the third month was 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\r\n\r\nThe answer is #### 366.******']
Answer Probs: [[{271: Logprob(logprob=-0.9390698671340942, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=-1.1890698671340942, rank=2, decoded_token='\r\n\r\n'), 271: Logprob(logprob=-0.9390698671340942, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {128009: Logprob(logprob=-1.2234445810317993, rank=2, decoded_token='<|eot_id|>'), 220: Logprob(logprob=-0.3484445810317993, rank=1, decoded_token=' ')}], [{271: Logprob(logprob=-0.7318375706672668, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=-1.231837511062622, rank=2, decoded_token='\r\n\r\n'), 271: Logprob(logprob=-0.7318375706672668, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {128009: Logprob(logprob=-1.1368709802627563, rank=2, decoded_token='<|eot_id|>'), 220: Logprob(logprob=-0.38687101006507874, rank=1, decoded_token=' ')}], [{271: Logprob(logprob=-0.22541262209415436, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=-1.6004126071929932, rank=2, decoded_token='\r\n\r\n'), 271: Logprob(logprob=-0.22541262209415436, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {128009: Logprob(logprob=-0.8981232643127441, rank=2, decoded_token='<|eot_id|>'), 220: Logprob(logprob=-0.5231232643127441, rank=1, decoded_token=' ')}], [{271: Logprob(logprob=-0.1797446459531784, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=-1.8047446012496948, rank=2, decoded_token='\r\n\r\n'), 271: Logprob(logprob=-0.1797446459531784, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {128009: Logprob(logprob=-1.2234445810317993, rank=2, decoded_token='<|eot_id|>'), 220: Logprob(logprob=-0.3484445810317993, rank=1, decoded_token=' ')}], [{271: Logprob(logprob=-0.794376790523529, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=-1.2943768501281738, rank=2, decoded_token='\r\n\r\n'), 271: Logprob(logprob=-0.794376790523529, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {128009: Logprob(logprob=-1.2234445810317993, rank=2, decoded_token='<|eot_id|>'), 220: Logprob(logprob=-0.3484445810317993, rank=1, decoded_token=' ')}]]
>> Processing time: 8.794757711933926
>> Answer lists: ['366', '366', '366', '366', '366', '366', '366', '366', '366', '366']
>> Original Correct: 366, True
>> Soft SC  Correct: 366, True
>> Golden    Answer: 366
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.13it/s, est. speed input: 1315.94 toks/s, output: 277.93 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.13it/s, est. speed input: 1315.94 toks/s, output: 277.93 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.8845670280279592 sec
Added Probs: [(-0.6381815671920776, 26), (-0.6381815671920776, 26), (-0.6381815671920776, 26), (-0.6381815671920776, 26), (-0.6381815671920776, 26), (-1.1381815671920776, 24), (-1.1381815671920776, 24), (-1.1381815671920776, 24), (-1.1381815671920776, 24), (-2.0151096135377884, 19)]
Cluster Indices: {0: [5, 6, 7, 8], 1: [0, 1, 2, 3, 4], 2: [9], 3: [], 4: []}
Selected Indexes: [5, 0, 9, 6, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.36s/it, est. speed input: 872.52 toks/s, output: 30.95 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.83it/s, est. speed input: 3621.57 toks/s, output: 138.94 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.06it/s, est. speed input: 3621.57 toks/s, output: 138.94 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6447045450331643 sec
Added Probs: [(-3.8805907368659973, 21), (-5.880590736865997, 21), (-4.1255355179309845, 23), (-5.1255355179309845, 23), (-6.600325047969818, 32), (-10.715435802936554, 23), (-3.8805907368659973, 21), (-5.880590736865997, 21), (-3.8805907368659973, 21), (-5.880590736865997, 21)]
Cluster Indices: {0: [5], 1: [0, 6, 8], 2: [2, 3], 3: [4], 4: [1, 7, 9]}
Selected Indexes: [5, 0, 2, 4, 1]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.18s/it, est. speed input: 1024.72 toks/s, output: 23.69 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.76it/s, est. speed input: 1832.45 toks/s, output: 50.06 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.60it/s, est. speed input: 3337.55 toks/s, output: 121.17 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.77it/s, est. speed input: 3337.55 toks/s, output: 121.17 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.818868339061737 sec
Added Probs: [(-4.745146572589874, 35), (-18.22342559695244, 38), (-0.9397852420806885, 19), (-0.9397852420806885, 19), (-2.079441547393799, 21), (-2.079441547393799, 21), (-3.4176034927368164, 14), (-3.4176034927368164, 14), (-0.9397852420806885, 19), (-0.9397852420806885, 19)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3, 8, 9], 3: [1], 4: [0]}
Selected Indexes: [4, 6, 2, 1, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.20s/it, est. speed input: 1035.93 toks/s, output: 23.39 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.70it/s, est. speed input: 2722.02 toks/s, output: 72.81 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.84it/s, est. speed input: 3682.79 toks/s, output: 125.03 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.99it/s, est. speed input: 3682.79 toks/s, output: 125.03 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6842082520015538 sec
Added Probs: [(-3.303757667541504, 23), (-3.303757667541504, 23), (0.0, 32), (0.0, 32), (-1.547484040260315, 20), (-1.547484040260315, 20), (-4.320072770118713, 14), (-4.320072770118713, 14), (-2.904024124145508, 15), (-4.904024124145508, 16)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [6, 7], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 8, 6, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.25s/it, est. speed input: 1005.12 toks/s, output: 25.59 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.68it/s, est. speed input: 1802.87 toks/s, output: 53.34 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.47it/s, est. speed input: 4342.04 toks/s, output: 147.05 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.4532035129377618 sec
Added Probs: [(0.0, 21), (0.0, 21), (0.0, 23), (0.0, 23), (0.0, 23), (0.0, 23), (0.0, 16), (0.0, 16), (-1.9343550503253937, 23), (-1.9343550503253937, 23)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [2, 3], 3: [6, 7], 4: [0, 1]}
Selected Indexes: [4, 8, 2, 6, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.43s/it, est. speed input: 882.35 toks/s, output: 30.69 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.99it/s, est. speed input: 2135.90 toks/s, output: 91.79 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.68it/s, est. speed input: 3412.76 toks/s, output: 167.26 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.876796541037038 sec
Added Probs: [(0.0, 38), (0.0, 38), (0.0, 25), (0.0, 25), (0.0, 35), (0.0, 35), (0.0, 36), (0.0, 36), (0.0, 22), (0.0, 22)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [0, 1], 3: [6, 7], 4: [2, 3]}
Selected Indexes: [4, 8, 0, 6, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.28s/it, est. speed input: 1029.86 toks/s, output: 25.06 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.82it/s, est. speed input: 2093.24 toks/s, output: 69.56 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.57it/s, est. speed input: 3349.55 toks/s, output: 143.80 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.9588904869742692 sec
Added Probs: [(0.0, 17), (0.0, 17), (-4.852030277252197, 38), (-4.852030277252197, 26), (0.0, 16), (0.0, 16), (-10.666193932294846, 41), (-21.34869936108589, 29), (-9.737911462783813, 40), (-13.664432615041733, 40)]
Cluster Indices: {0: [4, 5], 1: [2, 8], 2: [0, 1], 3: [6, 9], 4: [3, 7]}
Selected Indexes: [4, 2, 0, 6, 3]
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]slurmstepd-n02: error: *** STEP 19803.0 ON n02 CANCELLED AT 2024-08-11T13:34:17 ***
srun: got SIGCONT
slurmstepd-n02: error: *** JOB 19803 ON n02 CANCELLED AT 2024-08-11T13:34:17 ***
srun: forcing job termination
