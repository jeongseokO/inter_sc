The token has not been saved to the git credentials helper. Pass `add_to_git_credential=True` in this function directly or `--add-to-git-credential` if using via `huggingface-cli` if you want to set the git credential as well.
Token is valid (permission: fineGrained).
Your token has been saved to /home/jeongseokoh/.cache/huggingface/token
Login successful
Inter SC_beam
Num Path: 10 + 5 x 2, Interval: 85
INFO 08-11 13:40:52 llm_engine.py:161] Initializing an LLM engine (v0.5.0.post1) with config: model='meta-llama/Meta-Llama-3-8B-Instruct', speculative_config=None, tokenizer='meta-llama/Meta-Llama-3-8B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir='../../hub/model/', load_format=LoadFormat.AUTO, tensor_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), seed=0, served_model_name=meta-llama/Meta-Llama-3-8B-Instruct)
INFO 08-11 13:40:55 weight_utils.py:218] Using model weights format ['*.safetensors']
INFO 08-11 13:41:00 model_runner.py:160] Loading model weights took 14.9595 GB
INFO 08-11 13:41:01 gpu_executor.py:83] # GPU blocks: 13407, # CPU blocks: 2048
INFO 08-11 13:41:04 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 08-11 13:41:04 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 08-11 13:41:14 model_runner.py:965] Graph capturing finished in 10 secs.
Model: llama3_8b is selected
Dataset: gsm8k is selected
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.35it/s, est. speed input: 1566.16 toks/s, output: 269.55 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.35it/s, est. speed input: 1566.16 toks/s, output: 269.55 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (1) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7543595039751381 sec
Added Probs: [(0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 1: [], 2: [], 3: [], 4: []}
Selected Indexes: [0, 1, 2, 3, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.61s/it, est. speed input: 735.75 toks/s, output: 36.72 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.11it/s, est. speed input: 3678.18 toks/s, output: 183.60 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.6295076699461788 sec
Gen: 

Step 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******
Gen: 

Step 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******
Gen: 

Step 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******
Gen: 

Step 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******
Gen: 

Step 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******
Gen: 

Step 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******
Gen: 

Step 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******
Gen: 

Step 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******
Gen: 

Step 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******
Gen: 

Step 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******
Added Probs: [(-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30)]
Cluster Indices: {0: [1, 3, 5, 7, 9], 1: [0, 2, 4, 6, 8], 2: [], 3: [], 4: []}
Selected Indexes: [1, 0, 3, 5, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.65s/it, est. speed input: 732.55 toks/s, output: 36.93 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.93it/s, est. speed input: 3545.50 toks/s, output: 187.99 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.718551816069521 sec
Gen: 

Step 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******
Gen: 

Step 3: She bakes muffins for her friends using 4 eggs, leaving her with 13 - 4 = 9 eggs. ******
Gen: 

Step 3: She bakes muffins with 4 eggs, leaving her with 13 - 4 = 9 eggs. ******
Gen: 

Step 3: She bakes 4 eggs for muffins, so she has 13 - 4 = 9 eggs left. ******
Gen: 

Step 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******
Gen: 

Step 3: She bakes muffins for her friends using 4 eggs, leaving her with 13 - 4 = 9 eggs. ******
Gen: 

Step 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******
Gen: 

Step 3: She bakes muffins for her friends using 4 eggs, leaving her with 13 - 4 = 9 eggs. ******
Gen: 

Step 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******
Gen: 

Step 3: She bakes muffins for her friends using 4 eggs, leaving her with 13 - 4 = 9 eggs. ******
Added Probs: [(-6.862016201019287, 32), (-10.086901187896729, 33), (-4.082843989133835, 30), (-4.166400074958801, 31), (-6.862016201019287, 32), (-10.086901187896729, 33), (-6.862016201019287, 32), (-10.086901187896729, 33), (-6.862016201019287, 32), (-10.086901187896729, 33)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [0, 4, 6, 8], 2: [3], 3: [2], 4: []}
Selected Indexes: [1, 0, 3, 2, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.49s/it, est. speed input: 830.82 toks/s, output: 33.50 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.97it/s, est. speed input: 2050.34 toks/s, output: 95.85 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.75it/s, est. speed input: 3418.92 toks/s, output: 177.36 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8273603239795193 sec
Gen: 

Step 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******
Gen: 

Step 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******
Gen: 

Step 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 * $2 = $18. ******
Gen: 

Step 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******
Gen: 

Step 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******
Gen: 

Step 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******
Gen: 

Step 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******
Gen: 

Step 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******
Gen: 

Step 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******
Gen: 

Step 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******
Added Probs: [(-7.935717701911926, 37), (-17.452032566070557, 37), (-4.668896675109863, 37), (-6.668896675109863, 37), (-3.44379198551178, 25), (-3.44379198551178, 25), (-5.99651825428009, 25), (-12.15099549293518, 25), (-7.935717701911926, 37), (-17.452032566070557, 37)]
Cluster Indices: {0: [4, 5], 1: [0, 1, 8, 9], 2: [3], 3: [6, 7], 4: [2]}
Selected Indexes: [4, 0, 3, 6, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.08s/it, est. speed input: 1182.72 toks/s, output: 17.57 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.20it/s, est. speed input: 3442.33 toks/s, output: 72.23 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.37it/s, est. speed input: 4294.47 toks/s, output: 105.98 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.4928717860020697 sec
Gen: 

Step 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******
Gen: 

Step 5: The total amount she makes is 9 eggs * $2 per egg = $18. ******
Gen: 

The answer is #### 18. ******
Gen: 

The answer is #### 18.******
Gen: 

The answer is #### 18. ******
Gen: 

The answer is #### 18.******
Gen: 

Step 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******
Gen: 

Step 5: The total amount she makes is 9 eggs * $2 per egg = $18. ******
Gen: 

The answer is #### 18. ******
Gen: 

The answer is #### 18.******
Added Probs: [(-7.6835885643959045, 25), (-7.6835885643959045, 25), (-2.3867083340883255, 10), (-9.26170825958252, 9), (-2.3867083340883255, 10), (-9.26170825958252, 9), (-6.69931024312973, 25), (-7.94931024312973, 25), (-2.2667118906974792, 10), (-9.766712188720703, 9)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1546.60 toks/s, output: 2.40 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.50it/s, est. speed input: 4800.01 toks/s, output: 24.24 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.66it/s, est. speed input: 5999.88 toks/s, output: 42.88 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.0845543220639229 sec
Gen: 
Gen: 
Gen: 

The answer is #### 18. ******
Gen: 

The answer is #### 18. ******
Gen: 
Gen: 
Gen: 

The answer is #### 18. ******
Gen: 

The answer is #### 18. ******
Gen: 
Gen: 
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 10), (0.0, 10), (0.0, 1), (0.0, 1), (0.0, 10), (0.0, 10), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 0]
Found EoS token, Break
completions: ["<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes muffins with 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes muffins with 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes muffins for her friends using 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes muffins for her friends using 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes 4 eggs for muffins, so she has 13 - 4 = 9 eggs left. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes 4 eggs for muffins, so she has 13 - 4 = 9 eggs left. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 * $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 * $2 = $18. ******\n\nThe answer is #### 18. ******"]
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 9.022576170042157
>> Answer lists: ['18', '18', '18', '18', '18', '18', '18', '18', '18', '18']
>> Original Correct: 18, True
>> Soft SC  Correct: 18, True
>> Golden    Answer: 18
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.43it/s, est. speed input: 1605.75 toks/s, output: 285.46 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.43it/s, est. speed input: 1605.75 toks/s, output: 285.46 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7046054650563747 sec
Added Probs: [(-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.6672241687774658, 20), (-1.6672241687774658, 20)]
Cluster Indices: {0: [0, 2, 3, 4, 5, 8, 9], 1: [1, 6, 7], 2: [], 3: [], 4: []}
Selected Indexes: [0, 1, 2, 3, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.46s/it, est. speed input: 785.36 toks/s, output: 34.98 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.43it/s, est. speed input: 3926.11 toks/s, output: 174.87 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.4688716139644384 sec
Gen:  Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ******
Gen:  Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ******
Gen:  Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ******
Gen:  Step 2: It also takes half that much white fiber, which is 2/2 = 1 bolt. ******
Gen:  Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ******
Gen:  Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ******
Gen:  Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ******
Gen:  Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ******
Gen:  Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ******
Gen:  Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ******
Added Probs: [(-1.4002655148506165, 26), (-2.9002654552459717, 25), (-3.522831439971924, 25), (-5.226556301116943, 26), (-1.4002655148506165, 26), (-2.9002654552459717, 25), (-1.4002655148506165, 26), (-2.9002654552459717, 25), (-1.4002655148506165, 26), (-2.9002654552459717, 25)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [0, 4, 6, 8], 2: [3], 3: [2], 4: []}
Selected Indexes: [1, 0, 3, 2, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.46s/it, est. speed input: 803.87 toks/s, output: 34.35 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.72it/s, est. speed input: 2608.64 toks/s, output: 118.70 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.79it/s, est. speed input: 3260.79 toks/s, output: 153.79 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8065331709804013 sec
Gen:  Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ******
Gen:  Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ******
Gen:  Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ******
Gen:  Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ******
Gen:  Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ******
Gen:  Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ******
Gen:  Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ******
Gen:  Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ******
Gen:  Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ******
Gen:  Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ******
Added Probs: [(-1.641285315155983, 25), (-1.641285315155983, 25), (-2.856185406446457, 25), (-8.022629231214523, 38), (-2.933805227279663, 25), (-8.788045227527618, 38), (-0.7557871341705322, 25), (-0.7557871341705322, 25), (-1.641285315155983, 25), (-1.641285315155983, 25)]
Cluster Indices: {0: [5], 1: [0, 1, 8, 9], 2: [4, 6, 7], 3: [3], 4: [2]}
Selected Indexes: [5, 0, 6, 3, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.13s/it, est. speed input: 1073.27 toks/s, output: 23.08 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.44it/s, est. speed input: 5328.48 toks/s, output: 115.37 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.1466736770235002 sec
Gen:  Step 4: The answer is #### 3. ******
Gen:  Step 4: The answer is #### 3. ******
Gen:  Step 4: The answer is #### 3. ******
Gen:  Step 4: The answer is #### 3. ******
Gen:  Step 4: The answer is #### 3. ******
Gen:  Step 4: The answer is #### 3. ******
Gen:  Step 4: The answer is #### 3. ******
Gen:  Step 4: The answer is #### 3. ******
Gen:  Step 4: The answer is #### 3. ******
Gen:  Step 4: The answer is #### 3. ******
Added Probs: [(0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (-0.9016504883766174, 13), (-0.9016504883766174, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [8, 9], 4: [2, 3]}
Selected Indexes: [4, 6, 0, 8, 2]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It also takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It also takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******']
Answer Probs: [[{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=-0.22541262209415436, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=-0.22541262209415436, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 5.2439653709298
>> Answer lists: ['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']
>> Original Correct: 3, True
>> Soft SC  Correct: 3, True
>> Golden    Answer: 3
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.44s/it, est. speed input: 798.31 toks/s, output: 165.50 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.44s/it, est. speed input: 798.31 toks/s, output: 165.50 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.4418893640395254 sec
Added Probs: [(-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-1.6128770411014557, 29), (-4.473233863711357, 49)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7], 1: [9], 2: [8], 3: [], 4: []}
Selected Indexes: [0, 9, 8, 1, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.48s/it, est. speed input: 793.94 toks/s, output: 29.68 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.30it/s, est. speed input: 1336.10 toks/s, output: 66.09 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.72it/s, est. speed input: 2474.27 toks/s, output: 159.95 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.10it/s, est. speed input: 2474.27 toks/s, output: 159.95 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.3878359609516338 sec
Gen:  Step 2: He puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******
Gen:  Step 2: He puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******
Gen: 

Step 2: The value of the house increased by 150%, so the new value is 1.5 times the original value. The original value is $80,000, so the new value is 1.5 * $80,000 = $120,000. ******
Gen: 

Step 2: The value of the house increased by 150%, so the new value is 1.5 times the original value. The original value was $80,000, so the new value is 1.5 * $80,000 = $120,000. ******
Gen:  Step 2: The repairs increased the value of the house by 150%. ******
Gen:  Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ******
Gen:  Step 2: He puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******
Gen:  Step 2: He puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******
Gen:  Step 2: He puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******
Gen:  Step 2: He puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******
Added Probs: [(-4.940427154302597, 36), (-4.940427154302597, 36), (-10.424155533313751, 60), (-11.546018660068512, 60), (-5.404024124145508, 18), (-5.810808479785919, 26), (-4.940427154302597, 36), (-4.940427154302597, 36), (-4.940427154302597, 36), (-4.940427154302597, 36)]
Cluster Indices: {0: [5], 1: [0, 1, 6, 7, 8, 9], 2: [3], 3: [4], 4: [2]}
Selected Indexes: [5, 0, 3, 4, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:02<00:08,  2.06s/it, est. speed input: 609.81 toks/s, output: 43.70 toks/s]Processed prompts:  60%|██████    | 3/5 [00:02<00:01,  1.69it/s, est. speed input: 1673.99 toks/s, output: 124.82 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  3.00it/s, est. speed input: 2553.90 toks/s, output: 198.41 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.09it/s, est. speed input: 2553.90 toks/s, output: 198.41 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.406074160942808 sec
Gen:  Step 3: The value of the house increased by 150%, so the new value is $80,000 + (150% of $80,000) = $80,000 + $120,000 = $200,000. ******
Gen:  Step 3: The value of the house increased by 150%, so the new value is 150% of the original value, which is 1.5 x $80,000 = $120,000. ******
Gen:  Step 3: The value of the house increased by 150%, so the new value is $80,000 + (150% of $80,000) = $80,000 + $120,000 = $200,000. ******
Gen:  Step 3: The value of the house increased by 150%, so the new value is 130% of the original value, which is 1.5 x $80,000 = $120,000. ******
Gen: 

Step 3: Since Josh spent $130,000 and the house is now worth $120,000, he made a loss of $130,000 - $120,000 = $10,000. ******
Gen: 

Step 3: Since Josh spent $130,000 and the house is now worth $120,000, he made a loss of $130,000 - $120,000 = $10,000. ******
Gen:  Step 3: This means the new value of the house is 1.5 times the original value, so it's now 1.5 * $80,000 = $120,000. ******
Gen:  Step 3: To find the new value of the house, we multiply the original value by 1.5 (since 150% is the same as 1.5 times the original value): $80,000 * 1.5 = $120,000. ******
Gen: 

Step 3: Since Josh spent $130,000 and the house is now worth $120,000, he made a loss of $130,000 - $120,000 = $10,000. ******
Gen: 

Step 3: Since Josh spent $130,000 and the house is now worth $120,000, he made a loss of $130,000 - $120,000 = $10,000. ******
Added Probs: [(-11.203635692596436, 51), (-12.996289104223251, 46), (-14.23507346212864, 51), (-18.83130642771721, 46), (-12.984196543693542, 45), (-12.984196543693542, 45), (-19.05882726609707, 43), (-19.68430083990097, 58), (-14.0471760481596, 45), (-20.922222286462784, 45)]
Cluster Indices: {0: [4, 5, 8, 9], 1: [1, 3], 2: [6], 3: [7], 4: [0, 2]}
Selected Indexes: [8, 1, 6, 7, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.26s/it, est. speed input: 1034.96 toks/s, output: 25.48 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.15it/s, est. speed input: 1372.64 toks/s, output: 57.08 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.73it/s, est. speed input: 2541.06 toks/s, output: 132.68 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.42it/s, est. speed input: 3048.75 toks/s, output: 170.99 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.076484914054163 sec
Gen: 

Step 4: The answer is #### -10,000. ******
Gen: 

Step 4: The answer is #### -10,000. ******
Gen:  Step 4: The profit is the difference between the new value and the total amount spent, which is $120,000 - $130,000 = -$10,000. ******
Gen:  Step 4: Since the new value is $120,000, Josh made a profit of $120,000 - $130,000 = -$10,000. ******
Gen:  Step 4: Josh originally spent $80,000 on the house and $50,000 on repairs, for a total of $80,000 + $50,000 = $130,000. ******
Gen:  Step 4: Josh bought the house for $80,000, so his profit is the difference between the new value and the original price: $120,000 - $80,000 = $40,000. ******
Gen:  Step 4: Since Josh spent $80,000 on the house and $50,000 on repairs, his total cost is $80,000 + $50,000 = $130,000. ******
Gen:  Step 4: Since Josh put in $50,000 in repairs, he must have sold the house for $120,000 - $50,000 = $70,000. ******
Gen:  Step 4: The profit is the difference between the new value and the total amount spent, which is $200,000 - $130,000 = $70,000. ******
Gen:  Step 4: The profit is the difference between the new value and the total amount spent, which is $200,000 - $130,000 = $70,000. ******
Added Probs: [(-5.625364065170288, 16), (-5.625364065170288, 16), (-2.904024124145508, 38), (-18.712531089782715, 36), (-13.318167209625244, 43), (-23.818002700805664, 46), (-8.277598261833191, 43), (-24.015767514705658, 39), (-5.56244683265686, 38), (-5.56244683265686, 38)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.19it/s, est. speed input: 1563.51 toks/s, output: 2.38 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.80it/s, est. speed input: 2173.69 toks/s, output: 25.01 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.78it/s, est. speed input: 2203.26 toks/s, output: 56.67 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.80it/s, est. speed input: 2986.30 toks/s, output: 112.60 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.31it/s, est. speed input: 2986.30 toks/s, output: 112.60 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.178846839000471 sec
Gen:  Step 5: He sold the house for $120,000, so his profit is $120,000 - $130,000 = -$10,000. ******
Gen:  Step 5: He sold the house for $120,000, so his profit is $120,000 - $130,000 = -$10,000. ******
Gen:  Step 5: To find the profit, we subtract the cost from the new value of the house: $120,000 - $130,000 = -$10,000. ******
Gen:  Step 5: To find the profit, we subtract the cost from the new value of the house: $120,000 - $130,000 = $10,000. ******
Gen:  Step 5: However, this is a loss, not a profit. ******
Gen:  Step 5: However, since Josh bought the house for $80,000, the profit is actually the difference between the new value and the original value, which is $120,000 - $80,000 = $40,000. ******
Gen: 
Gen: 
Gen:  Step 5: The answer is #### 70000. ******
Gen:  Step 5: The answer is #### 70000. ******
Added Probs: [(-4.930817559361458, 35), (-4.930817559361458, 35), (-10.271316766738892, 38), (-17.205671817064285, 38), (-11.648671925067902, 17), (-28.212916031479836, 51), (0.0, 1), (0.0, 1), (0.0, 14), (0.0, 14)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [6, 7], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 2, 6, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.18it/s, est. speed input: 1545.64 toks/s, output: 2.35 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.08it/s, est. speed input: 2536.77 toks/s, output: 30.93 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.48it/s, est. speed input: 2909.98 toks/s, output: 60.73 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.65it/s, est. speed input: 3486.16 toks/s, output: 86.42 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8984515349147841 sec
Gen:  Step 6: To find the profit, we need to subtract the original value from the new value, which is $120,000 - $80,000 = $40,000. ******
Gen:  Step 6: Josh did not make a profit. ******
Gen:  Step 6: However, this is a loss, not a profit. Josh actually lost $10,000. ******
Gen:  Step 6: However, since the problem is asking for the profit, we take the absolute value of the result: |-10,000| = 10,000. ******
Gen: 
Gen: 
Gen:  Step 6: However, this is a loss, not a profit. ******
Gen:  Step 6: However, since Josh can't make a negative profit, this means he actually lost $10,000. ******
Gen: 
Gen: 
Added Probs: [(-18.950948774814606, 40), (-29.025279343128204, 13), (-14.978281080722809, 25), (-42.62918043136597, 37), (0.0, 1), (0.0, 1), (-9.050416588783264, 17), (-27.478724598884583, 27), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.12it/s, est. speed input: 1478.38 toks/s, output: 2.25 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.77it/s, est. speed input: 3181.76 toks/s, output: 25.75 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.94it/s, est. speed input: 5243.55 toks/s, output: 71.68 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2819430750096217 sec
Gen: 
Gen: 
Gen:  Step 7: Josh actually lost $10,000. ******
Gen:  Step 7: Josh actually lost $10,000. ******
Gen: 
Gen: 
Gen:  Step 7: The answer is #### -10,000. ******
Gen:  Step 7: The answer is #### -10,000. ******
Gen:  Step 7: The answer is #### 40,000. ******
Gen:  Step 7: The answer is #### 40000. ******
Added Probs: [(0.0, 1), (0.0, 1), (-7.887168273329735, 14), (-7.887168273329735, 14), (0.0, 1), (0.0, 1), (0.0, 15), (0.0, 15), (-3.1418703757226467, 15), (-8.39187016710639, 14)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.12it/s, est. speed input: 1463.57 toks/s, output: 2.24 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.76it/s, est. speed input: 5338.36 toks/s, output: 30.27 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.98it/s, est. speed input: 5338.36 toks/s, output: 30.27 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.26842931995634 sec
Gen: 
Gen: 
Gen: 
Gen: 
Gen:  Step 8: The answer is #### -10,000. ******
Gen:  Step 8: The answer is #### -10,000. ******
Gen: 
Gen: 
Gen: 
Gen: 
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 15), (0.0, 15), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [0, 1], 4: [2, 3]}
Selected Indexes: [4, 6, 8, 0, 2]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is $80,000 + (150% of $80,000) = $80,000 + $120,000 = $200,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $200,000 - $130,000 = $70,000. ****** Step 5: The answer is #### 70000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is $80,000 + (150% of $80,000) = $80,000 + $120,000 = $200,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $200,000 - $130,000 = $70,000. ****** Step 5: The answer is #### 70000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: To find the new value of the house, we multiply the original value by 1.5 (since 150% is the same as 1.5 times the original value): $80,000 * 1.5 = $120,000. ****** Step 4: Since Josh spent $80,000 on the house and $50,000 on repairs, his total cost is $80,000 + $50,000 = $130,000. ****** Step 5: To find the profit, we subtract the cost from the new value of the house: $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. Josh actually lost $10,000. ****** Step 7: The answer is #### -10,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: To find the new value of the house, we multiply the original value by 1.5 (since 150% is the same as 1.5 times the original value): $80,000 * 1.5 = $120,000. ****** Step 4: Since Josh spent $80,000 on the house and $50,000 on repairs, his total cost is $80,000 + $50,000 = $130,000. ****** Step 5: To find the profit, we subtract the cost from the new value of the house: $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. Josh actually lost $10,000. ****** Step 7: The answer is #### -10,000. ******', "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: This means the new value of the house is 1.5 times the original value, so it's now 1.5 * $80,000 = $120,000. ****** Step 4: Josh originally spent $80,000 on the house and $50,000 on repairs, for a total of $80,000 + $50,000 = $130,000. ****** Step 5: He sold the house for $120,000, so his profit is $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. ****** Step 7: Josh actually lost $10,000. ****** Step 8: The answer is #### -10,000. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: This means the new value of the house is 1.5 times the original value, so it's now 1.5 * $80,000 = $120,000. ****** Step 4: Josh originally spent $80,000 on the house and $50,000 on repairs, for a total of $80,000 + $50,000 = $130,000. ****** Step 5: He sold the house for $120,000, so his profit is $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. ****** Step 7: Josh actually lost $10,000. ****** Step 8: The answer is #### -10,000. ******", '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******\n\nStep 2: The value of the house increased by 150%, so the new value is 1.5 times the original value. The original value is $80,000, so the new value is 1.5 * $80,000 = $120,000. ******\n\nStep 3: Since Josh spent $130,000 and the house is now worth $120,000, he made a loss of $130,000 - $120,000 = $10,000. ******\n\nStep 4: The answer is #### -10,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******\n\nStep 2: The value of the house increased by 150%, so the new value is 1.5 times the original value. The original value is $80,000, so the new value is 1.5 * $80,000 = $120,000. ******\n\nStep 3: Since Josh spent $130,000 and the house is now worth $120,000, he made a loss of $130,000 - $120,000 = $10,000. ******\n\nStep 4: The answer is #### -10,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is 150% of the original value, which is 1.5 x $80,000 = $120,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $120,000 - $130,000 = -$10,000. ****** Step 5: However, this is a loss, not a profit. ****** Step 6: To find the profit, we need to subtract the original value from the new value, which is $120,000 - $80,000 = $40,000. ****** Step 7: The answer is #### 40,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is 150% of the original value, which is 1.5 x $80,000 = $120,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $120,000 - $130,000 = -$10,000. ****** Step 5: However, this is a loss, not a profit. ****** Step 6: To find the profit, we need to subtract the original value from the new value, which is $120,000 - $80,000 = $40,000. ****** Step 7: The answer is #### 40,000. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {23: Logprob(logprob=0.0, rank=1, decoded_token='8')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {482: Logprob(logprob=0.0, rank=1, decoded_token=' -')}, {605: Logprob(logprob=0.0, rank=1, decoded_token='10')}, {11: Logprob(logprob=0.0, rank=1, decoded_token=',')}, {931: Logprob(logprob=0.0, rank=1, decoded_token='000')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {23: Logprob(logprob=0.0, rank=1, decoded_token='8')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {482: Logprob(logprob=0.0, rank=1, decoded_token=' -')}, {605: Logprob(logprob=0.0, rank=1, decoded_token='10')}, {11: Logprob(logprob=0.0, rank=1, decoded_token=',')}, {931: Logprob(logprob=0.0, rank=1, decoded_token='000')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 15.18074790306855
>> Answer lists: ['70000', '70000', '-10000', '-10000', '-10000', '-10000', '-10000', '-10000', '40000', '40000']
>> Original Correct: -10000, False
>> Soft SC  Correct: 70000, True
>> Golden    Answer: 70000
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.32it/s, est. speed input: 1500.55 toks/s, output: 283.41 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.32it/s, est. speed input: 1500.55 toks/s, output: 283.41 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7585609860252589 sec
Added Probs: [(-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-2.6544992923736572, 19), (-3.3412375450134277, 19)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7], 1: [8], 2: [9], 3: [], 4: []}
Selected Indexes: [0, 8, 9, 1, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.15s/it, est. speed input: 1002.01 toks/s, output: 23.48 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.50it/s, est. speed input: 1561.20 toks/s, output: 53.46 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.43it/s, est. speed input: 3536.83 toks/s, output: 150.20 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.06it/s, est. speed input: 3536.83 toks/s, output: 150.20 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.641992995981127 sec
Gen:  Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ******
Gen:  Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ******
Gen:  Step 2: He runs 3 days a week, so he runs 3 * 3 = 9 sprints a week. ******
Gen:  Step 2: He runs 3 days a week, so in total he runs 3 * 3 = 9 sprints a week. ******
Gen:  Step 2: Each sprint is 60 meters. ******
Gen:  Step 2: He runs 60 meters each sprint. ******
Gen:  Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ******
Gen:  Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ******
Gen:  Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ******
Gen:  Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ******
Added Probs: [(-1.3862943649291992, 26), (-1.3862943649291992, 26), (-7.152077674865723, 30), (-7.811995029449463, 32), (-1.6557369232177734, 13), (-5.01667594909668, 14), (-1.3862943649291992, 26), (-1.3862943649291992, 26), (-1.3862943649291992, 26), (-1.3862943649291992, 26)]
Cluster Indices: {0: [5], 1: [0, 1, 6, 7, 8, 9], 2: [2], 3: [4], 4: [3]}
Selected Indexes: [5, 0, 2, 4, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.46s/it, est. speed input: 798.69 toks/s, output: 32.19 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.33it/s, est. speed input: 2202.19 toks/s, output: 99.07 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.04it/s, est. speed input: 3574.06 toks/s, output: 169.03 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.655759822926484 sec
Gen:  Step 3: So, he runs 3 * 60 = 180 meters per day. ******
Gen:  Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ******
Gen:  Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ******
Gen:  Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ******
Gen:  Step 3: Each sprint is 60 meters, so he runs 9 * 60 = 540 meters a week. ******
Gen:  Step 3: Each sprint is 60 meters, so the total distance he runs per week is 9 * 60 = 540 meters. ******
Gen:  Step 3: So, the total distance he runs per week is 3 * 60 = 180 meters. ******
Gen:  Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ******
Gen:  Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ******
Gen:  Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ******
Added Probs: [(-4.93377149105072, 22), (-5.154599279165268, 25), (-1.995374321937561, 30), (-1.995374321937561, 30), (-5.30536150932312, 28), (-7.492102324962616, 32), (-5.940858364105225, 26), (-8.112035125494003, 25), (-2.9584905356168747, 30), (-2.9584905356168747, 30)]
Cluster Indices: {0: [5, 8, 9], 1: [4], 2: [0, 1], 3: [2, 3], 4: [6, 7]}
Selected Indexes: [8, 4, 1, 2, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.15s/it, est. speed input: 1056.70 toks/s, output: 22.63 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.89it/s, est. speed input: 2973.16 toks/s, output: 75.16 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.51it/s, est. speed input: 3437.24 toks/s, output: 109.68 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.86it/s, est. speed input: 3437.24 toks/s, output: 109.68 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7624917399371043 sec
Gen:  Step 4: The answer is #### 540. ******
Gen:  Step 4: The answer is #### 540. ******
Gen:  Step 4: The answer is #### 540. ******
Gen:  Step 4: The answer is #### 540. ******
Gen:  Step 4: Since he runs 3 days a week, the total meters he runs in a week is 3 * 180 = 540 meters. ******
Gen:  Step 4: Since he does this for 7 days a week, the total number of meters he runs is 7 * 180 = 1260 meters. ******
Gen:  Step 4: The answer is #### 540. ******
Gen:  Step 4: The answer is #### 540. ******
Gen:  Step 4: The answer is #### 180. ******
Gen:  Step 4: Since he runs 3 times a week, the total distance he runs is 180 * 3 = 540 meters. ******
Added Probs: [(0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (-14.431455254554749, 34), (-24.56932258605957, 36), (0.0, 13), (0.0, 13), (-1.8963079452514648, 13), (-15.947615146636963, 31)]
Cluster Indices: {0: [5], 1: [6, 7], 2: [0, 1, 2, 3], 3: [8, 9], 4: [4]}
Selected Indexes: [5, 6, 0, 8, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.23it/s, est. speed input: 1502.80 toks/s, output: 2.46 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.16it/s, est. speed input: 4304.87 toks/s, output: 28.23 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.31it/s, est. speed input: 5265.68 toks/s, output: 51.73 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.1877314030425623 sec
Gen:  Step 5: The answer is #### 1260. ******
Gen:  Step 5: The answer is #### 1260. ******
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen:  Step 5: The answer is #### 540. ******
Gen:  Step 5: The answer is #### 540. ******
Added Probs: [(0.0, 14), (0.0, 14), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 2, 8]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he does this for 7 days a week, the total number of meters he runs is 7 * 180 = 1260 meters. ****** Step 5: The answer is #### 1260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he does this for 7 days a week, the total number of meters he runs is 7 * 180 = 1260 meters. ****** Step 5: The answer is #### 1260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints 3 times a week. ****** Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints 3 times a week. ****** Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per day. ****** Step 2: He runs 3 days a week, so in total he runs 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per day. ****** Step 2: He runs 3 days a week, so in total he runs 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: Each sprint is 60 meters. ****** Step 3: So, the total distance he runs per week is 3 * 60 = 180 meters. ****** Step 4: The answer is #### 180. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: Each sprint is 60 meters. ****** Step 3: So, the total distance he runs per week is 3 * 60 = 180 meters. ****** Step 4: The answer is #### 180. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he runs 3 days a week, the total meters he runs in a week is 3 * 180 = 540 meters. ****** Step 5: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he runs 3 days a week, the total meters he runs in a week is 3 * 180 = 540 meters. ****** Step 5: The answer is #### 540. ******']
Answer Probs: [[{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {9390: Logprob(logprob=0.0, rank=1, decoded_token='126')}, {15: Logprob(logprob=0.0, rank=1, decoded_token='0')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {9390: Logprob(logprob=0.0, rank=1, decoded_token='126')}, {15: Logprob(logprob=0.0, rank=1, decoded_token='0')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {17048: Logprob(logprob=0.0, rank=1, decoded_token='540')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {17048: Logprob(logprob=0.0, rank=1, decoded_token='540')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 7.146941693034023
>> Answer lists: ['1260', '1260', '540', '540', '540', '540', '180', '180', '540', '540']
>> Original Correct: 540, True
>> Soft SC  Correct: 540, True
>> Golden    Answer: 540
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s, est. speed input: 1263.66 toks/s, output: 244.97 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s, est. speed input: 1263.66 toks/s, output: 244.97 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.9595430810004473 sec
Added Probs: [(-0.8395949006080627, 24), (-0.8395949006080627, 24), (-0.8395949006080627, 24), (-0.8395949006080627, 24), (-0.8395949006080627, 24), (-1.3395949006080627, 22), (-1.3395949006080627, 22), (-1.3395949006080627, 22), (-3.161880850791931, 19), (-3.7907389402389526, 29)]
Cluster Indices: {0: [5, 6, 7], 1: [9], 2: [8], 3: [0, 1, 2, 3, 4], 4: []}
Selected Indexes: [5, 9, 8, 0, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.28s/it, est. speed input: 960.86 toks/s, output: 26.58 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.99it/s, est. speed input: 3036.09 toks/s, output: 100.48 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.95it/s, est. speed input: 3624.78 toks/s, output: 126.70 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7090695640072227 sec
Gen:  Step 2: She gives 25 cups of feed in the afternoon. ******
Gen:  Step 2: She gives 25 cups of feed in the afternoon. ******
Gen:  Step 2: So, the total amount of feed needed per day is 20 * 3 = 60 cups. ******
Gen:  Step 2: So, the total feed needed for the day is 20 chickens * 3 cups/chicken = 60 cups. ******
Gen:  Step 2: In the morning, she gives them 15 cups of feed. ******
Gen:  Step 2: Each chicken needs 3 cups of feed, so the total feed needed per meal is 20 * 3 = 60 cups. ******
Gen:  Step 2: She gives her chickens 25 cups of feed in the afternoon. ******
Gen:  Step 2: She gives them another 25 cups of feed in the afternoon. ******
Gen:  Step 2: She gives 25 cups of feed in the afternoon. ******
Gen:  Step 2: She gives 25 cups of feed in the afternoon. ******
Added Probs: [(0.0, 17), (0.0, 17), (-6.809253215789795, 27), (-7.251251578330994, 30), (-2.676568627357483, 19), (-7.910082221031189, 33), (-3.0038580894470215, 19), (-4.0115742683410645, 19), (0.0, 17), (0.0, 17)]
Cluster Indices: {0: [5], 1: [0, 1, 8, 9], 2: [4], 3: [2, 3], 4: [6, 7]}
Selected Indexes: [5, 0, 4, 3, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.41s/it, est. speed input: 890.98 toks/s, output: 28.31 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.46it/s, est. speed input: 2479.70 toks/s, output: 86.14 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.12it/s, est. speed input: 3691.15 toks/s, output: 140.20 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.95it/s, est. speed input: 3691.15 toks/s, output: 140.20 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7091944859130308 sec
Gen:  Step 3: In the morning, she gives 15 cups of feed. ******
Gen:  Step 3: She gives 15 cups in the morning and 25 cups in the afternoon. ******
Gen:  Step 3: In total, she has given 15 + 25 = 40 cups of feed so far. ******
Gen:  Step 3: She needs to give 3 cups of feed to each of the 20 chickens. ******
Gen:  Step 3: In the afternoon, she gives them 25 cups of feed. ******
Gen:  Step 3: Each chicken gets 3 cups of feed, so 20 chickens will need 20 * 3 = 60 cups of feed. ******
Gen:  Step 3: She has already given 15 cups in the morning and 25 cups in the afternoon. ******
Gen:  Step 3: In the morning, she gave 15 cups of feed. ******
Gen:  Step 3: In total, she has given her chickens 15 + 25 = 40 cups of feed so far. ******
Gen:  Step 3: She gives her chickens 3 cups of feed per chicken, and there are 20 chickens in total. ******
Added Probs: [(-5.0114733427762985, 18), (-8.791347205638885, 22), (-3.0865302085876465, 26), (-19.428138971328735, 23), (-2.7155274152755737, 19), (-18.678828835487366, 33), (-6.38695764541626, 24), (-9.857072174549103, 18), (-3.837664783000946, 28), (-22.61335176229477, 27)]
Cluster Indices: {0: [0, 1, 5], 1: [6, 7], 2: [3, 9], 3: [2, 8], 4: [4]}
Selected Indexes: [0, 6, 3, 2, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.32s/it, est. speed input: 968.39 toks/s, output: 27.30 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.45it/s, est. speed input: 1627.45 toks/s, output: 54.33 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.97it/s, est. speed input: 2051.68 toks/s, output: 80.77 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.71it/s, est. speed input: 2524.75 toks/s, output: 109.30 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.84it/s, est. speed input: 2728.20 toks/s, output: 132.73 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.14it/s, est. speed input: 2728.20 toks/s, output: 132.73 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.347193005029112 sec
Gen:  Step 4: In the afternoon, she gives 25 cups of feed. ******
Gen:  Step 4: In the afternoon, she gives 25 cups of feed. ******
Gen:  Step 4: To find out how many cups she needs to give in the final meal, subtract the total cups given so far from the total cups needed for the day: 60 - (15 + 25) = 60 - 40 = 20 cups. ******
Gen:  Step 4: She still needs to give 60 - (15 + 25) = 60 - 40 = 20 cups of feed. ******
Gen:  Step 4: So, in total, she needs to give 20 * 3 = 60 cups of feed. ******
Gen:  Step 4: She has already given 15 + 25 = 40 cups of feed. ******
Gen:  Step 4: She needs to give feed to 20 chickens, and each chicken needs 3 cups of feed. ******
Gen:  Step 4: Since she needs to give 3 cups of feed per chicken, and she has 20 chickens, she needs to give 20 * 3 = 60 cups of feed in total. ******
Gen:  Step 4: In total, she has given them 15 + 25 = 40 cups of feed so far. ******
Gen:  Step 4: She gives 3 cups of feed per chicken, so for 20 chickens, she gives 20 * 3 = 60 cups of feed in total. ******
Added Probs: [(0.0, 18), (0.0, 18), (-14.361960530281067, 57), (-15.836016297340393, 33), (-10.827795505523682, 27), (-10.990111589431763, 22), (-12.05404245853424, 26), (-15.972367286682129, 44), (-5.033793687820435, 27), (-28.571627140045166, 38)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1, 9], 4: [8]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.19s/it, est. speed input: 1133.63 toks/s, output: 21.88 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.58it/s, est. speed input: 1841.00 toks/s, output: 48.76 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.59it/s, est. speed input: 3335.21 toks/s, output: 108.92 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.39it/s, est. speed input: 3433.92 toks/s, output: 129.42 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.63it/s, est. speed input: 3433.92 toks/s, output: 129.42 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.912824930041097 sec
Gen:  Step 5: She has already given 15 + 25 = 40 cups of feed. ******
Gen:  Step 5: She has already given 15 + 25 = 40 cups of feed. ******
Gen:  Step 5: So, she needs to give 20 * 3 = 60 cups of feed in total. ******
Gen:  Step 5: So, in total, she needs to give 20 * 3 = 60 cups of feed. ******
Gen:  Step 5: The answer is #### 20. ******
Gen:  Step 5: The answer is #### 20. ******
Gen:  Step 5: So far, she has given 15 + 25 = 40 cups of feed. ******
Gen:  Step 5: So far, she has given 15 + 25 = 40 cups of feed. ******
Gen:  Step 5: Each chicken needs 3 cups of feed, so for 20 chickens, she needs 20 * 3 = 60 cups of feed. ******
Gen:  Step 5: Since each chicken needs 3 cups of feed, and there are 20 chickens, the total amount of feed needed is 20 * 3 = 60 cups. ******
Added Probs: [(-2.370384931564331, 22), (-2.370384931564331, 22), (-4.918833076953888, 26), (-6.960308030247688, 27), (0.0, 13), (0.0, 13), (-3.776789605617523, 24), (-3.776789605617523, 24), (-15.18961288034916, 35), (-15.211128741502762, 40)]
Cluster Indices: {0: [4, 5], 1: [6, 7, 8], 2: [0, 1], 3: [2, 3], 4: [9]}
Selected Indexes: [4, 6, 0, 2, 9]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.16it/s, est. speed input: 1583.71 toks/s, output: 2.33 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.29it/s, est. speed input: 1699.38 toks/s, output: 35.52 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.12it/s, est. speed input: 2380.68 toks/s, output: 66.49 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.06it/s, est. speed input: 2980.00 toks/s, output: 100.56 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.89it/s, est. speed input: 3065.17 toks/s, output: 117.96 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.30it/s, est. speed input: 3065.17 toks/s, output: 117.96 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.187397301895544 sec
Gen: 
Gen: 
Gen:  Step 6: She still needs to give 60 - 40 = 20 cups of feed in the final meal. ******
Gen:  Step 6: She still needs to give 60 - 40 = 20 cups of feed in the final meal. ******
Gen:  Step 6: She needs to give 60 - 40 = 20 cups of feed in the final meal. ******
Gen:  Step 6: To find out how many cups of feed she needs to give in the final meal, subtract the total cups of feed she has already given from the total cups of feed needed: 60 - 40 = 20. ******
Gen:  Step 6: Since she has already given 40 cups, she needs to give 60 - 40 = 20 cups of feed in the final meal. ******
Gen:  Step 6: Since she has already given 40 cups, she needs to give 60 - 40 = 20 cups in the final meal. ******
Gen:  Step 6: She still needs 60 - 40 = 20 cups of feed for the final meal. ******
Gen:  Step 6: Since she has already given them 40 cups, she still needs 60 - 40 = 20 cups of feed. ******
Added Probs: [(0.0, 1), (0.0, 1), (-6.4028443694114685, 27), (-6.4028443694114685, 27), (-13.972560346126556, 26), (-36.64370933175087, 50), (-2.3212260603904724, 35), (-6.821225881576538, 33), (-22.874168157577515, 25), (-24.600374579429626, 31)]
Cluster Indices: {0: [5], 1: [4, 6, 7], 2: [8, 9], 3: [0, 1], 4: [2, 3]}
Selected Indexes: [5, 6, 9, 0, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.10it/s, est. speed input: 1501.43 toks/s, output: 2.21 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.76it/s, est. speed input: 2202.61 toks/s, output: 22.61 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.04it/s, est. speed input: 5485.24 toks/s, output: 85.57 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2565729460911825 sec
Gen:  Step 7: The answer is #### 20. ******
Gen:  Step 7: The answer is #### 20. ******
Gen:  Step 7: The answer is #### 20. ******
Gen:  Step 7: The answer is #### 20. ******
Gen:  Step 7: The answer is #### 20. ******
Gen:  Step 7: The answer is #### 20. ******
Gen: 
Gen: 
Gen:  Step 7: The answer is #### 20. ******
Gen:  Step 7: The answer is #### 20. ******
Added Probs: [(0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: She needs to give 3 cups of feed to each of the 20 chickens. ****** Step 4: So, in total, she needs to give 20 * 3 = 60 cups of feed. ****** Step 5: She has already given 15 + 25 = 40 cups of feed. ****** Step 6: To find out how many cups of feed she needs to give in the final meal, subtract the total cups of feed she has already given from the total cups of feed needed: 60 - 40 = 20. ****** Step 7: The answer is #### 20. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: She needs to give 3 cups of feed to each of the 20 chickens. ****** Step 4: So, in total, she needs to give 20 * 3 = 60 cups of feed. ****** Step 5: She has already given 15 + 25 = 40 cups of feed. ****** Step 6: To find out how many cups of feed she needs to give in the final meal, subtract the total cups of feed she has already given from the total cups of feed needed: 60 - 40 = 20. ****** Step 7: The answer is #### 20. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: In total, she has given 15 + 25 = 40 cups of feed so far. ****** Step 4: She needs to give feed to 20 chickens, and each chicken needs 3 cups of feed. ****** Step 5: So, she needs to give 20 * 3 = 60 cups of feed in total. ****** Step 6: Since she has already given 40 cups, she needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: In total, she has given 15 + 25 = 40 cups of feed so far. ****** Step 4: She needs to give feed to 20 chickens, and each chicken needs 3 cups of feed. ****** Step 5: So, she needs to give 20 * 3 = 60 cups of feed in total. ****** Step 6: Since she has already given 40 cups, she needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******', "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: In the morning, she gives them 15 cups of feed. ****** Step 3: In the afternoon, she gives them 25 cups of feed. ****** Step 4: In total, she has given them 15 + 25 = 40 cups of feed so far. ****** Step 5: Since each chicken needs 3 cups of feed, and there are 20 chickens, the total amount of feed needed is 20 * 3 = 60 cups. ****** Step 6: Since she has already given them 40 cups, she still needs 60 - 40 = 20 cups of feed. ****** Step 7: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: In the morning, she gives them 15 cups of feed. ****** Step 3: In the afternoon, she gives them 25 cups of feed. ****** Step 4: In total, she has given them 15 + 25 = 40 cups of feed so far. ****** Step 5: Since each chicken needs 3 cups of feed, and there are 20 chickens, the total amount of feed needed is 20 * 3 = 60 cups. ****** Step 6: Since she has already given them 40 cups, she still needs 60 - 40 = 20 cups of feed. ****** Step 7: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's chickens need 3 cups of feed each, and there are 20 chickens. ****** Step 2: So, the total feed needed for the day is 20 chickens * 3 cups/chicken = 60 cups. ****** Step 3: She has already given 15 cups in the morning and 25 cups in the afternoon. ****** Step 4: To find out how many cups she needs to give in the final meal, subtract the total cups given so far from the total cups needed for the day: 60 - (15 + 25) = 60 - 40 = 20 cups. ****** Step 5: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's chickens need 3 cups of feed each, and there are 20 chickens. ****** Step 2: So, the total feed needed for the day is 20 chickens * 3 cups/chicken = 60 cups. ****** Step 3: She has already given 15 cups in the morning and 25 cups in the afternoon. ****** Step 4: To find out how many cups she needs to give in the final meal, subtract the total cups given so far from the total cups needed for the day: 60 - (15 + 25) = 60 - 40 = 20 cups. ****** Step 5: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: Each chicken needs 3 cups of feed, so the total feed needed per meal is 20 * 3 = 60 cups. ****** Step 3: In the morning, she gives 15 cups of feed. ****** Step 4: In the afternoon, she gives 25 cups of feed. ****** Step 5: So far, she has given 15 + 25 = 40 cups of feed. ****** Step 6: She still needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: Each chicken needs 3 cups of feed, so the total feed needed per meal is 20 * 3 = 60 cups. ****** Step 3: In the morning, she gives 15 cups of feed. ****** Step 4: In the afternoon, she gives 25 cups of feed. ****** Step 5: So far, she has given 15 + 25 = 40 cups of feed. ****** Step 6: She still needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******"]
Answer Probs: [[{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 12.299186089891009
>> Answer lists: ['20', '20', '20', '20', '20', '20', '20', '20', '20', '20']
>> Original Correct: 20, True
>> Soft SC  Correct: 20, True
>> Golden    Answer: 20
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.60s/it, est. speed input: 719.40 toks/s, output: 178.44 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.60s/it, est. speed input: 719.40 toks/s, output: 178.44 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6085494400467724 sec
Added Probs: [(-0.6278396248817444, 20), (-0.6278396248817444, 20), (-0.6278396248817444, 20), (-0.6278396248817444, 20), (-2.695986747741699, 17), (-3.346505492925644, 41), (-3.346505492925644, 41), (-3.844576418399811, 28), (-4.425843507051468, 25), (-12.707034707069397, 54)]
Cluster Indices: {0: [5, 6, 7], 1: [0, 1, 2, 3], 2: [8], 3: [9], 4: [4]}
Selected Indexes: [5, 0, 8, 9, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.62s/it, est. speed input: 723.57 toks/s, output: 35.16 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.64it/s, est. speed input: 2504.37 toks/s, output: 135.07 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.55it/s, est. speed input: 3016.08 toks/s, output: 172.14 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.9814725019969046 sec
Gen:  Step 2: Kylar wants to buy 16 glasses, so the first 8 glasses will cost $5 each, and the remaining 8 glasses will cost $3 each. ******
Gen:  Step 2: Kylar wants to buy 16 glasses, so he will need to buy 8 regular glasses (at $5 each) and 8 discounted glasses (at $3 each). ******
Gen:  Step 2: Every second glass costs 60% of the price, which is 0.6 times the price. ******
Gen:  Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ******
Gen:  Step 2: Every second glass costs 60% of the price, which is 0.6 * $5 = $3. ******
Gen:  Step 2: The second glass costs 60% of $5, which is 0.6 x $5 = $3. ******
Gen:  Step 2: The next 8 glasses will be at a discounted price of 60% of $5, which is 0.6 * $5 = $3. ******
Gen:  Step 2: The next 8 glasses will be at a discounted price of 60% of $5, which is 0.6 * $5 = $3 per glass. ******
Gen:  Step 2: Every second glass costs 60% of the price, which is 0.6 * $5 = $3. ******
Gen:  Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ******
Added Probs: [(-8.701259523630142, 40), (-17.425561726093292, 43), (-7.986263334751129, 27), (-8.095078229904175, 30), (-5.445624768733978, 30), (-6.970257043838501, 30), (-5.580204486846924, 38), (-6.400652676820755, 40), (-2.4256208539009094, 30), (-4.552144348621368, 30)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [6, 7], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 3, 6, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.49s/it, est. speed input: 833.55 toks/s, output: 33.47 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.86it/s, est. speed input: 1943.99 toks/s, output: 93.85 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.61it/s, est. speed input: 2565.17 toks/s, output: 145.74 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.11it/s, est. speed input: 2565.17 toks/s, output: 145.74 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.386792026925832 sec
Gen:  Step 3: Kylar wants to buy 16 glasses, so the first 8 glasses will cost $5 each, and the remaining 8 glasses will cost $3 each. ******
Gen:  Step 3: Kylar wants to buy 16 glasses, so he will need to buy 8 regular glasses ($5 each) and 8 discounted glasses ($3 each). ******
Gen:  Step 3: So, the cost of the first 8 glasses is 8 x $5 = $40. ******
Gen:  Step 3: So, the cost of 16 glasses is: 8 glasses at $5 each = 8 x $5 = $40 8 glasses at $3 each = 8 x $3 = $24 Total cost = $40 + $24 = $64 ******
Gen:  Step 3: The cost of the next 8 glasses will be 8 * $3 = $24. ******
Gen:  Step 3: The cost of the next 8 glasses will be 8 * $3 = $24. ******
Gen:  Step 3: The total cost of the first 8 glasses is 8 * $5 = $40. ******
Gen:  Step 3: The cost of the first 8 glasses is 8 * $5 = $40. ******
Gen:  Step 3: Kylar wants to buy 16 glasses, so the first 8 glasses will cost $5 each, and the remaining 8 glasses will cost $3 each. ******
Gen:  Step 3: Kylar wants to buy 16 glasses, so he will need to buy 8 regular glasses (at $5 each) and 8 discounted glasses (at $3 each). ******
Added Probs: [(-9.140857636928558, 40), (-26.66715171933174, 39), (-8.624547064304352, 26), (-15.16963666677475, 59), (-0.6042400002479553, 25), (-0.6042400002479553, 25), (-1.1606130301952362, 25), (-3.410612940788269, 24), (-12.760174736380577, 40), (-28.108588457107544, 43)]
Cluster Indices: {0: [4, 5], 1: [0, 6, 7, 8], 2: [2], 3: [1, 9], 4: [3]}
Selected Indexes: [4, 6, 2, 9, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.16s/it, est. speed input: 1086.52 toks/s, output: 22.38 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.53it/s, est. speed input: 1704.02 toks/s, output: 50.62 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.79it/s, est. speed input: 3505.43 toks/s, output: 130.41 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.80it/s, est. speed input: 3505.43 toks/s, output: 130.41 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7991746679181233 sec
Gen:  Step 4: In total, Kylar needs to pay $40 + $24 = $64. ******
Gen:  Step 4: To find the total cost, add the cost of the first 8 glasses and the next 8 glasses: $40 + $24 = $64. ******
Gen:  Step 4: The total cost of the remaining 8 glasses is 8 * $3 = $24. ******
Gen:  Step 4: The total cost of the remaining 8 glasses is 8 * $3 = $24. ******
Gen:  Step 4: The cost of the remaining 8 glasses is 8 x $3 = $24. ******
Gen:  Step 4: The cost of the remaining 8 glasses is 8 x $3 = $24. ******
Gen:  Step 4: The total cost of the regular glasses is 8 * $5 = $40. ******
Gen:  Step 4: The total cost of the 8 regular glasses is 8 * $5 = $40. ******
Gen:  Step 4: The answer is #### 64. ******
Gen:  Step 4: The answer is #### 64. ******
Added Probs: [(-6.262373447418213, 24), (-8.06003713607788, 37), (0.0, 25), (0.0, 25), (0.0, 24), (0.0, 24), (-1.007716178894043, 23), (-6.007716178894043, 25), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [0, 1], 2: [6, 7], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 1, 6, 2, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1529.22 toks/s, output: 2.40 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.86it/s, est. speed input: 2218.80 toks/s, output: 24.06 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.41it/s, est. speed input: 2682.61 toks/s, output: 51.59 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.39it/s, est. speed input: 2744.59 toks/s, output: 73.71 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  3.08it/s, est. speed input: 3168.61 toks/s, output: 112.65 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.48it/s, est. speed input: 3168.61 toks/s, output: 112.65 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.027717133052647 sec
Gen:  Step 5: In total, Kylar needs to pay $40 + $24 = $64. ******
Gen:  Step 5: The total cost is the sum of the cost of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ******
Gen:  Step 5: The answer is #### 64. ******
Gen:  Step 5: The answer is #### 64. ******
Gen:  Step 5: The total cost of the discounted glasses is 8 * $3 = $24. ******
Gen:  Step 5: The total cost of the discounted glasses is 8 * $3 = $24. ******
Gen:  Step 5: The total amount Kylar needs to pay is the sum of the costs of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ******
Gen:  Step 5: The total amount Kylar needs to pay is the sum of the costs of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ******
Gen: 
Gen: 
Added Probs: [(-4.12969708442688, 24), (-4.893830418586731, 39), (0.0, 13), (0.0, 13), (0.0, 23), (0.0, 23), (-13.215296268463135, 45), (-13.215296268463135, 45), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [8, 9], 3: [6, 7], 4: [0, 1]}
Selected Indexes: [4, 2, 8, 6, 1]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.18it/s, est. speed input: 1561.21 toks/s, output: 2.37 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.94it/s, est. speed input: 3347.26 toks/s, output: 25.59 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.20it/s, est. speed input: 4466.47 toks/s, output: 71.41 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.43it/s, est. speed input: 4466.47 toks/s, output: 71.41 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.4699669550172985 sec
Gen:  Step 6: The total cost of all 16 glasses is $40 + $24 = $64. ******
Gen:  Step 6: The total cost of all 16 glasses is $40 + $24 = $64. ******
Gen: 
Gen: 
Gen: 
Gen: 
Gen:  Step 6: The answer is #### 64. ******
Gen:  Step 6: The answer is #### 64. ******
Gen:  Step 6: The answer is #### 64. ******
Gen:  Step 6: The answer is #### 64. ******
Added Probs: [(-1.879570484161377, 24), (-1.879570484161377, 24), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 1], 3: [6, 7], 4: [8, 9]}
Selected Indexes: [4, 2, 0, 6, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.17it/s, est. speed input: 1493.77 toks/s, output: 2.34 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  5.15it/s, est. speed input: 5612.31 toks/s, output: 29.11 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.28it/s, est. speed input: 5612.31 toks/s, output: 29.11 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.181187400012277 sec
Gen: 
Gen: 
Gen: 
Gen: 
Gen:  Step 7: The answer is #### 64. ******
Gen:  Step 7: The answer is #### 64. ******
Gen: 
Gen: 
Gen: 
Gen: 
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [6, 7], 3: [8, 9], 4: [0, 1]}
Selected Indexes: [4, 2, 6, 8, 0]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of 16 glasses is: 8 glasses at $5 each = 8 x $5 = $40 8 glasses at $3 each = 8 x $3 = $24 Total cost = $40 + $24 = $64 ****** Step 4: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of 16 glasses is: 8 glasses at $5 each = 8 x $5 = $40 8 glasses at $3 each = 8 x $3 = $24 Total cost = $40 + $24 = $64 ****** Step 4: The answer is #### 64. ******', "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Let's calculate the cost of the first 8 glasses (since the 9th glass onwards will be at a discounted price). 8 glasses at $5 each will cost 8 * $5 = $40. ****** Step 2: The next 8 glasses will be at a discounted price of 60% of $5, which is 0.6 * $5 = $3. ****** Step 3: The cost of the next 8 glasses will be 8 * $3 = $24. ****** Step 4: To find the total cost, add the cost of the first 8 glasses and the next 8 glasses: $40 + $24 = $64. ****** Step 5: The answer is #### 64. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Let's calculate the cost of the first 8 glasses (since the 9th glass onwards will be at a discounted price). 8 glasses at $5 each will cost 8 * $5 = $40. ****** Step 2: The next 8 glasses will be at a discounted price of 60% of $5, which is 0.6 * $5 = $3. ****** Step 3: The cost of the next 8 glasses will be 8 * $3 = $24. ****** Step 4: To find the total cost, add the cost of the first 8 glasses and the next 8 glasses: $40 + $24 = $64. ****** Step 5: The answer is #### 64. ******", '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The first glass costs $5. ****** Step 2: Every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 3: Kylar wants to buy 16 glasses, so he will need to buy 8 regular glasses (at $5 each) and 8 discounted glasses (at $3 each). ****** Step 4: The total cost of the regular glasses is 8 * $5 = $40. ****** Step 5: The total cost of the discounted glasses is 8 * $3 = $24. ****** Step 6: The total cost of all 16 glasses is $40 + $24 = $64. ****** Step 7: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The first glass costs $5. ****** Step 2: Every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 3: Kylar wants to buy 16 glasses, so he will need to buy 8 regular glasses (at $5 each) and 8 discounted glasses (at $3 each). ****** Step 4: The total cost of the regular glasses is 8 * $5 = $40. ****** Step 5: The total cost of the discounted glasses is 8 * $3 = $24. ****** Step 6: The total cost of all 16 glasses is $40 + $24 = $64. ****** Step 7: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: One glass costs $5, but every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 2: Kylar wants to buy 16 glasses, so the first 8 glasses will cost $5 each, and the remaining 8 glasses will cost $3 each. ****** Step 3: The total cost of the first 8 glasses is 8 * $5 = $40. ****** Step 4: The total cost of the remaining 8 glasses is 8 * $3 = $24. ****** Step 5: The total amount Kylar needs to pay is the sum of the costs of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: One glass costs $5, but every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 2: Kylar wants to buy 16 glasses, so the first 8 glasses will cost $5 each, and the remaining 8 glasses will cost $3 each. ****** Step 3: The total cost of the first 8 glasses is 8 * $5 = $40. ****** Step 4: The total cost of the remaining 8 glasses is 8 * $3 = $24. ****** Step 5: The total amount Kylar needs to pay is the sum of the costs of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of the first 8 glasses is 8 x $5 = $40. ****** Step 4: The cost of the remaining 8 glasses is 8 x $3 = $24. ****** Step 5: The total cost is the sum of the cost of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of the first 8 glasses is 8 x $5 = $40. ****** Step 4: The cost of the remaining 8 glasses is 8 x $3 = $24. ****** Step 5: The total cost is the sum of the cost of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1227: Logprob(logprob=0.0, rank=1, decoded_token='64')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1227: Logprob(logprob=0.0, rank=1, decoded_token='64')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 12.67651132598985
>> Answer lists: ['64', '64', '64', '64', '64', '64', '64', '64', '64', '64']
>> Original Correct: 64, True
>> Soft SC  Correct: 64, True
>> Golden    Answer: 64
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.22s/it, est. speed input: 937.53 toks/s, output: 195.73 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.22s/it, est. speed input: 937.53 toks/s, output: 195.73 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.2195943280821666 sec
Added Probs: [(-0.9481539726257324, 16), (-0.9481539726257324, 16), (-0.9481539726257324, 16), (-1.4481539726257324, 16), (-1.4481539726257324, 16), (-1.4481539726257324, 16), (-2.6000328063964844, 34), (-2.8500328063964844, 34), (-2.8500328063964844, 34), (-4.426449298858643, 40)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5], 1: [6, 7, 8, 9], 2: [], 3: [], 4: []}
Selected Indexes: [0, 6, 1, 2, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.60s/it, est. speed input: 721.64 toks/s, output: 37.46 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.07it/s, est. speed input: 3560.80 toks/s, output: 185.47 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.6391068570083007 sec
Gen:  Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******
Gen:  Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******
Gen: 

Step 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******
Gen: 

Step 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******
Gen:  Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******
Gen:  Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******
Gen:  Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******
Gen:  Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******
Gen:  Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******
Gen:  Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******
Added Probs: [(-1.778402328491211, 30), (-1.778402328491211, 30), (0.0, 31), (0.0, 31), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30)]
Cluster Indices: {0: [0, 1, 4, 5, 6, 7, 8, 9], 1: [2, 3], 2: [], 3: [], 4: []}
Selected Indexes: [0, 2, 1, 4, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.53s/it, est. speed input: 788.73 toks/s, output: 35.37 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.11it/s, est. speed input: 3696.96 toks/s, output: 182.73 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.620192353031598 sec
Gen:  Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******
Gen:  Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******
Gen: 

Step 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******
Gen: 

Step 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******
Gen:  Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******
Gen:  Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******
Gen:  Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******
Gen:  Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******
Gen:  Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******
Gen:  Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******
Added Probs: [(0.0, 30), (0.0, 30), (-3.795611411333084, 27), (-6.079780161380768, 27), (0.0, 30), (0.0, 30), (0.0, 30), (0.0, 30), (0.0, 30), (0.0, 30)]
Cluster Indices: {0: [0, 1, 4, 5, 6, 7, 8, 9], 1: [3], 2: [2], 3: [], 4: []}
Selected Indexes: [0, 3, 2, 1, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.47s/it, est. speed input: 829.29 toks/s, output: 32.73 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.81it/s, est. speed input: 2774.98 toks/s, output: 121.71 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.80it/s, est. speed input: 3425.68 toks/s, output: 159.81 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.7946324619697407 sec
Gen:  Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ******
Gen:  Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ******
Gen: 

Step 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******
Gen: 

Step 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******
Gen: 

Step 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******
Gen: 

Step 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******
Gen:  Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ******
Gen:  Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ******
Gen:  Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ******
Gen:  Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ******
Added Probs: [(-0.9848555326461792, 24), (-0.9848555326461792, 24), (-2.015432357788086, 35), (-2.015432357788086, 35), (-1.9014905095100403, 35), (-5.40149050951004, 36), (-0.9848555326461792, 24), (-0.9848555326461792, 24), (-0.9848555326461792, 24), (-0.9848555326461792, 24)]
Cluster Indices: {0: [4, 5], 1: [0, 1, 6, 7, 8, 9], 2: [2, 3], 3: [], 4: []}
Selected Indexes: [4, 0, 2, 5, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.09s/it, est. speed input: 1165.49 toks/s, output: 18.43 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.27it/s, est. speed input: 4219.64 toks/s, output: 75.44 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.19it/s, est. speed input: 5280.20 toks/s, output: 98.90 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.2048189790220931 sec
Gen: 

The answer is #### 260. ******
Gen: 

Step 5: The answer is #### 260. ******
Gen:  Step 5: The answer is #### 260. ******
Gen:  Step 5: The answer is #### 260. ******
Gen: 

Step 5: The answer is #### 260. ******
Gen: 

Step 5: The answer is #### 260. ******
Gen: 

The answer is #### 260. ******
Gen: 

The answer is #### 260. ******
Gen: 

The answer is #### 260. ******
Gen: 

The answer is #### 260. ******
Added Probs: [(-2.87969708442688, 10), (-4.12969708442688, 14), (0.0, 13), (0.0, 13), (0.0, 14), (0.0, 14), (-1.2596452236175537, 10), (-1.2596452236175537, 10), (-1.2596452236175537, 10), (-1.2596452236175537, 10)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 6, 7, 8, 9], 3: [1], 4: []}
Selected Indexes: [4, 2, 0, 1, 5]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\n\nStep 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Seattle has 20 sheep. ****** Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ****** Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ****** Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ****** Step 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Seattle has 20 sheep. ****** Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ****** Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ****** Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ****** Step 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\r\n\r\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\r\n\r\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\r\n\r\nStep 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\r\n\r\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\r\n\r\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\r\n\r\nStep 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******']
Answer Probs: [[{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.575939416885376, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=-0.825939416885376, rank=2, decoded_token='Step'), 791: Logprob(logprob=-0.575939416885376, rank=1, decoded_token='The')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=0.0, rank=1, decoded_token='\r\n\r\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=0.0, rank=1, decoded_token='\r\n\r\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 7.613646142999642
>> Answer lists: ['260', '260', '260', '260', '260', '260', '260', '260', '260', '260']
>> Original Correct: 260, True
>> Soft SC  Correct: 260, True
>> Golden    Answer: 260
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.45it/s, est. speed input: 1691.90 toks/s, output: 274.70 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.45it/s, est. speed input: 1691.90 toks/s, output: 274.70 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.6915673220064491 sec
Added Probs: [(-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-3.707822322845459, 18)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8], 1: [9], 2: [], 3: [], 4: []}
Selected Indexes: [0, 9, 1, 2, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:07,  1.78s/it, est. speed input: 663.11 toks/s, output: 37.59 toks/s]Processed prompts:  40%|████      | 2/5 [00:02<00:02,  1.10it/s, est. speed input: 1138.12 toks/s, output: 73.63 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.41it/s, est. speed input: 2845.74 toks/s, output: 197.77 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 2.0892431190004572 sec
Gen:  Step 2: She normally downloads 2 GB/minute, so the time it takes to download the file is 200 GB / 2 GB/minute = 100 minutes. ******
Gen:  Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ******
Gen:  Step 2: She normally downloads 2 GB/minute, so the normal download time would be 200 GB / 2 GB/minute = 100 minutes. ******
Gen:  Step 2: She can download 2 GB/minute, so to find the total time needed, we divide 200 by 2. ******
Gen:  Step 2: She normally downloads 2 GB/minute, so the time it takes to download the file is 200 GB / 2 GB/minute = 100 minutes. ******
Gen:  Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ******
Gen:  Step 2: She normally downloads 2 GB/minute, so the time it takes to download the file is 200 GB / 2 GB/minute = 100 minutes. ******
Gen:  Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ******
Gen:  Step 2: She normally downloads 2 GB/minute, so the time it takes to download the file is 200 GB / 2 GB/minute = 100 minutes. ******
Gen:  Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ******
Added Probs: [(-14.20136097073555, 39), (-16.760039508342743, 47), (-17.976228535175323, 36), (-18.14704978466034, 31), (-14.20136097073555, 39), (-16.760039508342743, 47), (-14.20136097073555, 39), (-16.760039508342743, 47), (-14.20136097073555, 39), (-16.760039508342743, 47)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [0, 4, 6, 8], 2: [3], 3: [2], 4: []}
Selected Indexes: [1, 0, 3, 2, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.27s/it, est. speed input: 955.95 toks/s, output: 26.01 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.66it/s, est. speed input: 1732.69 toks/s, output: 52.66 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.16it/s, est. speed input: 2257.98 toks/s, output: 92.48 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.31it/s, est. speed input: 2826.53 toks/s, output: 129.93 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.175306810066104 sec
Gen:  Step 3: But then, 40% of the way through the download, Windows forces a restart, which takes 20 minutes. ******
Gen:  Step 3: But then, 40% of the way through the download, Windows forces a restart. To find 40% of 200 GB, we multiply 200 GB by 0.4, which is 80 GB. ******
Gen:  Step 3: But 40% of the way through the download, Windows forces a restart. ******
Gen:  Step 3: But then Windows forces a restart, which takes 20 minutes. ******
Gen:  Step 3: 200 / 2 = 100 minutes. ******
Gen:  Step 3: 200 ÷ 2 = 100 minutes. ******
Gen:  Step 3: But 40% of the way through the download, Windows forces a restart. ******
Gen:  Step 3: But, 40% of the way through the download, Windows forces a restart. ******
Gen:  Step 3: But then, 40% of the way through the download, Windows forces a restart, which takes 20 minutes. ******
Gen:  Step 3: But then, 40% of the way through the download, Windows forces a restart. To find 40% of 200 GB, we multiply 200 GB by 0.4, which is 80 GB. ******
Added Probs: [(-11.998238280415535, 30), (-15.394706681370735, 51), (-7.623575448989868, 22), (-13.072678819298744, 19), (-1.1606130301952362, 16), (-3.410612940788269, 17), (-10.24505540728569, 22), (-10.762484952807426, 23), (-11.998238280415535, 30), (-15.394706681370735, 51)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [1, 9], 3: [2, 3], 4: [0, 8]}
Selected Indexes: [4, 6, 1, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.42s/it, est. speed input: 867.16 toks/s, output: 28.93 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.54it/s, est. speed input: 1616.96 toks/s, output: 60.91 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.17it/s, est. speed input: 2834.02 toks/s, output: 115.20 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.76it/s, est. speed input: 3451.28 toks/s, output: 148.45 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8252153869252652 sec
Gen:  Step 4: But then Windows forces a restart, which takes 20 minutes. ******
Gen:  Step 4: But then, 40% of the way through, Windows forces a restart. ******
Gen:  Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ******
Gen:  Step 4: 40% of 200 GB is 0.4 x 200 = 80 GB. ******
Gen:  Step 4: So, she has downloaded 80 GB and has 120 GB left to download. ******
Gen:  Step 4: So, she has downloaded 80 GB before the restart. This means she has 200 - 80 = 120 GB left to download. ******
Gen:  Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ******
Gen:  Step 4: 40% of 200 GB is 0.4 x 200 = 80 GB. ******
Gen:  Step 4: So, Carla has to restart the download from the beginning, which means she has to download the entire file again. ******
Gen:  Step 4: This means she has downloaded 40% * 100 = 40 minutes worth of data, which is 40 * 2 = 80 GB. ******
Added Probs: [(-9.330696523189545, 19), (-19.00115144252777, 22), (-2.768475353717804, 26), (-6.768475353717804, 26), (-12.852477610111237, 23), (-15.741808235645294, 35), (-3.1562888622283936, 26), (-7.1562888622283936, 26), (-17.851562798023224, 29), (-31.528457939624786, 37)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 1], 3: [6, 7], 4: [8, 9]}
Selected Indexes: [5, 2, 0, 6, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.46s/it, est. speed input: 853.15 toks/s, output: 30.76 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.46it/s, est. speed input: 1602.65 toks/s, output: 62.51 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.38it/s, est. speed input: 2407.48 toks/s, output: 115.22 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.91it/s, est. speed input: 2777.61 toks/s, output: 143.03 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.17it/s, est. speed input: 2777.61 toks/s, output: 143.03 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.312538299942389 sec
Gen:  Step 5: Since she has to restart the download from the beginning, she has to start again from 0 GB. ******
Gen:  Step 5: Now, she has to restart the download from the beginning, so it's like downloading the entire file again. ******
Gen:  Step 5: So, the download is interrupted after 80 GB, and the remaining 120 GB needs to be downloaded again. ******
Gen:  Step 5: She has to restart the download from the beginning, so she will have to download 80 GB again. ******
Gen:  Step 5: So, the total time needed is 100 + 20 = 120 minutes. ******
Gen:  Step 5: So, the total time is 100 + 20 = 120 minutes. ******
Gen:  Step 5: So, the download is interrupted after 80 GB, and the remaining 120 GB needs to be downloaded again. ******
Gen:  Step 5: She has to download 80 GB again after the restart, so the total time taken to download the file is 100 minutes + (80 GB / 2 GB/minute) = 100 minutes + 40 minutes = 140 minutes. ******
Gen:  Step 5: Since she has already downloaded 40% of the file (0.4 * 200 GB = 80 GB), she only needs to download the remaining 120 GB. ******
Gen:  Step 5: Since she has already downloaded 40% of the file (0.4 * 200 = 80 GB), she only needs to download the remaining 120 GB (200 - 80 = 120). ******
Added Probs: [(-22.251409590244293, 27), (-29.186080992221832, 28), (-36.01693630218506, 29), (-39.60538938641548, 27), (-8.082794025540352, 23), (-15.76187014579773, 22), (-36.98085129261017, 29), (-58.97597387433052, 55), (-26.987846232950687, 41), (-28.5769035294652, 48)]
Cluster Indices: {0: [4, 5], 1: [2, 6, 7], 2: [8, 9], 3: [0, 1], 4: [3]}
Selected Indexes: [4, 6, 9, 0, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.63s/it, est. speed input: 779.71 toks/s, output: 33.74 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.36it/s, est. speed input: 1477.36 toks/s, output: 64.96 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.11it/s, est. speed input: 2054.17 toks/s, output: 99.37 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.43it/s, est. speed input: 2343.53 toks/s, output: 124.39 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.91it/s, est. speed input: 2678.77 toks/s, output: 156.80 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.05it/s, est. speed input: 2678.77 toks/s, output: 156.80 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.4548772879643366 sec
Gen:  Step 6: But she has to restart the download from the beginning, so she has to download 200 GB again. ******
Gen:  Step 6: But then Carla has to restart the download from the beginning, so she has to download the whole file again. ******
Gen:  Step 6: The time it takes to download the remaining 120 GB is 120 GB / 2 GB/minute = 60 minutes. ******
Gen:  Step 6: The download is restarted from the beginning, so Carla has to download the entire 200 GB again. ******
Gen:  Step 6: To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ******
Gen:  Step 6: To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ******
Gen:  Step 6: Now, she has 120 GB left to download, and she can download 2 GB/minute. To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ******
Gen:  Step 6: She can download 2 GB/minute, so to find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ******
Gen:  Step 6: The total download time will be the time it takes to download the first 80 GB, plus the time it takes to download the remaining 120 GB. ******
Gen:  Step 6: This means the total download time will be 100 minutes + 20 minutes (for the restart) + 80 GB / 2 GB/minute = 100 + 20 + 40 = 160 minutes. ******
Added Probs: [(-26.258243769407272, 27), (-33.85634592175484, 28), (-8.531932085752487, 32), (-25.991460040211678, 26), (-1.5115742683410645, 38), (-1.5115742683410645, 38), (-15.503243923187256, 59), (-17.67183816432953, 48), (-27.8835109770298, 37), (-35.63118204474449, 50)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [0, 1], 3: [2, 3], 4: [6, 7]}
Selected Indexes: [4, 9, 0, 2, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.24s/it, est. speed input: 1084.87 toks/s, output: 21.00 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.49it/s, est. speed input: 1745.05 toks/s, output: 47.57 toks/s]Processed prompts:  60%|██████    | 3/5 [00:02<00:01,  1.49it/s, est. speed input: 1816.35 toks/s, output: 72.25 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.13it/s, est. speed input: 2293.98 toks/s, output: 102.02 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.05it/s, est. speed input: 2763.44 toks/s, output: 137.99 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.454680440016091 sec
Gen:  Step 7: Adding the time it took for the initial download (100 minutes) and the time it took for the restart (20 minutes), we get a total of 120 minutes. ******
Gen:  Step 7: Since she has already spent 20 minutes restarting the computer, the total time it takes to download the file is 100 minutes (initial download time) + 20 minutes (restart time) + 60 minutes (remaining download time) = 180 minutes. ******
Gen:  Step 7: The answer is #### 160. ******
Gen:  Step 7: The answer is #### 160. ******
Gen:  Step 7: So, the total time needed is 2 * 120 = 240 minutes. ******
Gen:  Step 7: This means the total time needed is 2 * 120 = 240 minutes. ******
Gen:  Step 7: But this includes the 20 minutes it takes to install the updates, so the actual download time is 60 minutes - 20 minutes = 40 minutes. ******
Gen:  Step 7: Adding the time taken for the initial download and the time taken for the second download, the total time is 100 minutes + 20 minutes (for the restart) + 60 minutes = 180 minutes. ******
Gen:  Step 7: Adding the time it took to download the first 80 GB (40 minutes) and the time it took to download the remaining 120 GB (60 minutes), we get a total time of 40 + 60 = 100 minutes. ******
Gen:  Step 7: But then, she has to add the time it took for the restart, which is 20 minutes. ******
Added Probs: [(-49.73499137163162, 40), (-58.43362212181091, 58), (0.0, 13), (0.0, 13), (-13.816883742809296, 23), (-24.81145343184471, 23), (-28.904458805918694, 38), (-50.09462910890579, 48), (-20.31282451748848, 54), (-40.42322638630867, 27)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 1]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.09it/s, est. speed input: 1473.54 toks/s, output: 2.17 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.74it/s, est. speed input: 2137.52 toks/s, output: 22.36 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.50it/s, est. speed input: 3092.61 toks/s, output: 74.03 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.23it/s, est. speed input: 3092.61 toks/s, output: 74.03 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.255612959037535 sec
Gen:  Step 8: The answer is #### 240. ******
Gen:  Step 8: The answer is #### 240. ******
Gen:  Step 8: Adding the initial download time and the additional download time, the total download time is 100 minutes + 40 minutes = 140 minutes. ******
Gen:  Step 8: The total time it takes to download the file is the time it takes to download the first 80 GB plus the time it takes to download the remaining 120 GB: 40 minutes + 20 minutes = 60 minutes. ******
Gen:  Step 8: The answer is #### 100. ******
Gen:  Step 8: The answer is #### 100. ******
Gen: 
Gen: 
Gen:  Step 8: The answer is #### 180. ******
Gen:  Step 8: The answer is #### 180. ******
Added Probs: [(0.0, 13), (0.0, 13), (-47.83636021614075, 34), (-54.488656520843506, 52), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 3, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.08it/s, est. speed input: 1592.90 toks/s, output: 2.17 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.91it/s, est. speed input: 5694.41 toks/s, output: 27.56 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.05it/s, est. speed input: 5694.41 toks/s, output: 27.56 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2467943510273471 sec
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen:  Step 9: The answer is #### 60. ******
Gen:  Step 9: The answer is #### 60. ******
Gen: 
Gen: 
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (-2.2673614025115967, 13), (-2.2673614025115967, 13), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [8, 9], 4: [0, 1]}
Selected Indexes: [4, 6, 2, 8, 0]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart. To find 40% of 200 GB, we multiply 200 GB by 0.4, which is 80 GB. ****** Step 4: So, she has downloaded 80 GB before the restart. This means she has 200 - 80 = 120 GB left to download. ****** Step 5: Since she has to restart the download from the beginning, she has to start again from 0 GB. ****** Step 6: Now, she has 120 GB left to download, and she can download 2 GB/minute. To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Adding the time it took to download the first 80 GB (40 minutes) and the time it took to download the remaining 120 GB (60 minutes), we get a total time of 40 + 60 = 100 minutes. ****** Step 8: The answer is #### 100. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart. To find 40% of 200 GB, we multiply 200 GB by 0.4, which is 80 GB. ****** Step 4: So, she has downloaded 80 GB before the restart. This means she has 200 - 80 = 120 GB left to download. ****** Step 5: Since she has to restart the download from the beginning, she has to start again from 0 GB. ****** Step 6: Now, she has 120 GB left to download, and she can download 2 GB/minute. To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Adding the time it took to download the first 80 GB (40 minutes) and the time it took to download the remaining 120 GB (60 minutes), we get a total time of 40 + 60 = 100 minutes. ****** Step 8: The answer is #### 100. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She normally downloads 2 GB/minute, so the normal download time would be 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: She has to restart the download from the beginning, so she will have to download 80 GB again. ****** Step 6: This means the total download time will be 100 minutes + 20 minutes (for the restart) + 80 GB / 2 GB/minute = 100 + 20 + 40 = 160 minutes. ****** Step 7: The answer is #### 160. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She normally downloads 2 GB/minute, so the normal download time would be 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: She has to restart the download from the beginning, so she will have to download 80 GB again. ****** Step 6: This means the total download time will be 100 minutes + 20 minutes (for the restart) + 80 GB / 2 GB/minute = 100 + 20 + 40 = 160 minutes. ****** Step 7: The answer is #### 160. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She can download 2 GB/minute, so to find the total time needed, we divide 200 by 2. ****** Step 3: 200 / 2 = 100 minutes. ****** Step 4: But then Windows forces a restart, which takes 20 minutes. ****** Step 5: So, the total time needed is 100 + 20 = 120 minutes. ****** Step 6: But she has to restart the download from the beginning, so she has to download 200 GB again. ****** Step 7: So, the total time needed is 2 * 120 = 240 minutes. ****** Step 8: The answer is #### 240. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She can download 2 GB/minute, so to find the total time needed, we divide 200 by 2. ****** Step 3: 200 / 2 = 100 minutes. ****** Step 4: But then Windows forces a restart, which takes 20 minutes. ****** Step 5: So, the total time needed is 100 + 20 = 120 minutes. ****** Step 6: But she has to restart the download from the beginning, so she has to download 200 GB again. ****** Step 7: So, the total time needed is 2 * 120 = 240 minutes. ****** Step 8: The answer is #### 240. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She normally downloads 2 GB/minute, so the time it takes to download the file is 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: So, the download is interrupted after 80 GB, and the remaining 120 GB needs to be downloaded again. ****** Step 6: The time it takes to download the remaining 120 GB is 120 GB / 2 GB/minute = 60 minutes. ****** Step 7: But this includes the 20 minutes it takes to install the updates, so the actual download time is 60 minutes - 20 minutes = 40 minutes. ****** Step 8: The total time it takes to download the file is the time it takes to download the first 80 GB plus the time it takes to download the remaining 120 GB: 40 minutes + 20 minutes = 60 minutes. ****** Step 9: The answer is #### 60. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She normally downloads 2 GB/minute, so the time it takes to download the file is 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: So, the download is interrupted after 80 GB, and the remaining 120 GB needs to be downloaded again. ****** Step 6: The time it takes to download the remaining 120 GB is 120 GB / 2 GB/minute = 60 minutes. ****** Step 7: But this includes the 20 minutes it takes to install the updates, so the actual download time is 60 minutes - 20 minutes = 40 minutes. ****** Step 8: The total time it takes to download the file is the time it takes to download the first 80 GB plus the time it takes to download the remaining 120 GB: 40 minutes + 20 minutes = 60 minutes. ****** Step 9: The answer is #### 60. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart, which takes 20 minutes. ****** Step 4: So, Carla has to restart the download from the beginning, which means she has to download the entire file again. ****** Step 5: Since she has already downloaded 40% of the file (0.4 * 200 = 80 GB), she only needs to download the remaining 120 GB (200 - 80 = 120). ****** Step 6: To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Since she has already spent 20 minutes restarting the computer, the total time it takes to download the file is 100 minutes (initial download time) + 20 minutes (restart time) + 60 minutes (remaining download time) = 180 minutes. ****** Step 8: The answer is #### 180. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart, which takes 20 minutes. ****** Step 4: So, Carla has to restart the download from the beginning, which means she has to download the entire file again. ****** Step 5: Since she has already downloaded 40% of the file (0.4 * 200 = 80 GB), she only needs to download the remaining 120 GB (200 - 80 = 120). ****** Step 6: To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Since she has already spent 20 minutes restarting the computer, the total time it takes to download the file is 100 minutes (initial download time) + 20 minutes (restart time) + 60 minutes (remaining download time) = 180 minutes. ****** Step 8: The answer is #### 180. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {24: Logprob(logprob=0.0, rank=1, decoded_token='9')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1399: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='60')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {24: Logprob(logprob=0.0, rank=1, decoded_token='9')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1399: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='60')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 17.822308050934225
>> Answer lists: ['100', '100', '160', '160', '240', '240', '60', '60', '180', '180']
>> Original Correct: 100, False
>> Soft SC  Correct: 100, False
>> Golden    Answer: 160
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:04<00:00,  4.24s/it, est. speed input: 283.18 toks/s, output: 99.58 toks/s]Processed prompts: 100%|██████████| 1/1 [00:04<00:00,  4.24s/it, est. speed input: 283.18 toks/s, output: 99.58 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 4.2410467739682645 sec
Added Probs: [(-1.2128104269504547, 21), (-1.2128104269504547, 21), (-1.2128104269504547, 21), (-1.523741990327835, 24), (-1.523741990327835, 24), (-2.6587229818105698, 37), (-2.8847236931324005, 37), (-2.8847236931324005, 37), (-4.5674896240234375, 40), (-12.368481203913689, 160)]
Cluster Indices: {0: [5], 1: [3, 4], 2: [9], 3: [0, 1, 2], 4: [6, 7, 8]}
Selected Indexes: [5, 3, 9, 0, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1635.38 toks/s, output: 2.40 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.51it/s, est. speed input: 1872.27 toks/s, output: 31.19 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.24it/s, est. speed input: 2437.12 toks/s, output: 63.19 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.76it/s, est. speed input: 2801.00 toks/s, output: 87.22 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.67it/s, est. speed input: 3349.27 toks/s, output: 120.02 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8940626739058644 sec
Gen: 

Step 2: He turns around and spends the first 2 hours in standstill traffic, so he doesn't move. ******
Gen:  Step 2: He then turns around and drives for 2 hours in standstill traffic, so his distance remains the same. ******
Gen:  Step 2: He covers a distance of 3 * 60 = 180 miles. ******
Gen: 

Distance = Speed * Time = 60 * 3 = 180 miles

Step 2: He then turns around and tries to get home in 4 hours. ******
Gen: 
Gen: 
Gen:  Step 2: He covers a distance of 3 * 60 = 180 miles. ******
Gen:  
Distance covered = Speed * Time = 60 * 3 = 180 miles. ******
Gen: 

Step 2: He turns around and tries to get home in 4 hours. He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ******
Gen: 

Step 2: He turns around and spends the first 2 hours in standstill traffic, so he doesn't move. ******
Added Probs: [(-10.791451245546341, 28), (-15.048938155174255, 28), (-7.545492649078369, 21), (-8.108418017625809, 37), (0.0, 1), (0.0, 1), (-5.950574308633804, 21), (-9.667573660612106, 20), (-5.839049518108368, 40), (-9.93534243106842, 28)]
Cluster Indices: {0: [4, 5], 1: [2, 6], 2: [0, 1, 8, 9], 3: [7], 4: [3]}
Selected Indexes: [4, 6, 8, 7, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1632.66 toks/s, output: 2.40 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.54it/s, est. speed input: 1922.43 toks/s, output: 31.04 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.41it/s, est. speed input: 2582.33 toks/s, output: 60.48 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.74it/s, est. speed input: 3546.63 toks/s, output: 120.09 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.78it/s, est. speed input: 3546.63 toks/s, output: 120.09 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8101704770233482 sec
Gen: 
Gen: 
Gen:  Step 3: Then he spends 2 hours in standstill traffic, so he doesn't cover any distance. ******
Gen:  Step 3: He then spends 2 hours in standstill traffic, so he doesn't move. ******
Gen: 

Step 3: He spends the next half-hour driving at 30 mph, so he covers a distance of 0.5 x 30 = 15 miles. ******
Gen: 


Step 3: He drives at 30 mph for half an hour, so he covers a distance of 0.5 x 30 = 15 miles. ******
Gen:  
Step 2: He turns around and tries to get home in 4 hours. ******
Gen:  
Step 2: He turns around and tries to get home in 4 hours. ******
Gen:  Step 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ******
Gen: 

Step 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ******
Added Probs: [(0.0, 1), (0.0, 1), (-10.34605622291565, 25), (-10.547453731298447, 23), (-10.538383841514587, 37), (-11.555784523487091, 36), (-2.908923089504242, 20), (-2.908923089504242, 20), (-5.17218804359436, 26), (-5.5652115046978, 27)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 2, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.18it/s, est. speed input: 1609.54 toks/s, output: 2.37 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.42it/s, est. speed input: 1824.98 toks/s, output: 33.10 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.32it/s, est. speed input: 2507.65 toks/s, output: 60.33 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.90it/s, est. speed input: 2921.91 toks/s, output: 92.05 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.78it/s, est. speed input: 3610.16 toks/s, output: 130.78 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.810073577100411 sec
Gen: 

Step 4: He spends the remaining 2 hours driving at 80 mph, so he covers a distance of 2 x 80 = 160 miles. ******
Gen: 

Step 4: He spends the remaining 2 hours driving at 80 mph, so he covers a distance of 2 x 80 = 160 miles. ******
Gen:  
Step 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ******
Gen:  
Step 3: He spends the first 2 hours in standstill traffic. ******
Gen: 
Gen: 
Gen:  Step 4: He drives at 30 mph for 0.5 hours, covering a distance of 0.5 * 30 = 15 miles. ******
Gen:  Step 4: He then drives at 30 mph for half an hour, covering a distance of 0.5 * 30 = 15 miles. ******
Gen:  Step 4: He then drives at 30 mph for half an hour (0.5 hours). ******
Gen:  Step 4: Then he drives at 30 mph for half an hour (0.5 hours). ******
Added Probs: [(-1.8963079452514648, 36), (-1.8963079452514648, 36), (-4.485453963279724, 27), (-7.132316589355469, 19), (0.0, 1), (0.0, 1), (-12.393887758255005, 35), (-13.290196061134338, 34), (-13.234334111213684, 23), (-20.05162477493286, 23)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [8, 9], 3: [0, 1], 4: [6, 7]}
Selected Indexes: [4, 2, 8, 0, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.16it/s, est. speed input: 1582.12 toks/s, output: 2.33 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.41it/s, est. speed input: 1809.16 toks/s, output: 30.06 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.95it/s, est. speed input: 2269.93 toks/s, output: 63.21 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.30it/s, est. speed input: 2577.76 toks/s, output: 91.45 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  3.02it/s, est. speed input: 2997.20 toks/s, output: 127.00 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.27it/s, est. speed input: 2997.20 toks/s, output: 127.00 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.217352880979888 sec
Gen: 
Gen: 
Gen:  
Step 4: He drives at 30 mph for half an hour (0.5 hours). ******
Gen:  
Step 4: He drives at 30 mph for the next half-hour. ******
Gen:  Step 5: Distance = Speed * Time = 30 * 0.5 = 15 miles

Step 6: He then drives the remaining 2 hours at 80 mph. ******
Gen:  Distance = Speed * Time = 30 * 0.5 = 15 miles

Step 5: He then drives at 80 mph for the remaining 4 - 2 - 0.5 = 1.5 hours. ******
Gen: 

Step 5: In total, John has covered a distance of 180 (initially) + 15 + 160 = 355 miles. ******
Gen: 

Step 5: In total, John has driven 180 miles out and then 15 + 160 = 175 miles back, for a total distance of 180 + 175 = 355 miles. ******
Gen:  Step 5: He drives at 80 mph for the remaining 2 hours, covering a distance of 2 * 80 = 160 miles. ******
Gen:  Step 5: He drives at 80 mph for the remaining 2 hours, covering a distance of 2 * 80 = 160 miles. ******
Added Probs: [(0.0, 1), (0.0, 1), (-7.2881118953228, 23), (-12.821451723575592, 19), (-19.867730140686035, 41), (-22.217923626303673, 51), (-25.53316220641136, 33), (-41.1141063272953, 45), (-4.814052134752274, 33), (-4.814052134752274, 33)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [6, 7], 3: [0, 1], 4: [2, 3]}
Selected Indexes: [5, 8, 6, 0, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.12it/s, est. speed input: 1522.29 toks/s, output: 2.24 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.42it/s, est. speed input: 1866.25 toks/s, output: 25.86 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.27it/s, est. speed input: 3361.71 toks/s, output: 82.98 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  1.93it/s, est. speed input: 2601.87 toks/s, output: 96.01 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  1.93it/s, est. speed input: 2601.87 toks/s, output: 96.01 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.6058182070264593 sec
Gen:  Distance = Speed * Time = 80 * 1.5 = 120 miles

Step 6: The total distance he needs to cover to get home is the distance he drove initially plus the distance he covered in the return trip. ******
Gen:  Distance = Speed * Time = 80 * 1.5 = 120 miles

Step 6: Total distance from home = Distance covered before turning around + distance covered on the way back = 180 + 15 + 120 = 315 miles

Step 7: The answer is #### 315. ******
Gen:  Step 6: In total, he covers a distance of 180 + 15 + 160 = 355 miles. ******
Gen:  Step 6: In total, he covers 180 + 15 + 160 = 355 miles. ******
Gen: 

Step 6: Since he turned around, he is now 355 miles away from home. ******
Gen: 

Step 6: The answer is #### 355. ******
Gen: 
Gen: 
Gen:  
Distance covered = Speed * Time = 30 * 0.5 = 15 miles. ******
Gen:  
Distance covered = Speed * Time = 30 * 0.5 = 15 miles. ******
Added Probs: [(-62.0573308467865, 50), (-64.1602572798729, 66), (-10.531653642654419, 27), (-10.531653642654419, 24), (-7.688589155673981, 22), (-10.20848035812378, 14), (0.0, 1), (0.0, 1), (-1.5115742683410645, 22), (-1.5115742683410645, 22)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [0, 1], 4: [2, 3]}
Selected Indexes: [4, 6, 8, 1, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.10it/s, est. speed input: 1499.54 toks/s, output: 2.21 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  3.07it/s, est. speed input: 3636.17 toks/s, output: 20.83 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.28it/s, est. speed input: 3894.05 toks/s, output: 44.42 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.35it/s, est. speed input: 4611.40 toks/s, output: 71.00 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.5054959440603852 sec
Gen: 

The answer is #### 355. ******
Gen: 

The answer is #### 355. ******
Gen: 
Gen: 
Gen:  
Step 5: He drives at 80 mph for the remaining 2 hours. ******
Gen:  
Step 5: He drives the remaining 2 hours at 80 mph. ******
Gen: 
Gen: 
Gen:  Step 7: He is still the same distance from home, so the answer is #### 355. ******
Gen:  Step 7: Since he is returning home, he is 355 miles from home. ******
Added Probs: [(-1.2582125216722488, 10), (-1.2582125216722488, 10), (0.0, 1), (0.0, 1), (-3.3185389041900635, 20), (-11.900581121444702, 19), (0.0, 1), (0.0, 1), (-32.03127144277096, 23), (-45.451143845915794, 20)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [0, 1], 3: [6, 7], 4: [2, 3]}
Selected Indexes: [4, 8, 0, 6, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.09it/s, est. speed input: 1504.14 toks/s, output: 2.17 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.14it/s, est. speed input: 4912.08 toks/s, output: 33.98 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.54it/s, est. speed input: 4912.08 toks/s, output: 33.98 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.4248162540607154 sec
Gen:  
Distance covered = Speed * Time = 80 * 2 = 160 miles. ******
Gen:  
Distance covered = Speed * Time = 80 * 2 = 160 miles. ******
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Added Probs: [(0.0, 20), (0.0, 20), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.08it/s, est. speed input: 1534.24 toks/s, output: 2.17 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.50it/s, est. speed input: 4299.45 toks/s, output: 38.31 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.09it/s, est. speed input: 4299.45 toks/s, output: 38.31 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6321544059319422 sec
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen:  
Step 6: Total distance covered in the second part of his journey = 15 + 160 = 175 miles. ******
Gen:  
Step 6: Total distance covered = Distance covered while driving back + Distance covered while driving to the turnaround point. ******
Gen: 
Gen: 
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (-48.35835313796997, 28), (-71.89689984172583, 26), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 1], 3: [6, 7], 4: [8, 9]}
Selected Indexes: [4, 2, 0, 6, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.08it/s, est. speed input: 1499.16 toks/s, output: 2.16 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.03it/s, est. speed input: 3820.37 toks/s, output: 43.75 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.73it/s, est. speed input: 3820.37 toks/s, output: 43.75 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8419666489353403 sec
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen:  
Step 7: Total distance from home = Distance covered in the first part - Distance covered in the second part = 180 - 175 = 5 miles. ******
Gen:  
Step 7: Total distance from home = Distance covered in the first part - Distance covered in the second part = 180 - 175 = 5 miles. ******
Gen: 
Gen: 
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (-26.65606379508972, 36), (-26.65606379508972, 36), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.08it/s, est. speed input: 1534.00 toks/s, output: 2.17 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.80it/s, est. speed input: 5594.90 toks/s, output: 25.50 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.98it/s, est. speed input: 5594.90 toks/s, output: 25.50 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2678039360325783 sec
Gen: 
Gen: 
Gen:  
Step 8: The answer is #### 5. ******
Gen:  
The answer is #### 5. ******
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Added Probs: [(0.0, 1), (0.0, 1), (-6.95858895778656, 14), (-8.33358895778656, 10), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 2, 8]
Found EoS token, Break
completions: ["<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph, so he covers a distance of 3 x 60 = 180 miles. ******\n\nStep 2: He turns around and tries to get home in 4 hours. He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ******\r\n\r\nStep 3: He spends the next half-hour driving at 30 mph, so he covers a distance of 0.5 x 30 = 15 miles. ******\r\n\r\nStep 4: He spends the remaining 2 hours driving at 80 mph, so he covers a distance of 2 x 80 = 160 miles. ******\r\n\r\nStep 5: In total, John has covered a distance of 180 (initially) + 15 + 160 = 355 miles. ******\r\n\r\nStep 6: Since he turned around, he is now 355 miles away from home. ******\r\n\r\nThe answer is #### 355. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph, so he covers a distance of 3 x 60 = 180 miles. ******\n\nStep 2: He turns around and tries to get home in 4 hours. He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ******\r\n\r\nStep 3: He spends the next half-hour driving at 30 mph, so he covers a distance of 0.5 x 30 = 15 miles. ******\r\n\r\nStep 4: He spends the remaining 2 hours driving at 80 mph, so he covers a distance of 2 x 80 = 160 miles. ******\r\n\r\nStep 5: In total, John has covered a distance of 180 (initially) + 15 + 160 = 355 miles. ******\r\n\r\nStep 6: Since he turned around, he is now 355 miles away from home. ******\r\n\r\nThe answer is #### 355. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph. ****** \nDistance covered = Speed * Time = 60 * 3 = 180 miles. ****** \nStep 2: He turns around and tries to get home in 4 hours. ****** \nStep 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ****** \nStep 4: He drives at 30 mph for half an hour (0.5 hours). ****** \nDistance covered = Speed * Time = 30 * 0.5 = 15 miles. ****** \nStep 5: He drives at 80 mph for the remaining 2 hours. ****** \nDistance covered = Speed * Time = 80 * 2 = 160 miles. ****** \nStep 6: Total distance covered in the second part of his journey = 15 + 160 = 175 miles. ****** \nStep 7: Total distance from home = Distance covered in the first part - Distance covered in the second part = 180 - 175 = 5 miles. ****** \nStep 8: The answer is #### 5. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph. ****** \nDistance covered = Speed * Time = 60 * 3 = 180 miles. ****** \nStep 2: He turns around and tries to get home in 4 hours. ****** \nStep 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ****** \nStep 4: He drives at 30 mph for half an hour (0.5 hours). ****** \nDistance covered = Speed * Time = 30 * 0.5 = 15 miles. ****** \nStep 5: He drives at 80 mph for the remaining 2 hours. ****** \nDistance covered = Speed * Time = 80 * 2 = 160 miles. ****** \nStep 6: Total distance covered in the second part of his journey = 15 + 160 = 175 miles. ****** \nStep 7: Total distance from home = Distance covered in the first part - Distance covered in the second part = 180 - 175 = 5 miles. ****** \nThe answer is #### 5. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph, so he covers a distance of 3 * 60 = 180 miles.\n\nStep 2: He then spends 2 hours in standstill traffic, so he doesn't cover any distance.\n\nStep 3: He drives for half an hour at 30 mph, so he covers a distance of 0.5 * 30 = 15 miles.\n\nStep 4: He spends the remaining 2 hours at 80 mph, so he covers a distance of 2 * 80 = 160 miles.\n\nStep 5: In total, John covers a distance of 180 + 15 + 160 = 355 miles.\n\nStep 6: The answer is #### 355.******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph, so he covers a distance of 3 * 60 = 180 miles.\n\nStep 2: He then spends 2 hours in standstill traffic, so he doesn't cover any distance.\n\nStep 3: He drives for half an hour at 30 mph, so he covers a distance of 0.5 * 30 = 15 miles.\n\nStep 4: He spends the remaining 2 hours at 80 mph, so he covers a distance of 2 * 80 = 160 miles.\n\nStep 5: In total, John covers a distance of 180 + 15 + 160 = 355 miles.\n\nStep 6: The answer is #### 355.******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at a speed of 60 mph. ******\n\nDistance = Speed * Time = 60 * 3 = 180 miles\n\nStep 2: He then turns around and tries to get home in 4 hours. ****** Step 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ****** Step 4: He then drives at 30 mph for half an hour (0.5 hours). ****** Distance = Speed * Time = 30 * 0.5 = 15 miles\n\nStep 5: He then drives at 80 mph for the remaining 4 - 2 - 0.5 = 1.5 hours. ****** Distance = Speed * Time = 80 * 1.5 = 120 miles\n\nStep 6: Total distance from home = Distance covered before turning around + distance covered on the way back = 180 + 15 + 120 = 315 miles\n\nStep 7: The answer is #### 315. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at a speed of 60 mph. ******\n\nDistance = Speed * Time = 60 * 3 = 180 miles\n\nStep 2: He then turns around and tries to get home in 4 hours. ****** Step 3: He spends the first 2 hours in standstill traffic, so he doesn't cover any distance. ****** Step 4: He then drives at 30 mph for half an hour (0.5 hours). ****** Distance = Speed * Time = 30 * 0.5 = 15 miles\n\nStep 5: He then drives at 80 mph for the remaining 4 - 2 - 0.5 = 1.5 hours. ****** Distance = Speed * Time = 80 * 1.5 = 120 miles\n\nStep 6: Total distance from home = Distance covered before turning around + distance covered on the way back = 180 + 15 + 120 = 315 miles\n\nStep 7: The answer is #### 315. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph. ****** Step 2: He covers a distance of 3 * 60 = 180 miles. ****** Step 3: Then he spends 2 hours in standstill traffic, so he doesn't cover any distance. ****** Step 4: He drives at 30 mph for 0.5 hours, covering a distance of 0.5 * 30 = 15 miles. ****** Step 5: He drives at 80 mph for the remaining 2 hours, covering a distance of 2 * 80 = 160 miles. ****** Step 6: In total, he covers a distance of 180 + 15 + 160 = 355 miles. ****** Step 7: He is still the same distance from home, so the answer is #### 355. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: John drives for 3 hours at 60 mph. ****** Step 2: He covers a distance of 3 * 60 = 180 miles. ****** Step 3: Then he spends 2 hours in standstill traffic, so he doesn't cover any distance. ****** Step 4: He drives at 30 mph for 0.5 hours, covering a distance of 0.5 * 30 = 15 miles. ****** Step 5: He drives at 80 mph for the remaining 2 hours, covering a distance of 2 * 80 = 160 miles. ****** Step 6: In total, he covers a distance of 180 + 15 + 160 = 355 miles. ****** Step 7: He is still the same distance from home, so the answer is #### 355. ******"]
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{720: Logprob(logprob=0.0, rank=1, decoded_token=' \n')}, {8468: Logprob(logprob=-0.6325989961624146, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {23: Logprob(logprob=0.0, rank=1, decoded_token='8')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{720: Logprob(logprob=0.0, rank=1, decoded_token=' \n')}, {791: Logprob(logprob=-0.7575989961624146, rank=2, decoded_token='The'), 8468: Logprob(logprob=-0.6325989961624146, rank=1, decoded_token='Step')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 22.594503583037294
>> Answer lists: ['355', '355', '5', '5', '355', '355', '315', '315', '355', '355']
>> Original Correct: 355, False
>> Soft SC  Correct: 355, False
>> Golden    Answer: 45
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.35s/it, est. speed input: 854.18 toks/s, output: 224.62 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.35s/it, est. speed input: 854.18 toks/s, output: 224.62 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.3570651250192896 sec
Added Probs: [(-2.0450993180274963, 26), (-2.0450993180274963, 26), (-2.0515082478523254, 27), (-2.1749846935272217, 24), (-2.1749846935272217, 26), (-2.303437292575836, 26), (-3.2401755452156067, 26), (-3.9335238933563232, 41), (-5.437993407249451, 38), (-7.235729366540909, 44)]
Cluster Indices: {0: [5, 6], 1: [8, 9], 2: [3, 4], 3: [0, 1, 2], 4: [7]}
Selected Indexes: [5, 8, 4, 2, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.47s/it, est. speed input: 803.47 toks/s, output: 33.31 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.39it/s, est. speed input: 1423.67 toks/s, output: 63.84 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.28it/s, est. speed input: 2006.36 toks/s, output: 94.46 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.78it/s, est. speed input: 2363.55 toks/s, output: 128.12 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.43it/s, est. speed input: 2888.39 toks/s, output: 168.30 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.067872600047849 sec
Gen:  Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ******
Gen:  Step 2: She worked for 40 hours at this rate, so her earnings for these hours are 40 * $10 = $400. ******
Gen: 

Step 2: For the remaining 5 hours, she works overtime at a rate of 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ******
Gen: 

Step 2: For the remaining 5 hours, she receives an overtime pay of 1.2 times her regular hourly rate, which is $10 * 1.2 = $12 per hour. ******
Gen:  Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ******
Gen:  Step 2: For these 40 hours, her earnings are 40 * $10 = $400. ******
Gen:  Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ******
Gen:  Step 2: She worked for 40 hours at the regular rate, so her earnings for the first 40 hours are 40 * $10 = $400. ******
Gen: 

Step 2: For the remaining 5 hours, she works overtime at 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ******
Gen: 

Step 2: For the remaining 5 hours, she receives overtime pay, which is 1.2 times her regular hourly rate. Her overtime hourly rate is $10 * 1.2 = $12. ******
Added Probs: [(-2.342899978160858, 25), (-12.55947732925415, 32), (-7.323262989521027, 45), (-9.371250867843628, 45), (-4.241990029811859, 25), (-7.45171582698822, 24), (-2.5031550526618958, 25), (-11.005562484264374, 36), (-6.4716856479644775, 42), (-10.61846399307251, 47)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [0, 6], 3: [2, 3], 4: [1, 7]}
Selected Indexes: [4, 8, 6, 2, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.44s/it, est. speed input: 860.76 toks/s, output: 29.90 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.78it/s, est. speed input: 1891.02 toks/s, output: 87.80 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.50it/s, est. speed input: 3058.74 toks/s, output: 161.70 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.198334846063517 sec
Gen:  Step 3: For the remaining 5 hours (45 - 40 = 5), she receives overtime pay, which is 1.2 times her regular hourly rate. ******
Gen:  Step 3: For the remaining 5 hours, she works overtime and earns 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ******
Gen: 

Step 3: Her earnings for the overtime hours are 5 * $12 = $60. ******
Gen:  

Step 3: Her overtime earnings are 5 * $12 = $60. ******
Gen:  Step 3: For the remaining 5 hours (45 - 40 = 5), she receives overtime pay, which is 1.2 times her regular rate. ******
Gen:  Step 3: For the remaining 5 hours, she works overtime and gets 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ******
Gen:  

Step 3: For the 5 overtime hours, she earns 5 * $12 = $60. ******
Gen: 

Step 3: For the overtime hours, she earns 5 * $12 = $60. ******
Gen:  Step 3: For the remaining 5 hours, she received overtime pay, which is 1.2 times her regular rate. ******
Gen:  Step 3: For the remaining 5 hours, she worked overtime, and her overtime rate is 1.2 times her regular rate, which is $10 * 1.2 = $12. ******
Added Probs: [(-8.567809894680977, 38), (-10.983110144734383, 42), (-5.133298583328724, 23), (-5.352654576301575, 20), (-5.897134646773338, 37), (-15.30340026319027, 42), (-4.885919809341431, 25), (-13.631292343139648, 23), (-7.0590696930885315, 29), (-14.181018054485321, 44)]
Cluster Indices: {0: [1, 5], 1: [6, 7], 2: [0, 4], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [1, 6, 4, 2, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.45s/it, est. speed input: 862.21 toks/s, output: 31.75 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.72it/s, est. speed input: 2789.21 toks/s, output: 116.47 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.75it/s, est. speed input: 3441.93 toks/s, output: 155.45 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8323563319863752 sec
Gen:  Step 4: For the overtime hours, her earnings are 5 * $12 = $60. ******
Gen:  Step 4: For the overtime hours, her earnings are 5 * $12 = $60. ******
Gen:  

Step 4: In total, Eliza's earnings for the week are $400 (from regular hours) + $60 (from overtime) = $460. ******
Gen:  

Step 4: Her total earnings for the week are $400 (for the regular hours) + $60 (for the overtime hours) = $460. ******
Gen:  Step 4: Overtime pay is 1.2 * $10 = $12 per hour. ******
Gen:  Step 4: Overtime rate is $10 * 1.2 = $12 per hour. ******
Gen: 

Step 4: Her total earnings for the week are the sum of her earnings for the regular hours and the overtime hours: $400 + $60 = $460. ******
Gen: 

Step 4: Her total earnings for the week are $400 (from the first 40 hours) + $60 (from the overtime hours) = $460. ******
Gen:  Step 4: Her overtime rate is $10 * 1.2 = $12 per hour. ******
Gen:  Step 4: Overtime rate is $10 * 1.2 = $12 per hour. ******
Added Probs: [(-3.303757667541504, 23), (-3.303757667541504, 23), (-17.61842167377472, 36), (-21.66843032836914, 35), (-5.278682708740234, 23), (-6.798224449157715, 23), (-6.967875599861145, 37), (-13.52299028635025, 37), (-4.394449234008789, 23), (-9.470795631408691, 23)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 1], 3: [8, 9], 4: [6, 7]}
Selected Indexes: [4, 2, 0, 8, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.21s/it, est. speed input: 1072.22 toks/s, output: 19.81 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.36it/s, est. speed input: 2561.75 toks/s, output: 67.61 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.01it/s, est. speed input: 3080.23 toks/s, output: 92.94 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.87it/s, est. speed input: 3673.45 toks/s, output: 127.26 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7566051809117198 sec
Gen:  Step 5: For the 5 overtime hours, her earnings are 5 * $12 = $60. ******
Gen:  Step 5: For the 5 overtime hours, her earnings are 5 * $12 = $60. ******
Gen:  

Step 5: The answer is #### 460. ******
Gen:  

The answer is #### 460. ******
Gen:  Step 5: Her total earnings for the week are $400 + $60 = $460. ******
Gen:  Step 5: Her total earnings for the week are the sum of her regular and overtime earnings: $400 + $60 = $460. ******
Gen:  Step 5: She worked for 5 hours at the overtime rate, so her earnings for the overtime hours are 5 * $12 = $60. ******
Gen:  Step 5: She worked 5 hours at the overtime rate, so her earnings for the overtime hours are 5 * $12 = $60. ******
Gen: 

Step 5: The answer is #### 460. ******
Gen: 

Step 5: The answer is #### 460. ******
Added Probs: [(0.0, 25), (0.0, 25), (-1.5663087368011475, 14), (-6.5663087368011475, 10), (-7.769372463226318, 22), (-27.081123143434525, 31), (-3.680817559361458, 34), (-4.930817559361458, 33), (0.0, 14), (0.0, 14)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.18it/s, est. speed input: 1552.93 toks/s, output: 2.37 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.94it/s, est. speed input: 3344.87 toks/s, output: 25.60 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.52it/s, est. speed input: 3108.85 toks/s, output: 55.47 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.90it/s, est. speed input: 3774.76 toks/s, output: 91.52 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7380796460201964 sec
Gen:  Step 6: The answer is #### 460. ******
Gen:  Step 6: The answer is #### 460. ******
Gen:  Step 6: Her total earnings for the week are $400 (for the regular hours) + $60 (for the overtime hours) = $460. ******
Gen:  Step 6: Her total earnings for the week are the sum of her regular and overtime earnings: $400 + $60 = $460. ******
Gen: 
Gen: 
Gen:  Step 6: Her total earnings for the week are $400 (regular pay) + $60 (overtime pay) = $460. ******
Gen:  Step 6: Her total earnings for the week are $400 (from regular hours) + $60 (from overtime hours) = $460. ******
Gen: 
Gen: 
Added Probs: [(0.0, 13), (0.0, 13), (-21.399723529815674, 34), (-23.86502516269684, 31), (0.0, 1), (0.0, 1), (-21.961304426193237, 31), (-26.017242193222046, 32), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [8, 9], 4: [0, 1]}
Selected Indexes: [4, 6, 2, 8, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.16it/s, est. speed input: 1524.05 toks/s, output: 2.32 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.00it/s, est. speed input: 4445.37 toks/s, output: 27.06 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.23it/s, est. speed input: 5576.93 toks/s, output: 49.05 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.1956356950104237 sec
Gen: 
Gen: 
Gen:  Step 7: The answer is #### 460. ******
Gen:  Step 7: The answer is #### 460. ******
Gen:  Step 7: The answer is #### 460. ******
Gen:  Step 7: The answer is #### 460. ******
Gen: 
Gen: 
Gen: 
Gen: 
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Found EoS token, Break
completions: ["<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza works for 40 hours at a rate of $10 per hour, so she earns 40 * $10 = $400. ******\n\nStep 2: For the remaining 5 hours, she works overtime at a rate of 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ****** \n\nStep 3: For the 5 overtime hours, she earns 5 * $12 = $60. ****** \n\nStep 4: In total, Eliza's earnings for the week are $400 (from regular hours) + $60 (from overtime) = $460. ****** \n\nStep 5: The answer is #### 460. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza works for 40 hours at a rate of $10 per hour, so she earns 40 * $10 = $400. ******\n\nStep 2: For the remaining 5 hours, she works overtime at a rate of 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ****** \n\nStep 3: For the 5 overtime hours, she earns 5 * $12 = $60. ****** \n\nStep 4: In total, Eliza's earnings for the week are $400 (from regular hours) + $60 (from overtime) = $460. ****** \n\nStep 5: The answer is #### 460. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza's regular rate is $10 per hour for the first 40 hours. ****** Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours (45 - 40 = 5), she receives overtime pay, which is 1.2 times her regular rate. ****** Step 4: Overtime pay is 1.2 * $10 = $12 per hour. ****** Step 5: For the 5 overtime hours, her earnings are 5 * $12 = $60. ****** Step 6: Her total earnings for the week are $400 (regular pay) + $60 (overtime pay) = $460. ****** Step 7: The answer is #### 460. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza's regular rate is $10 per hour for the first 40 hours. ****** Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours (45 - 40 = 5), she receives overtime pay, which is 1.2 times her regular rate. ****** Step 4: Overtime pay is 1.2 * $10 = $12 per hour. ****** Step 5: For the 5 overtime hours, her earnings are 5 * $12 = $60. ****** Step 6: Her total earnings for the week are $400 (regular pay) + $60 (overtime pay) = $460. ****** Step 7: The answer is #### 460. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza's regular rate is $10 per hour for the first 40 hours. ****** Step 2: She worked for 40 hours at the regular rate, so her earnings for the first 40 hours are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours, she received overtime pay, which is 1.2 times her regular rate. ****** Step 4: Her overtime rate is $10 * 1.2 = $12 per hour. ****** Step 5: She worked for 5 hours at the overtime rate, so her earnings for the overtime hours are 5 * $12 = $60. ****** Step 6: Her total earnings for the week are $400 (for the regular hours) + $60 (for the overtime hours) = $460. ****** Step 7: The answer is #### 460. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza's regular rate is $10 per hour for the first 40 hours. ****** Step 2: She worked for 40 hours at the regular rate, so her earnings for the first 40 hours are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours, she received overtime pay, which is 1.2 times her regular rate. ****** Step 4: Her overtime rate is $10 * 1.2 = $12 per hour. ****** Step 5: She worked for 5 hours at the overtime rate, so her earnings for the overtime hours are 5 * $12 = $60. ****** Step 6: Her total earnings for the week are $400 (for the regular hours) + $60 (for the overtime hours) = $460. ****** Step 7: The answer is #### 460. ******", '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza works 40 hours at $10 per hour, so her earnings for the first 40 hours are 40 * $10 = $400. ******\n\nStep 2: For the remaining 5 hours, she works overtime at 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ******\r\n\r\nStep 3: Her earnings for the overtime hours are 5 * $12 = $60. ******\r\n\r\nStep 4: Her total earnings for the week are the sum of her earnings for the regular hours and the overtime hours: $400 + $60 = $460. ******\r\n\r\nStep 5: The answer is #### 460. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza works 40 hours at $10 per hour, so her earnings for the first 40 hours are 40 * $10 = $400. ******\n\nStep 2: For the remaining 5 hours, she works overtime at 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ******\r\n\r\nStep 3: Her earnings for the overtime hours are 5 * $12 = $60. ******\r\n\r\nStep 4: Her total earnings for the week are the sum of her earnings for the regular hours and the overtime hours: $400 + $60 = $460. ******\r\n\r\nStep 5: The answer is #### 460. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza earns $10 per hour for the first 40 hours she works. ****** Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours, she works overtime and earns 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ****** Step 4: For the overtime hours, her earnings are 5 * $12 = $60. ****** Step 5: Her total earnings for the week are $400 + $60 = $460. ****** Step 6: The answer is #### 460. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Eliza earns $10 per hour for the first 40 hours she works. ****** Step 2: For the first 40 hours, her earnings are 40 * $10 = $400. ****** Step 3: For the remaining 5 hours, she works overtime and earns 1.2 times her regular rate, which is $10 * 1.2 = $12 per hour. ****** Step 4: For the overtime hours, her earnings are 5 * $12 = $60. ****** Step 5: Her total earnings for the week are $400 + $60 = $460. ****** Step 6: The answer is #### 460. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16551: Logprob(logprob=0.0, rank=1, decoded_token='460')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16551: Logprob(logprob=0.0, rank=1, decoded_token='460')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16551: Logprob(logprob=0.0, rank=1, decoded_token='460')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {16551: Logprob(logprob=0.0, rank=1, decoded_token='460')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 12.375855637015775
>> Answer lists: ['460', '460', '460', '460', '460', '460', '460', '460', '460', '460']
>> Original Correct: 460, True
>> Soft SC  Correct: 460, True
>> Golden    Answer: 460
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.34it/s, est. speed input: 1552.17 toks/s, output: 281.72 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.34it/s, est. speed input: 1552.17 toks/s, output: 281.72 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (1) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7481854299549013 sec
Added Probs: [(-0.575939416885376, 21), (-0.575939416885376, 21), (-0.575939416885376, 21), (-0.575939416885376, 21), (-0.575939416885376, 21), (-0.575939416885376, 21), (-0.575939416885376, 21), (-0.825939416885376, 21), (-0.825939416885376, 21), (-0.825939416885376, 21)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 1: [], 2: [], 3: [], 4: []}
Selected Indexes: [0, 1, 2, 3, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:07,  1.92s/it, est. speed input: 612.35 toks/s, output: 42.63 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.60it/s, est. speed input: 3061.34 toks/s, output: 213.10 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.935118621098809 sec
Gen: 

Step 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******
Gen: 

Step 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******
Gen: 

Step 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******
Gen: 

Step 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******
Gen: 

Step 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******
Gen: 

Step 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******
Gen: 

Step 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******
Gen: 

Step 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******
Gen: 

Step 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******
Gen: 

Step 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******
Added Probs: [(-3.7369437515735626, 41), (-5.736943751573563, 41), (-3.7369437515735626, 41), (-5.736943751573563, 41), (-3.7369437515735626, 41), (-5.736943751573563, 41), (-3.7369437515735626, 41), (-5.736943751573563, 41), (-3.7369437515735626, 41), (-5.736943751573563, 41)]
Cluster Indices: {0: [1, 3, 5, 7, 9], 1: [0, 2, 4, 6, 8], 2: [], 3: [], 4: []}
Selected Indexes: [1, 0, 3, 5, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:02<00:11,  2.86s/it, est. speed input: 426.01 toks/s, output: 50.36 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  1.72it/s, est. speed input: 2093.24 toks/s, output: 247.13 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 2.920856326003559 sec
Gen: 

Step 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the downloads in the third month were 180 - 54 = 126. ******
Gen: 

Step 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3 = 54. So, the downloads in the third month were 180 - 54 = 126. ******
Gen: 

Step 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. 30% of 180 is 0.3 * 180 = 54. So, the downloads in the third month were 180 - 54 = 126. ******
Gen: 

Step 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the number of downloads in the third month was 180 - 54 = 126. ******
Gen: 

Step 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the downloads in the third month were 180 - 54 = 126. ******
Gen: 

Step 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3 = 54. So, the downloads in the third month were 180 - 54 = 126. ******
Gen: 

Step 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the downloads in the third month were 180 - 54 = 126. ******
Gen: 

Step 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3 = 54. So, the downloads in the third month were 180 - 54 = 126. ******
Gen: 

Step 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the downloads in the third month were 180 - 54 = 126. ******
Gen: 

Step 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3 = 54. So, the downloads in the third month were 180 - 54 = 126. ******
Added Probs: [(-20.957959547638893, 73), (-22.875505596399307, 71), (-17.30765037238598, 68), (-22.69412948191166, 75), (-20.957959547638893, 73), (-22.875505596399307, 71), (-20.957959547638893, 73), (-22.875505596399307, 71), (-20.957959547638893, 73), (-22.875505596399307, 71)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [2], 2: [3], 3: [0, 4, 6, 8], 4: []}
Selected Indexes: [1, 2, 3, 0, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:07,  1.90s/it, est. speed input: 676.28 toks/s, output: 39.90 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.62it/s, est. speed input: 3382.50 toks/s, output: 199.49 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.9180443200748414 sec
Gen: 

Step 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******
Gen: 

Step 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******
Gen: 

Step 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******
Gen: 

Step 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******
Gen: 

Step 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******
Gen: 

Step 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******
Gen: 

Step 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******
Gen: 

Step 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******
Gen: 

Step 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******
Gen: 

Step 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******
Added Probs: [(-4.904024124145508, 38), (-6.800332069396973, 38), (-7.556804656982422, 38), (-14.886198043823242, 38), (-7.260763168334961, 38), (-9.06641674041748, 38), (-7.102684140205383, 38), (-7.555200219154358, 38), (-4.904024124145508, 38), (-6.800332069396973, 38)]
Cluster Indices: {0: [3, 5], 1: [1, 6, 9], 2: [2], 3: [0, 7, 8], 4: [4]}
Selected Indexes: [5, 6, 2, 0, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.12s/it, est. speed input: 1187.34 toks/s, output: 16.97 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.47it/s, est. speed input: 5923.73 toks/s, output: 84.85 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.1316317709861323 sec
Gen: 

The answer is #### 366. ******
Gen: 

The answer is #### 366.******
Gen: 

The answer is #### 366. ******
Gen: 

The answer is #### 366.******
Gen: 

The answer is #### 366. ******
Gen: 

The answer is #### 366.******
Gen: 

The answer is #### 366. ******
Gen: 

The answer is #### 366.******
Gen: 

The answer is #### 366. ******
Gen: 

The answer is #### 366.******
Added Probs: [(-4.695349335670471, 10), (-12.062572240829468, 9), (-3.6591878533363342, 10), (-11.843542456626892, 9), (-1.1270631104707718, 10), (-12.492679357528687, 9), (-0.898723229765892, 10), (-15.14094591140747, 9), (-3.9718839526176453, 10), (-12.589107155799866, 9)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the number of downloads in the third month was 180 - 54 = 126. ******\n\nStep 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******\n\nThe answer is #### 366. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the number of downloads in the third month was 180 - 54 = 126. ******\n\nStep 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******\r\n\r\nThe answer is #### 366.******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******\n\nThe answer is #### 366. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: To find the total number of downloads over the three months, add the downloads in each month: 60 + 180 + 126 = 366. ******\r\n\r\nThe answer is #### 366.******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. 30% of 180 is 0.3 * 180 = 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\n\nThe answer is #### 366. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. 30% of 180 is 0.3 * 180 = 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\r\n\r\nThe answer is #### 366.******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3 = 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\n\nThe answer is #### 366. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 x 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3 = 54. So, the downloads in the third month were 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\r\n\r\nThe answer is #### 366.******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the number of downloads in the third month was 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\n\nThe answer is #### 366. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The program had 60 downloads in the first month. ******\n\nStep 2: The number of downloads in the second month was three times as many as the downloads in the first month, so it was 3 * 60 = 180 downloads. ******\n\nStep 3: In the third month, the downloads were reduced by 30%, which means 30% of 180 was subtracted. To find 30% of 180, multiply 180 by 0.3, which is 54. So, the number of downloads in the third month was 180 - 54 = 126. ******\n\nStep 4: The total number of downloads over the three months is the sum of the downloads in each month: 60 + 180 + 126 = 366. ******\r\n\r\nThe answer is #### 366.******']
Answer Probs: [[{271: Logprob(logprob=-0.9390698671340942, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=-1.1890698671340942, rank=2, decoded_token='\r\n\r\n'), 271: Logprob(logprob=-0.9390698671340942, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {128009: Logprob(logprob=-1.2234445810317993, rank=2, decoded_token='<|eot_id|>'), 220: Logprob(logprob=-0.3484445810317993, rank=1, decoded_token=' ')}], [{271: Logprob(logprob=-0.7318375706672668, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=-1.231837511062622, rank=2, decoded_token='\r\n\r\n'), 271: Logprob(logprob=-0.7318375706672668, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {128009: Logprob(logprob=-1.1368709802627563, rank=2, decoded_token='<|eot_id|>'), 220: Logprob(logprob=-0.38687101006507874, rank=1, decoded_token=' ')}], [{271: Logprob(logprob=-0.22541262209415436, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=-1.6004126071929932, rank=2, decoded_token='\r\n\r\n'), 271: Logprob(logprob=-0.22541262209415436, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {128009: Logprob(logprob=-0.8981232643127441, rank=2, decoded_token='<|eot_id|>'), 220: Logprob(logprob=-0.5231232643127441, rank=1, decoded_token=' ')}], [{271: Logprob(logprob=-0.1797446459531784, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=-1.8047446012496948, rank=2, decoded_token='\r\n\r\n'), 271: Logprob(logprob=-0.1797446459531784, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {128009: Logprob(logprob=-1.2234445810317993, rank=2, decoded_token='<|eot_id|>'), 220: Logprob(logprob=-0.3484445810317993, rank=1, decoded_token=' ')}], [{271: Logprob(logprob=-0.794376790523529, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=-1.2943768501281738, rank=2, decoded_token='\r\n\r\n'), 271: Logprob(logprob=-0.794376790523529, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18044: Logprob(logprob=0.0, rank=1, decoded_token='366')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {128009: Logprob(logprob=-1.2234445810317993, rank=2, decoded_token='<|eot_id|>'), 220: Logprob(logprob=-0.3484445810317993, rank=1, decoded_token=' ')}]]
>> Processing time: 8.80269889999181
>> Answer lists: ['366', '366', '366', '366', '366', '366', '366', '366', '366', '366']
>> Original Correct: 366, True
>> Soft SC  Correct: 366, True
>> Golden    Answer: 366
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.14it/s, est. speed input: 1318.20 toks/s, output: 278.41 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.14it/s, est. speed input: 1318.20 toks/s, output: 278.41 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.8830052110133693 sec
Added Probs: [(-0.6381815671920776, 26), (-0.6381815671920776, 26), (-0.6381815671920776, 26), (-0.6381815671920776, 26), (-0.6381815671920776, 26), (-1.1381815671920776, 24), (-1.1381815671920776, 24), (-1.1381815671920776, 24), (-1.1381815671920776, 24), (-2.0151096135377884, 19)]
Cluster Indices: {0: [5, 6, 7, 8], 1: [0, 1, 2, 3, 4], 2: [9], 3: [], 4: []}
Selected Indexes: [5, 0, 9, 6, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.36s/it, est. speed input: 872.74 toks/s, output: 30.96 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.83it/s, est. speed input: 3621.69 toks/s, output: 138.94 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.06it/s, est. speed input: 3621.69 toks/s, output: 138.94 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6450436488958076 sec
Gen:  Step 2: The cost of donuts is 3 * $68 = $204. ******
Gen:  Step 2: The cost of donuts is 3 x $68 = $204. ******
Gen:  Step 2: So, the cost of donuts is 3 * $68 = $204. ******
Gen:  Step 2: So, the cost of donuts is 3 x $68 = $204. ******
Gen:  Step 2: Each dozen donuts costs $68, so the total cost of the donuts is 3 * $68 = $204. ******
Gen:  Step 2: 3 dozen is equal to 3 * 12 = 36 donuts. ******
Gen:  Step 2: The cost of donuts is 3 * $68 = $204. ******
Gen:  Step 2: The cost of donuts is 3 x $68 = $204. ******
Gen:  Step 2: The cost of donuts is 3 * $68 = $204. ******
Gen:  Step 2: The cost of donuts is 3 x $68 = $204. ******
Added Probs: [(-3.8805907368659973, 21), (-5.880590736865997, 21), (-4.1255355179309845, 23), (-5.1255355179309845, 23), (-6.600325047969818, 32), (-10.715435802936554, 23), (-3.8805907368659973, 21), (-5.880590736865997, 21), (-3.8805907368659973, 21), (-5.880590736865997, 21)]
Cluster Indices: {0: [5], 1: [0, 6, 8], 2: [2, 3], 3: [4], 4: [1, 7, 9]}
Selected Indexes: [5, 0, 2, 4, 1]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.18s/it, est. speed input: 1028.34 toks/s, output: 23.78 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.77it/s, est. speed input: 1837.85 toks/s, output: 50.21 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.61it/s, est. speed input: 3344.75 toks/s, output: 121.43 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.77it/s, est. speed input: 3344.75 toks/s, output: 121.43 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8147407409269363 sec
Gen:  Step 3: The cost of donuts is $68 per dozen, so the total cost of donuts is 36 * $68 = $2448. ******
Gen:  Step 3: Each dozen donuts costs $68, so 36 donuts cost 36 / 12 * $68 = 3 * $68 = $204. ******
Gen:  Step 3: She bought 2 dozen mini cupcakes for $80 per dozen. ******
Gen:  Step 3: She bought 2 dozen mini cupcakes for $80 per dozen. ******
Gen:  Step 3: She bought 2 dozen mini cupcakes, which cost $80 per dozen. ******
Gen:  Step 3: She bought 2 dozen mini cupcakes, which cost $80 per dozen. ******
Gen:  Step 3: She bought 2 dozen mini cupcakes. ******
Gen:  Step 3: She bought 2 dozen mini cupcakes. ******
Gen:  Step 3: She bought 2 dozen mini cupcakes for $80 per dozen. ******
Gen:  Step 3: She bought 2 dozen mini cupcakes for $80 per dozen. ******
Added Probs: [(-4.745146572589874, 35), (-18.22342559695244, 38), (-0.9397852420806885, 19), (-0.9397852420806885, 19), (-2.079441547393799, 21), (-2.079441547393799, 21), (-3.4176034927368164, 14), (-3.4176034927368164, 14), (-0.9397852420806885, 19), (-0.9397852420806885, 19)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3, 8, 9], 3: [1], 4: [0]}
Selected Indexes: [4, 6, 2, 1, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.20s/it, est. speed input: 1036.16 toks/s, output: 23.40 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.70it/s, est. speed input: 2722.91 toks/s, output: 72.84 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.84it/s, est. speed input: 3684.19 toks/s, output: 125.08 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.99it/s, est. speed input: 3684.19 toks/s, output: 125.08 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6831204990157858 sec
Gen:  Step 4: So, the cost of mini cupcakes is 2 * $80 = $160. ******
Gen:  Step 4: So, the cost of mini cupcakes is 2 * $80 = $160. ******
Gen:  Step 4: Each dozen mini cupcakes costs $80, so the total cost of the mini cupcakes is 2 * $80 = $160. ******
Gen:  Step 4: Each dozen mini cupcakes costs $80, so the total cost of the mini cupcakes is 2 * $80 = $160. ******
Gen:  Step 4: The cost of cupcakes is 2 * $80 = $160. ******
Gen:  Step 4: The cost of cupcakes is 2 * $80 = $160. ******
Gen:  Step 4: She bought 2 dozen mini cupcakes. ******
Gen:  Step 4: She bought 2 dozen mini cupcakes. ******
Gen:  Step 4: Toula bought 2 dozen mini cupcakes. ******
Gen:  Step 4: Toula also bought 2 dozen mini cupcakes. ******
Added Probs: [(-3.303757667541504, 23), (-3.303757667541504, 23), (0.0, 32), (0.0, 32), (-1.547484040260315, 20), (-1.547484040260315, 20), (-4.320072770118713, 14), (-4.320072770118713, 14), (-2.904024124145508, 15), (-4.904024124145508, 16)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [6, 7], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 8, 6, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.25s/it, est. speed input: 1006.62 toks/s, output: 25.63 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.68it/s, est. speed input: 1805.23 toks/s, output: 53.41 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.47it/s, est. speed input: 4347.73 toks/s, output: 147.24 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.4518257320160046 sec
Gen:  Step 5: She bought 6 dozen mini cheesecakes for $55 per dozen. ******
Gen:  Step 5: She bought 6 dozen mini cheesecakes for $55 per dozen. ******
Gen:  Step 5: 2 dozen is equal to 2 * 12 = 24 mini cupcakes. ******
Gen:  Step 5: 2 dozen is equal to 2 * 12 = 24 mini cupcakes. ******
Gen:  Step 5: 2 dozen is equal to 2 * 12 = 24 mini cupcakes. ******
Gen:  Step 5: 2 dozen is equal to 2 * 12 = 24 mini cupcakes. ******
Gen:  Step 5: She bought 6 dozen mini cheesecakes. ******
Gen:  Step 5: She bought 6 dozen mini cheesecakes. ******
Gen:  Step 5: She bought 6 dozen mini cheesecakes, which cost $55 per dozen. ******
Gen:  Step 5: She bought 6 dozen mini cheesecakes, which cost $55 per dozen. ******
Added Probs: [(0.0, 21), (0.0, 21), (0.0, 23), (0.0, 23), (0.0, 23), (0.0, 23), (0.0, 16), (0.0, 16), (-1.9343550503253937, 23), (-1.9343550503253937, 23)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [2, 3], 3: [6, 7], 4: [0, 1]}
Selected Indexes: [4, 8, 2, 6, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.43s/it, est. speed input: 881.93 toks/s, output: 30.68 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.99it/s, est. speed input: 2135.28 toks/s, output: 91.77 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.68it/s, est. speed input: 3411.96 toks/s, output: 167.22 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8776174860540777 sec
Gen:  Step 6: Each dozen mini cupcakes costs $80, so 24 mini cupcakes cost 24 / 12 * $80 = 2 * $80 = $160. ******
Gen:  Step 6: Each dozen mini cupcakes costs $80, so 24 mini cupcakes cost 24 / 12 * $80 = 2 * $80 = $160. ******
Gen:  Step 6: So, the cost of mini cheesecakes is 6 * $55 = $330. ******
Gen:  Step 6: So, the cost of mini cheesecakes is 6 * $55 = $330. ******
Gen:  Step 6: The cost of mini cupcakes is $80 per dozen, so the total cost of mini cupcakes is 24 * $80 = $1920. ******
Gen:  Step 6: The cost of mini cupcakes is $80 per dozen, so the total cost of mini cupcakes is 24 * $80 = $1920. ******
Gen:  Step 6: Each dozen mini cheesecakes costs $55, so the total cost of the mini cheesecakes is 6 * $55 = $330. ******
Gen:  Step 6: Each dozen mini cheesecakes costs $55, so the total cost of the mini cheesecakes is 6 * $55 = $330. ******
Gen:  Step 6: The cost of cheesecakes is 6 * $55 = $330. ******
Gen:  Step 6: The cost of cheesecakes is 6 * $55 = $330. ******
Added Probs: [(0.0, 38), (0.0, 38), (0.0, 25), (0.0, 25), (0.0, 35), (0.0, 35), (0.0, 36), (0.0, 36), (0.0, 22), (0.0, 22)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [0, 1], 3: [6, 7], 4: [2, 3]}
Selected Indexes: [4, 8, 0, 6, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.28s/it, est. speed input: 1029.85 toks/s, output: 25.06 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.82it/s, est. speed input: 2093.38 toks/s, output: 69.56 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.57it/s, est. speed input: 3349.84 toks/s, output: 143.81 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.9587254869984463 sec
Gen:  Step 7: Toula bought 6 dozen mini cheesecakes. ******
Gen:  Step 7: Toula bought 6 dozen mini cheesecakes. ******
Gen:  Step 7: The total cost is the sum of the costs of donuts, cupcakes, and cheesecakes: $204 + $160 + $330 = $694. ******
Gen:  Step 7: The total cost is the sum of the costs of donuts, cupcakes, and cheesecakes. ******
Gen:  Step 7: She bought 6 dozen mini cheesecakes. ******
Gen:  Step 7: She bought 6 dozen mini cheesecakes. ******
Gen:  Step 7: To find the total cost, add the cost of the donuts, mini cupcakes, and mini cheesecakes: $204 + $160 + $330 = $694. ******
Gen:  Step 7: The total cost is the sum of the cost of the donuts, mini cupcakes, and mini cheesecakes. ******
Gen:  Step 7: The total cost is the sum of the costs of donuts, mini cupcakes, and mini cheesecakes: $204 + $160 + $330 = $694. ******
Gen:  Step 7: To find the total cost, add the cost of donuts, mini cupcakes, and mini cheesecakes: $204 + $160 + $330 = $694. ******
Added Probs: [(0.0, 17), (0.0, 17), (-4.852030277252197, 38), (-4.852030277252197, 26), (0.0, 16), (0.0, 16), (-10.666193932294846, 41), (-21.34869936108589, 29), (-9.737911462783813, 40), (-13.664432615041733, 40)]
Cluster Indices: {0: [4, 5], 1: [2, 8], 2: [0, 1], 3: [6, 9], 4: [3, 7]}
Selected Indexes: [4, 2, 0, 6, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.21s/it, est. speed input: 1098.55 toks/s, output: 21.56 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.42it/s, est. speed input: 2701.04 toks/s, output: 65.70 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.27it/s, est. speed input: 4343.70 toks/s, output: 128.75 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.54208758904133 sec
Gen:  Step 8: 6 dozen is equal to 6 * 12 = 72 mini cheesecakes. ******
Gen:  Step 8: 6 dozen is equal to 6 * 12 = 72 mini cheesecakes. ******
Gen:  Step 8: The answer is #### 694. ******
Gen:  Step 8: The answer is #### 694. ******
Gen:  Step 8: 6 dozen is equal to 6 * 12 = 72 mini cheesecakes. ******
Gen:  Step 8: 6 dozen is equal to 6 * 12 = 72 mini cheesecakes. ******
Gen:  Step 8: The answer is #### 694. ******
Gen:  Step 8: The answer is #### 694. ******
Gen:  Step 8: The total cost is $204 + $160 + $330 = $694. ******
Gen:  Step 8: The total cost is $204 + $160 + $330 = #### 694. ******
Added Probs: [(0.0, 25), (0.0, 25), (0.0, 13), (0.0, 13), (0.0, 25), (0.0, 25), (0.0, 13), (0.0, 13), (-6.622947692871094, 22), (-8.622947692871094, 23)]
Cluster Indices: {0: [4, 5], 1: [8], 2: [0, 1], 3: [6, 7], 4: [2, 3, 9]}
Selected Indexes: [4, 8, 0, 6, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.12it/s, est. speed input: 1520.83 toks/s, output: 2.23 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.83it/s, est. speed input: 3302.15 toks/s, output: 24.54 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.13it/s, est. speed input: 2816.07 toks/s, output: 56.45 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.51it/s, est. speed input: 3387.20 toks/s, output: 96.43 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.0028940859483555 sec
Gen:  Step 9: The cost of mini cheesecakes is $55 per dozen, so the total cost of mini cheesecakes is 72 * $55 = $3960. ******
Gen:  Step 9: The cost of mini cheesecakes is $55 per dozen, so the total cost of mini cheesecakes is 72 * $55 = $3960. ******
Gen:  Step 9: The answer is #### 694. ******
Gen:  Step 9: The answer is #### 694. ******
Gen:  Step 9: Each dozen mini cheesecakes costs $55, so 72 mini cheesecakes cost 72 / 12 * $55 = 6 * $55 = $330. ******
Gen:  Step 9: Each dozen mini cheesecakes costs $55, so 72 mini cheesecakes cost 72 / 12 * $55 = 6 * $55 = $330. ******
Gen: 
Gen: 
Gen: 
Gen: 
Added Probs: [(0.0, 39), (0.0, 39), (0.0, 13), (0.0, 13), (0.0, 42), (0.0, 42), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [0, 1], 3: [6, 7], 4: [2, 3]}
Selected Indexes: [4, 8, 0, 6, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.10it/s, est. speed input: 1473.70 toks/s, output: 2.20 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.67it/s, est. speed input: 3289.13 toks/s, output: 38.65 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.68it/s, est. speed input: 3370.64 toks/s, output: 67.04 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.46it/s, est. speed input: 3370.64 toks/s, output: 67.04 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.041832403978333 sec
Gen:  Step 10: The total cost is the sum of the costs of the donuts, mini cupcakes, and mini cheesecakes. ******
Gen:  Step 10: The total cost is the sum of the costs of the donuts, mini cupcakes, and mini cheesecakes. ******
Gen: 
Gen: 
Gen:  Step 10: The total cost is the sum of the cost of donuts, mini cupcakes, and mini cheesecakes. ******
Gen:  Step 10: To find the total cost, add the cost of donuts, mini cupcakes, and mini cheesecakes: $2448 + $1920 + $3960 = $8338. ******
Gen: 
Gen: 
Gen: 
Gen: 
Added Probs: [(-9.52061802148819, 29), (-9.52061802148819, 29), (0.0, 1), (0.0, 1), (-15.538744926452637, 28), (-34.5399084687233, 44), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [5], 1: [2, 3, 8, 9], 2: [0, 1], 3: [6, 7], 4: [4]}
Selected Indexes: [5, 2, 0, 6, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.08it/s, est. speed input: 1450.14 toks/s, output: 2.17 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.70it/s, est. speed input: 3237.90 toks/s, output: 25.05 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.46it/s, est. speed input: 3942.30 toks/s, output: 48.90 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.82it/s, est. speed input: 4315.58 toks/s, output: 76.03 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.09it/s, est. speed input: 4315.58 toks/s, output: 76.03 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.631675279000774 sec
Gen:  Step 11: The answer is #### 8338. ******
Gen:  Step 11: The answer is #### 8338. ******
Gen: 
Gen: 
Gen:  Step 11: $204 + $160 + $330 = $694. ******
Gen:  Step 11: $204 + $160 + $330 = #### 694. ******
Gen: 
Gen: 
Gen:  Step 11: The total cost is $2448 + $1920 + $3960 = #### 8338. ******
Gen:  Step 11: The total cost is $2448 + $1920 + $3960 = #### 8328. ******
Added Probs: [(0.0, 14), (0.0, 14), (0.0, 1), (0.0, 1), (-21.736066341400146, 18), (-27.236066341400146, 19), (0.0, 1), (0.0, 1), (-9.107305109500885, 27), (-20.107305109500885, 27)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.07it/s, est. speed input: 1463.86 toks/s, output: 2.15 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.88it/s, est. speed input: 5667.97 toks/s, output: 27.37 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.02it/s, est. speed input: 5667.97 toks/s, output: 27.37 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.255735278944485 sec
Gen:  Step 12: The answer is #### 694. ******
Gen:  Step 12: The answer is #### 694. ******
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Gen: 
Added Probs: [(0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 2, 8]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Toula bought 3 dozen donuts. ****** Step 2: 3 dozen is equal to 3 * 12 = 36 donuts. ****** Step 3: Each dozen donuts costs $68, so 36 donuts cost 36 / 12 * $68 = 3 * $68 = $204. ****** Step 4: She bought 2 dozen mini cupcakes. ****** Step 5: 2 dozen is equal to 2 * 12 = 24 mini cupcakes. ****** Step 6: Each dozen mini cupcakes costs $80, so 24 mini cupcakes cost 24 / 12 * $80 = 2 * $80 = $160. ****** Step 7: She bought 6 dozen mini cheesecakes. ****** Step 8: 6 dozen is equal to 6 * 12 = 72 mini cheesecakes. ****** Step 9: Each dozen mini cheesecakes costs $55, so 72 mini cheesecakes cost 72 / 12 * $55 = 6 * $55 = $330. ****** Step 10: The total cost is the sum of the costs of the donuts, mini cupcakes, and mini cheesecakes. ****** Step 11: $204 + $160 + $330 = $694. ****** Step 12: The answer is #### 694. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Toula bought 3 dozen donuts. ****** Step 2: 3 dozen is equal to 3 * 12 = 36 donuts. ****** Step 3: Each dozen donuts costs $68, so 36 donuts cost 36 / 12 * $68 = 3 * $68 = $204. ****** Step 4: She bought 2 dozen mini cupcakes. ****** Step 5: 2 dozen is equal to 2 * 12 = 24 mini cupcakes. ****** Step 6: Each dozen mini cupcakes costs $80, so 24 mini cupcakes cost 24 / 12 * $80 = 2 * $80 = $160. ****** Step 7: She bought 6 dozen mini cheesecakes. ****** Step 8: 6 dozen is equal to 6 * 12 = 72 mini cheesecakes. ****** Step 9: Each dozen mini cheesecakes costs $55, so 72 mini cheesecakes cost 72 / 12 * $55 = 6 * $55 = $330. ****** Step 10: The total cost is the sum of the costs of the donuts, mini cupcakes, and mini cheesecakes. ****** Step 11: $204 + $160 + $330 = $694. ****** Step 12: The answer is #### 694. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Toula bought 3 dozen donuts. ****** Step 2: Each dozen donuts costs $68, so the total cost of the donuts is 3 * $68 = $204. ****** Step 3: She bought 2 dozen mini cupcakes. ****** Step 4: Each dozen mini cupcakes costs $80, so the total cost of the mini cupcakes is 2 * $80 = $160. ****** Step 5: She bought 6 dozen mini cheesecakes. ****** Step 6: Each dozen mini cheesecakes costs $55, so the total cost of the mini cheesecakes is 6 * $55 = $330. ****** Step 7: To find the total cost, add the cost of the donuts, mini cupcakes, and mini cheesecakes: $204 + $160 + $330 = $694. ****** Step 8: The answer is #### 694. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Toula bought 3 dozen donuts. ****** Step 2: Each dozen donuts costs $68, so the total cost of the donuts is 3 * $68 = $204. ****** Step 3: She bought 2 dozen mini cupcakes. ****** Step 4: Each dozen mini cupcakes costs $80, so the total cost of the mini cupcakes is 2 * $80 = $160. ****** Step 5: She bought 6 dozen mini cheesecakes. ****** Step 6: Each dozen mini cheesecakes costs $55, so the total cost of the mini cheesecakes is 6 * $55 = $330. ****** Step 7: To find the total cost, add the cost of the donuts, mini cupcakes, and mini cheesecakes: $204 + $160 + $330 = $694. ****** Step 8: The answer is #### 694. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Toula bought 3 dozen donuts. ****** Step 2: 3 dozen is equal to 3 * 12 = 36 donuts. ****** Step 3: The cost of donuts is $68 per dozen, so the total cost of donuts is 36 * $68 = $2448. ****** Step 4: Toula bought 2 dozen mini cupcakes. ****** Step 5: 2 dozen is equal to 2 * 12 = 24 mini cupcakes. ****** Step 6: The cost of mini cupcakes is $80 per dozen, so the total cost of mini cupcakes is 24 * $80 = $1920. ****** Step 7: Toula bought 6 dozen mini cheesecakes. ****** Step 8: 6 dozen is equal to 6 * 12 = 72 mini cheesecakes. ****** Step 9: The cost of mini cheesecakes is $55 per dozen, so the total cost of mini cheesecakes is 72 * $55 = $3960. ****** Step 10: The total cost is the sum of the cost of donuts, mini cupcakes, and mini cheesecakes. ****** Step 11: The total cost is $2448 + $1920 + $3960 = #### 8338. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Toula bought 3 dozen donuts. ****** Step 2: 3 dozen is equal to 3 * 12 = 36 donuts. ****** Step 3: The cost of donuts is $68 per dozen, so the total cost of donuts is 36 * $68 = $2448. ****** Step 4: Toula bought 2 dozen mini cupcakes. ****** Step 5: 2 dozen is equal to 2 * 12 = 24 mini cupcakes. ****** Step 6: The cost of mini cupcakes is $80 per dozen, so the total cost of mini cupcakes is 24 * $80 = $1920. ****** Step 7: Toula bought 6 dozen mini cheesecakes. ****** Step 8: 6 dozen is equal to 6 * 12 = 72 mini cheesecakes. ****** Step 9: The cost of mini cheesecakes is $55 per dozen, so the total cost of mini cheesecakes is 72 * $55 = $3960. ****** Step 10: The total cost is the sum of the cost of donuts, mini cupcakes, and mini cheesecakes. ****** Step 11: The total cost is $2448 + $1920 + $3960 = #### 8338. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Toula bought 3 dozen donuts for $68 per dozen. ****** Step 2: The cost of donuts is 3 * $68 = $204. ****** Step 3: She bought 2 dozen mini cupcakes for $80 per dozen. ****** Step 4: The cost of cupcakes is 2 * $80 = $160. ****** Step 5: She bought 6 dozen mini cheesecakes for $55 per dozen. ****** Step 6: The cost of cheesecakes is 6 * $55 = $330. ****** Step 7: The total cost is the sum of the costs of donuts, cupcakes, and cheesecakes: $204 + $160 + $330 = $694. ****** Step 8: The answer is #### 694. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Toula bought 3 dozen donuts for $68 per dozen. ****** Step 2: The cost of donuts is 3 * $68 = $204. ****** Step 3: She bought 2 dozen mini cupcakes for $80 per dozen. ****** Step 4: The cost of cupcakes is 2 * $80 = $160. ****** Step 5: She bought 6 dozen mini cheesecakes for $55 per dozen. ****** Step 6: The cost of cheesecakes is 6 * $55 = $330. ****** Step 7: The total cost is the sum of the costs of donuts, cupcakes, and cheesecakes: $204 + $160 + $330 = $694. ****** Step 8: The answer is #### 694. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Toula bought 3 dozen donuts. ****** Step 2: 3 dozen is equal to 3 * 12 = 36 donuts. ****** Step 3: The cost of donuts is $68 per dozen, so the total cost of donuts is 36 * $68 = $2448. ****** Step 4: Toula bought 2 dozen mini cupcakes. ****** Step 5: 2 dozen is equal to 2 * 12 = 24 mini cupcakes. ****** Step 6: The cost of mini cupcakes is $80 per dozen, so the total cost of mini cupcakes is 24 * $80 = $1920. ****** Step 7: Toula bought 6 dozen mini cheesecakes. ****** Step 8: 6 dozen is equal to 6 * 12 = 72 mini cheesecakes. ****** Step 9: The cost of mini cheesecakes is $55 per dozen, so the total cost of mini cheesecakes is 72 * $55 = $3960. ****** Step 10: To find the total cost, add the cost of donuts, mini cupcakes, and mini cheesecakes: $2448 + $1920 + $3960 = $8338. ****** Step 11: The answer is #### 8338. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Toula bought 3 dozen donuts. ****** Step 2: 3 dozen is equal to 3 * 12 = 36 donuts. ****** Step 3: The cost of donuts is $68 per dozen, so the total cost of donuts is 36 * $68 = $2448. ****** Step 4: Toula bought 2 dozen mini cupcakes. ****** Step 5: 2 dozen is equal to 2 * 12 = 24 mini cupcakes. ****** Step 6: The cost of mini cupcakes is $80 per dozen, so the total cost of mini cupcakes is 24 * $80 = $1920. ****** Step 7: Toula bought 6 dozen mini cheesecakes. ****** Step 8: 6 dozen is equal to 6 * 12 = 72 mini cheesecakes. ****** Step 9: The cost of mini cheesecakes is $55 per dozen, so the total cost of mini cheesecakes is 72 * $55 = $3960. ****** Step 10: To find the total cost, add the cost of donuts, mini cupcakes, and mini cheesecakes: $2448 + $1920 + $3960 = $8338. ****** Step 11: The answer is #### 8338. ******']
Answer Probs: [[{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {717: Logprob(logprob=0.0, rank=1, decoded_token='12')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {25392: Logprob(logprob=0.0, rank=1, decoded_token='694')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {717: Logprob(logprob=0.0, rank=1, decoded_token='12')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {25392: Logprob(logprob=0.0, rank=1, decoded_token='694')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 20.18772735609673
>> Answer lists: ['694', '694', '694', '694', '8338', '8338', '694', '694', '8338', '8338']
>> Original Correct: 694, True
>> Soft SC  Correct: 694, True
>> Golden    Answer: 694
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.14it/s, est. speed input: 1330.56 toks/s, output: 244.40 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.14it/s, est. speed input: 1330.56 toks/s, output: 244.40 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.8784984529484063 sec
Added Probs: [(-1.2690865993499756, 21), (-1.2690865993499756, 21), (-1.2690865993499756, 21), (-1.2690865993499756, 21), (-1.5190865993499756, 21), (-1.5190865993499756, 21), (-2.2168891727924347, 18), (-2.9668891429901123, 18), (-4.344902336597443, 26), (-5.09490230679512, 26)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5], 1: [9], 2: [6, 7], 3: [8], 4: []}
Selected Indexes: [0, 9, 6, 8, 1]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.56s/it, est. speed input: 759.01 toks/s, output: 35.93 toks/s]Processed prompts:  40%|████      | 2/5 [00:02<00:02,  1.03it/s, est. speed input: 1118.05 toks/s, output: 67.82 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.42it/s, est. speed input: 2083.45 toks/s, output: 139.45 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.19it/s, est. speed input: 2603.37 toks/s, output: 176.28 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.292681150021963 sec
Gen:  Step 2: Each year, the tree will produce 7 lemons, which can be sold for $1.5 each. ******
Gen: 

Step 2: The tree will grow 7 lemons each year, and each lemon can be sold for $1.5. So, the total revenue from selling lemons each year is 7 * $1.5 = $10.50. ******
Gen: 

Step 2: Each year, the tree will grow 7 lemons, which can be sold for $1.5 each, earning Carlos $10.5 per year. ******
Gen: 

Step 2: Each year, the tree will grow 7 lemons, which can be sold for $1.5 each, making a total of 7 * $1.5 = $10.5 per year. ******
Gen:  Step 2: Each year, the tree grows 7 lemons, which can be sold for $1.5 each. ******
Gen:  Step 2: Each year, Carlos earns 7 lemons * $1.5 per lemon = $10.50. ******
Gen: 

Step 2: Each year, the tree will grow 7 lemons, which can be sold for $1.5 each, earning Carlos $10.5 per year. ******
Gen: 

Step 2: The tree will grow 7 lemons per year, and each lemon can be sold for $1.5. So, the total revenue per year is 7 * $1.5 = $10.50. ******
Gen:  Step 2: Each year, the tree will produce 7 lemons, which can be sold for $1.5 each. ******
Gen: 

Step 2: The tree will grow 7 lemons each year, and each lemon can be sold for $1.5. So, the total revenue from selling lemons each year is 7 * $1.5 = $10.50. ******
Added Probs: [(-6.711914658546448, 29), (-14.288297057151794, 55), (-6.771885275840759, 39), (-9.54642939567566, 49), (-4.349729001522064, 28), (-10.702252566814423, 28), (-8.010066896677017, 39), (-11.071735680103302, 51), (-6.711914658546448, 29), (-14.288297057151794, 55)]
Cluster Indices: {0: [5], 1: [7], 2: [2, 3, 4, 6], 3: [1, 9], 4: [0, 8]}
Selected Indexes: [5, 7, 4, 1, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.57s/it, est. speed input: 770.26 toks/s, output: 34.98 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.29it/s, est. speed input: 3221.49 toks/s, output: 147.43 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.63it/s, est. speed input: 3221.49 toks/s, output: 147.43 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.912338137975894 sec
Gen:  Step 3: However, it costs $3 per year to water and feed the tree, so his net earnings per year are $10.50 - $3 = $7.50. ******
Gen:  Step 3: It costs $3 per year to water and feed the tree. ******
Gen: 


Step 3: It costs $3 per year to water and feed the tree, so the total cost per year is $3. ******
Gen: 

Step 3: It costs $3 per year to water and feed the tree, so the total cost per year is $3. ******
Gen:  Step 3: Total revenue per year is 7 lemons * $1.5 per lemon = $10.5. ******
Gen:  Step 3: Total revenue per year = 7 lemons * $1.5 per lemon = $10.50 ******
Gen: 

Step 3: The annual cost of watering and feeding the tree is $3. ******
Gen: 

Step 3: It costs $3 to water and feed the tree each year, so the total cost per year is $3. ******
Gen:  Step 3: Total revenue per year is 7 lemons * $1.5 per lemon = $10.5. ******
Gen:  Step 3: Total revenue per year = 7 lemons * $1.5 per lemon = $10.50 ******
Added Probs: [(-5.695962265133858, 41), (-11.227717280387878, 19), (-5.480479806661606, 30), (-9.71170887351036, 30), (-10.622182488441467, 28), (-12.421982645988464, 27), (-5.67153038084507, 20), (-13.583751127123833, 30), (-11.138878762722015, 28), (-12.831735089421272, 27)]
Cluster Indices: {0: [4, 5], 1: [2, 3, 7], 2: [0, 1], 3: [8, 9], 4: [6]}
Selected Indexes: [4, 2, 0, 8, 6]
srun: got SIGCONT
slurmstepd-n02: error: *** JOB 19806 ON n02 CANCELLED AT 2024-08-11T13:44:01 ***
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.34s/it, est. speed input: 927.82 toks/s, output: 28.46 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.11it/s, est. speed input: 1281.24 toks/s, output: 50.59 toks/s]Processed prompts:  60%|██████    | 3/5 [00:02<00:01,  1.57it/s, est. speed input: 1655.25 toks/s, output: 85.55 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  1.97it/s, est. speed input: 1949.84 toks/s, output: 112.98 toks/s]slurmstepd-n02: error: *** STEP 19806.0 ON n02 CANCELLED AT 2024-08-11T13:44:01 ***
srun: forcing job termination
