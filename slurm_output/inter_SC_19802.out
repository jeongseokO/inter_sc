The token has not been saved to the git credentials helper. Pass `add_to_git_credential=True` in this function directly or `--add-to-git-credential` if using via `huggingface-cli` if you want to set the git credential as well.
Token is valid (permission: fineGrained).
Your token has been saved to /home/jeongseokoh/.cache/huggingface/token
Login successful
Inter SC_beam
Num Path: 10 + 5 x 2, Interval: 85
INFO 08-11 13:27:31 llm_engine.py:161] Initializing an LLM engine (v0.5.0.post1) with config: model='meta-llama/Meta-Llama-3-8B-Instruct', speculative_config=None, tokenizer='meta-llama/Meta-Llama-3-8B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir='../../hub/model/', load_format=LoadFormat.AUTO, tensor_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), seed=0, served_model_name=meta-llama/Meta-Llama-3-8B-Instruct)
INFO 08-11 13:27:35 weight_utils.py:218] Using model weights format ['*.safetensors']
INFO 08-11 13:27:39 model_runner.py:160] Loading model weights took 14.9595 GB
INFO 08-11 13:27:41 gpu_executor.py:83] # GPU blocks: 13407, # CPU blocks: 2048
INFO 08-11 13:27:44 model_runner.py:889] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 08-11 13:27:44 model_runner.py:893] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 08-11 13:28:00 model_runner.py:965] Graph capturing finished in 16 secs.
Model: llama3_8b is selected
Dataset: gsm8k is selected
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.36it/s, est. speed input: 1574.70 toks/s, output: 271.02 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.35it/s, est. speed input: 1574.70 toks/s, output: 271.02 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (1) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7498439779737964 sec
Added Probs: [(0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20), (0.0, 20)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 1: [], 2: [], 3: [], 4: []}
Selected Indexes: [0, 1, 2, 3, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.61s/it, est. speed input: 733.85 toks/s, output: 36.63 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.10it/s, est. speed input: 3668.60 toks/s, output: 183.12 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.6370619350345805 sec
Added Probs: [(-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30), (-2.1579796969890594, 29), (-6.157979786396027, 30)]
Cluster Indices: {0: [1, 3, 5, 7, 9], 1: [0, 2, 4, 6, 8], 2: [], 3: [], 4: []}
Selected Indexes: [1, 0, 3, 5, 7]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.66s/it, est. speed input: 729.54 toks/s, output: 36.78 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.92it/s, est. speed input: 3531.52 toks/s, output: 187.25 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.7318201250163838 sec
Added Probs: [(-6.862016201019287, 32), (-10.086901187896729, 33), (-4.082843989133835, 30), (-4.166400074958801, 31), (-6.862016201019287, 32), (-10.086901187896729, 33), (-6.862016201019287, 32), (-10.086901187896729, 33), (-6.862016201019287, 32), (-10.086901187896729, 33)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [0, 4, 6, 8], 2: [3], 3: [2], 4: []}
Selected Indexes: [1, 0, 3, 2, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.51s/it, est. speed input: 823.21 toks/s, output: 33.19 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.96it/s, est. speed input: 2032.44 toks/s, output: 95.01 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.73it/s, est. speed input: 3389.04 toks/s, output: 175.81 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8431385989533737 sec
Added Probs: [(-7.935717701911926, 37), (-17.452032566070557, 37), (-4.668896675109863, 37), (-6.668896675109863, 37), (-3.44379198551178, 25), (-3.44379198551178, 25), (-5.99651825428009, 25), (-12.15099549293518, 25), (-7.935717701911926, 37), (-17.452032566070557, 37)]
Cluster Indices: {0: [4, 5], 1: [0, 1, 8, 9], 2: [3], 3: [6, 7], 4: [2]}
Selected Indexes: [4, 0, 3, 6, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.08s/it, est. speed input: 1179.39 toks/s, output: 17.52 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.20it/s, est. speed input: 3437.46 toks/s, output: 72.13 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.37it/s, est. speed input: 4288.39 toks/s, output: 105.83 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.4969727549469098 sec
Added Probs: [(-7.6835885643959045, 25), (-7.6835885643959045, 25), (-2.3867083340883255, 10), (-9.26170825958252, 9), (-2.3867083340883255, 10), (-9.26170825958252, 9), (-6.69931024312973, 25), (-7.94931024312973, 25), (-2.2667118906974792, 10), (-9.766712188720703, 9)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.19it/s, est. speed input: 1536.01 toks/s, output: 2.39 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.47it/s, est. speed input: 4771.17 toks/s, output: 24.09 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.63it/s, est. speed input: 5963.77 toks/s, output: 42.62 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.092132044956088 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 10), (0.0, 10), (0.0, 1), (0.0, 1), (0.0, 10), (0.0, 10), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 0]
Found EoS token, Break
completions: ["<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes muffins with 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes muffins with 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes muffins for her friends using 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes muffins for her friends using 4 eggs, leaving her with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 x $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes 4 eggs for muffins, so she has 13 - 4 = 9 eggs left. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she has 16 - 3 = 13 eggs left. ******\n\nStep 3: She bakes 4 eggs for muffins, so she has 13 - 4 = 9 eggs left. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg. ******\n\nStep 5: The total amount she makes is 9 eggs x $2 per egg = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 * $2 = $18. ******\n\nThe answer is #### 18. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Janet's ducks lay 16 eggs per day. ******\n\nStep 2: She eats 3 eggs for breakfast, so she is left with 16 - 3 = 13 eggs. ******\n\nStep 3: She bakes 4 eggs for her friends, so she is left with 13 - 4 = 9 eggs. ******\n\nStep 4: She sells the remaining 9 eggs at the farmers' market for $2 per egg, so she makes 9 * $2 = $18. ******\n\nThe answer is #### 18. ******"]
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=0.0, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {972: Logprob(logprob=0.0, rank=1, decoded_token='18')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 9.061900667962618
>> Answer lists: ['18', '18', '18', '18', '18', '18', '18', '18', '18', '18']
>> Original Correct: 18, True
>> Soft SC  Correct: 18, True
>> Golden    Answer: 18
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.42it/s, est. speed input: 1601.77 toks/s, output: 284.75 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.42it/s, est. speed input: 1601.77 toks/s, output: 284.75 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7057493859902024 sec
Added Probs: [(-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.1672241687774658, 20), (-1.6672241687774658, 20), (-1.6672241687774658, 20)]
Cluster Indices: {0: [0, 2, 3, 4, 5, 8, 9], 1: [1, 6, 7], 2: [], 3: [], 4: []}
Selected Indexes: [0, 1, 2, 3, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.46s/it, est. speed input: 783.85 toks/s, output: 34.91 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.42it/s, est. speed input: 3918.46 toks/s, output: 174.53 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.4726234480040148 sec
Added Probs: [(-1.4002655148506165, 26), (-2.9002654552459717, 25), (-3.522831439971924, 25), (-5.226556301116943, 26), (-1.4002655148506165, 26), (-2.9002654552459717, 25), (-1.4002655148506165, 26), (-2.9002654552459717, 25), (-1.4002655148506165, 26), (-2.9002654552459717, 25)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [0, 4, 6, 8], 2: [3], 3: [2], 4: []}
Selected Indexes: [1, 0, 3, 2, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.45s/it, est. speed input: 804.88 toks/s, output: 34.40 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.72it/s, est. speed input: 2608.96 toks/s, output: 118.71 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.79it/s, est. speed input: 3261.07 toks/s, output: 153.80 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.8064450320089236 sec
Added Probs: [(-1.641285315155983, 25), (-1.641285315155983, 25), (-2.856185406446457, 25), (-8.022629231214523, 38), (-2.933805227279663, 25), (-8.788045227527618, 38), (-0.7557871341705322, 25), (-0.7557871341705322, 25), (-1.641285315155983, 25), (-1.641285315155983, 25)]
Cluster Indices: {0: [5], 1: [0, 1, 8, 9], 2: [4, 6, 7], 3: [3], 4: [2]}
Selected Indexes: [5, 0, 6, 3, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.12s/it, est. speed input: 1080.39 toks/s, output: 23.23 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.47it/s, est. speed input: 5363.96 toks/s, output: 116.14 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.1351797740207985 sec
Added Probs: [(0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (-0.9016504883766174, 13), (-0.9016504883766174, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [8, 9], 4: [2, 3]}
Selected Indexes: [4, 6, 0, 8, 2]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It also takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It also takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: A robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2/2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, the robe takes 2 bolts of blue fiber and 1 bolt of white fiber, which is 2 + 1 = 3 bolts. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The robe takes 2 bolts of blue fiber. ****** Step 2: It takes half that much white fiber, which is 2 / 2 = 1 bolt. ****** Step 3: In total, it takes 2 bolts of blue fiber and 1 bolt of white fiber. ****** Step 4: The answer is #### 3. ******']
Answer Probs: [[{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=-0.22541262209415436, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=-0.22541262209415436, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {19: Logprob(logprob=0.0, rank=1, decoded_token='4')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {18: Logprob(logprob=0.0, rank=1, decoded_token='3')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 5.232149426010437
>> Answer lists: ['3', '3', '3', '3', '3', '3', '3', '3', '3', '3']
>> Original Correct: 3, True
>> Soft SC  Correct: 3, True
>> Golden    Answer: 3
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.43s/it, est. speed input: 800.13 toks/s, output: 165.87 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.44s/it, est. speed input: 800.13 toks/s, output: 165.87 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.438299490022473 sec
Added Probs: [(-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-0.4740769863128662, 20), (-1.6128770411014557, 29), (-4.473233863711357, 49)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7], 1: [9], 2: [8], 3: [], 4: []}
Selected Indexes: [0, 9, 8, 1, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.48s/it, est. speed input: 795.97 toks/s, output: 29.76 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.30it/s, est. speed input: 1338.56 toks/s, output: 66.21 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.73it/s, est. speed input: 2478.45 toks/s, output: 160.23 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.11it/s, est. speed input: 2478.45 toks/s, output: 160.23 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.383282763999887 sec
Added Probs: [(-4.940427154302597, 36), (-4.940427154302597, 36), (-10.424155533313751, 60), (-11.546018660068512, 60), (-5.404024124145508, 18), (-5.810808479785919, 26), (-4.940427154302597, 36), (-4.940427154302597, 36), (-4.940427154302597, 36), (-4.940427154302597, 36)]
Cluster Indices: {0: [5], 1: [0, 1, 6, 7, 8, 9], 2: [3], 3: [4], 4: [2]}
Selected Indexes: [5, 0, 3, 4, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:02<00:08,  2.06s/it, est. speed input: 610.81 toks/s, output: 43.77 toks/s]Processed prompts:  60%|██████    | 3/5 [00:02<00:01,  1.69it/s, est. speed input: 1676.32 toks/s, output: 124.99 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  3.01it/s, est. speed input: 2557.74 toks/s, output: 198.71 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.09it/s, est. speed input: 2557.74 toks/s, output: 198.71 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.403615248040296 sec
Added Probs: [(-11.203635692596436, 51), (-12.996289104223251, 46), (-14.23507346212864, 51), (-18.83130642771721, 46), (-12.984196543693542, 45), (-12.984196543693542, 45), (-19.05882726609707, 43), (-19.68430083990097, 58), (-14.0471760481596, 45), (-20.922222286462784, 45)]
Cluster Indices: {0: [4, 5, 8, 9], 1: [1, 3], 2: [6], 3: [7], 4: [0, 2]}
Selected Indexes: [8, 1, 6, 7, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.25s/it, est. speed input: 1037.89 toks/s, output: 25.55 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.15it/s, est. speed input: 1374.81 toks/s, output: 57.17 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.73it/s, est. speed input: 2544.73 toks/s, output: 132.87 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.43it/s, est. speed input: 3052.91 toks/s, output: 171.22 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.073616986046545 sec
Added Probs: [(-5.625364065170288, 16), (-5.625364065170288, 16), (-2.904024124145508, 38), (-18.712531089782715, 36), (-13.318167209625244, 43), (-23.818002700805664, 46), (-8.277598261833191, 43), (-24.015767514705658, 39), (-5.56244683265686, 38), (-5.56244683265686, 38)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1580.93 toks/s, output: 2.40 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.81it/s, est. speed input: 2189.50 toks/s, output: 25.19 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.79it/s, est. speed input: 2212.50 toks/s, output: 56.91 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.79it/s, est. speed input: 2990.52 toks/s, output: 112.76 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.31it/s, est. speed input: 2990.52 toks/s, output: 112.76 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.176595533033833 sec
Added Probs: [(-4.930817559361458, 35), (-4.930817559361458, 35), (-10.271316766738892, 38), (-17.205671817064285, 38), (-11.648671925067902, 17), (-28.212916031479836, 51), (0.0, 1), (0.0, 1), (0.0, 14), (0.0, 14)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [6, 7], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 2, 6, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.18it/s, est. speed input: 1549.76 toks/s, output: 2.36 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.08it/s, est. speed input: 2540.38 toks/s, output: 30.97 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.48it/s, est. speed input: 2912.07 toks/s, output: 60.77 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.65it/s, est. speed input: 3487.23 toks/s, output: 86.45 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.898108787019737 sec
Added Probs: [(-18.950948774814606, 40), (-29.025279343128204, 13), (-14.978281080722809, 25), (-42.62918043136597, 37), (0.0, 1), (0.0, 1), (-9.050416588783264, 17), (-27.478724598884583, 27), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.14it/s, est. speed input: 1493.16 toks/s, output: 2.27 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.78it/s, est. speed input: 3202.52 toks/s, output: 25.92 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.96it/s, est. speed input: 5276.45 toks/s, output: 72.13 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2736739759566262 sec
Added Probs: [(0.0, 1), (0.0, 1), (-7.887168273329735, 14), (-7.887168273329735, 14), (0.0, 1), (0.0, 1), (0.0, 15), (0.0, 15), (-3.1418703757226467, 15), (-8.39187016710639, 14)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.12it/s, est. speed input: 1469.12 toks/s, output: 2.25 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.77it/s, est. speed input: 5348.74 toks/s, output: 30.33 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.99it/s, est. speed input: 5348.74 toks/s, output: 30.33 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2660606650169939 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 15), (0.0, 15), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [0, 1], 4: [2, 3]}
Selected Indexes: [4, 6, 8, 0, 2]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is $80,000 + (150% of $80,000) = $80,000 + $120,000 = $200,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $200,000 - $130,000 = $70,000. ****** Step 5: The answer is #### 70000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is $80,000 + (150% of $80,000) = $80,000 + $120,000 = $200,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $200,000 - $130,000 = $70,000. ****** Step 5: The answer is #### 70000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: To find the new value of the house, we multiply the original value by 1.5 (since 150% is the same as 1.5 times the original value): $80,000 * 1.5 = $120,000. ****** Step 4: Since Josh spent $80,000 on the house and $50,000 on repairs, his total cost is $80,000 + $50,000 = $130,000. ****** Step 5: To find the profit, we subtract the cost from the new value of the house: $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. Josh actually lost $10,000. ****** Step 7: The answer is #### -10,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: To find the new value of the house, we multiply the original value by 1.5 (since 150% is the same as 1.5 times the original value): $80,000 * 1.5 = $120,000. ****** Step 4: Since Josh spent $80,000 on the house and $50,000 on repairs, his total cost is $80,000 + $50,000 = $130,000. ****** Step 5: To find the profit, we subtract the cost from the new value of the house: $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. Josh actually lost $10,000. ****** Step 7: The answer is #### -10,000. ******', "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: This means the new value of the house is 1.5 times the original value, so it's now 1.5 * $80,000 = $120,000. ****** Step 4: Josh originally spent $80,000 on the house and $50,000 on repairs, for a total of $80,000 + $50,000 = $130,000. ****** Step 5: He sold the house for $120,000, so his profit is $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. ****** Step 7: Josh actually lost $10,000. ****** Step 8: The answer is #### -10,000. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The repairs increased the value of the house by 150%. ****** Step 3: This means the new value of the house is 1.5 times the original value, so it's now 1.5 * $80,000 = $120,000. ****** Step 4: Josh originally spent $80,000 on the house and $50,000 on repairs, for a total of $80,000 + $50,000 = $130,000. ****** Step 5: He sold the house for $120,000, so his profit is $120,000 - $130,000 = -$10,000. ****** Step 6: However, this is a loss, not a profit. ****** Step 7: Josh actually lost $10,000. ****** Step 8: The answer is #### -10,000. ******", '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******\n\nStep 2: The value of the house increased by 150%, so the new value is 1.5 times the original value. The original value is $80,000, so the new value is 1.5 * $80,000 = $120,000. ******\n\nStep 3: Since Josh spent $130,000 and the house is now worth $120,000, he made a loss of $130,000 - $120,000 = $10,000. ******\n\nStep 4: The answer is #### -10,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs, so the total cost is $80,000 + $50,000 = $130,000. ******\n\nStep 2: The value of the house increased by 150%, so the new value is 1.5 times the original value. The original value is $80,000, so the new value is 1.5 * $80,000 = $120,000. ******\n\nStep 3: Since Josh spent $130,000 and the house is now worth $120,000, he made a loss of $130,000 - $120,000 = $10,000. ******\n\nStep 4: The answer is #### -10,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is 150% of the original value, which is 1.5 x $80,000 = $120,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $120,000 - $130,000 = -$10,000. ****** Step 5: However, this is a loss, not a profit. ****** Step 6: To find the profit, we need to subtract the original value from the new value, which is $120,000 - $80,000 = $40,000. ****** Step 7: The answer is #### 40,000. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Josh buys a house for $80,000 and puts in $50,000 in repairs. ****** Step 2: The total amount spent is $80,000 + $50,000 = $130,000. ****** Step 3: The value of the house increased by 150%, so the new value is 150% of the original value, which is 1.5 x $80,000 = $120,000. ****** Step 4: The profit is the difference between the new value and the total amount spent, which is $120,000 - $130,000 = -$10,000. ****** Step 5: However, this is a loss, not a profit. ****** Step 6: To find the profit, we need to subtract the original value from the new value, which is $120,000 - $80,000 = $40,000. ****** Step 7: The answer is #### 40,000. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {23: Logprob(logprob=0.0, rank=1, decoded_token='8')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {482: Logprob(logprob=0.0, rank=1, decoded_token=' -')}, {605: Logprob(logprob=0.0, rank=1, decoded_token='10')}, {11: Logprob(logprob=0.0, rank=1, decoded_token=',')}, {931: Logprob(logprob=0.0, rank=1, decoded_token='000')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {23: Logprob(logprob=0.0, rank=1, decoded_token='8')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {482: Logprob(logprob=0.0, rank=1, decoded_token=' -')}, {605: Logprob(logprob=0.0, rank=1, decoded_token='10')}, {11: Logprob(logprob=0.0, rank=1, decoded_token=',')}, {931: Logprob(logprob=0.0, rank=1, decoded_token='000')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 15.176077865995467
>> Answer lists: ['70000', '70000', '-10000', '-10000', '-10000', '-10000', '-10000', '-10000', '40000', '40000']
>> Original Correct: -10000, False
>> Soft SC  Correct: 70000, True
>> Golden    Answer: 70000
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.32it/s, est. speed input: 1500.49 toks/s, output: 283.40 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.32it/s, est. speed input: 1500.49 toks/s, output: 283.40 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.7582968770293519 sec
Added Probs: [(-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-0.5279757976531982, 22), (-2.6544992923736572, 19), (-3.3412375450134277, 19)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7], 1: [8], 2: [9], 3: [], 4: []}
Selected Indexes: [0, 8, 9, 1, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.14s/it, est. speed input: 1013.04 toks/s, output: 23.74 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.51it/s, est. speed input: 1574.77 toks/s, output: 53.93 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.46it/s, est. speed input: 3564.36 toks/s, output: 151.37 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.09it/s, est. speed input: 3564.36 toks/s, output: 151.37 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6294726310297847 sec
Added Probs: [(-1.3862943649291992, 26), (-1.3862943649291992, 26), (-7.152077674865723, 30), (-7.811995029449463, 32), (-1.6557369232177734, 13), (-5.01667594909668, 14), (-1.3862943649291992, 26), (-1.3862943649291992, 26), (-1.3862943649291992, 26), (-1.3862943649291992, 26)]
Cluster Indices: {0: [5], 1: [0, 1, 6, 7, 8, 9], 2: [2], 3: [4], 4: [3]}
Selected Indexes: [5, 0, 2, 4, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.45s/it, est. speed input: 803.38 toks/s, output: 32.38 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.34it/s, est. speed input: 2212.09 toks/s, output: 99.52 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.05it/s, est. speed input: 3588.40 toks/s, output: 169.71 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.6490831041010097 sec
Added Probs: [(-4.93377149105072, 22), (-5.154599279165268, 25), (-1.995374321937561, 30), (-1.995374321937561, 30), (-5.30536150932312, 28), (-7.492102324962616, 32), (-5.940858364105225, 26), (-8.112035125494003, 25), (-2.9584905356168747, 30), (-2.9584905356168747, 30)]
Cluster Indices: {0: [5, 8, 9], 1: [4], 2: [0, 1], 3: [2, 3], 4: [6, 7]}
Selected Indexes: [8, 4, 1, 2, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.14s/it, est. speed input: 1065.46 toks/s, output: 22.82 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.90it/s, est. speed input: 2985.33 toks/s, output: 75.47 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.52it/s, est. speed input: 3449.62 toks/s, output: 110.07 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.87it/s, est. speed input: 3449.62 toks/s, output: 110.07 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7556406649528071 sec
Added Probs: [(0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (-14.431455254554749, 34), (-24.56932258605957, 36), (0.0, 13), (0.0, 13), (-1.8963079452514648, 13), (-15.947615146636963, 31)]
Cluster Indices: {0: [5], 1: [6, 7], 2: [0, 1, 2, 3], 3: [8, 9], 4: [4]}
Selected Indexes: [5, 6, 0, 8, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.24it/s, est. speed input: 1519.61 toks/s, output: 2.48 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.19it/s, est. speed input: 4335.78 toks/s, output: 28.43 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.34it/s, est. speed input: 5302.99 toks/s, output: 52.10 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.1638560639694333 sec
Added Probs: [(0.0, 14), (0.0, 14), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 2, 8]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he does this for 7 days a week, the total number of meters he runs is 7 * 180 = 1260 meters. ****** Step 5: The answer is #### 1260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he does this for 7 days a week, the total number of meters he runs is 7 * 180 = 1260 meters. ****** Step 5: The answer is #### 1260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints 3 times a week. ****** Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints 3 times a week. ****** Step 2: That means he runs a total of 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per day. ****** Step 2: He runs 3 days a week, so in total he runs 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per day. ****** Step 2: He runs 3 days a week, so in total he runs 3 * 3 = 9 sprints a week. ****** Step 3: Each sprint is 60 meters, so the total distance he runs is 9 * 60 = 540 meters. ****** Step 4: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: Each sprint is 60 meters. ****** Step 3: So, the total distance he runs per week is 3 * 60 = 180 meters. ****** Step 4: The answer is #### 180. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: Each sprint is 60 meters. ****** Step 3: So, the total distance he runs per week is 3 * 60 = 180 meters. ****** Step 4: The answer is #### 180. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he runs 3 days a week, the total meters he runs in a week is 3 * 180 = 540 meters. ****** Step 5: The answer is #### 540. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: James runs 3 sprints per week. ****** Step 2: He runs 60 meters each sprint. ****** Step 3: So, he runs a total of 3 * 60 = 180 meters per day. ****** Step 4: Since he runs 3 days a week, the total meters he runs in a week is 3 * 180 = 540 meters. ****** Step 5: The answer is #### 540. ******']
Answer Probs: [[{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {9390: Logprob(logprob=0.0, rank=1, decoded_token='126')}, {15: Logprob(logprob=0.0, rank=1, decoded_token='0')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {9390: Logprob(logprob=0.0, rank=1, decoded_token='126')}, {15: Logprob(logprob=0.0, rank=1, decoded_token='0')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {17048: Logprob(logprob=0.0, rank=1, decoded_token='540')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {17048: Logprob(logprob=0.0, rank=1, decoded_token='540')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 7.091972933034413
>> Answer lists: ['1260', '1260', '540', '540', '540', '540', '180', '180', '540', '540']
>> Original Correct: 540, True
>> Soft SC  Correct: 540, True
>> Golden    Answer: 540
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s, est. speed input: 1268.61 toks/s, output: 245.94 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.05it/s, est. speed input: 1268.61 toks/s, output: 245.94 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.9550685229478404 sec
Added Probs: [(-0.8395949006080627, 24), (-0.8395949006080627, 24), (-0.8395949006080627, 24), (-0.8395949006080627, 24), (-0.8395949006080627, 24), (-1.3395949006080627, 22), (-1.3395949006080627, 22), (-1.3395949006080627, 22), (-3.161880850791931, 19), (-3.7907389402389526, 29)]
Cluster Indices: {0: [5, 6, 7], 1: [9], 2: [8], 3: [0, 1, 2, 3, 4], 4: []}
Selected Indexes: [5, 9, 8, 0, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.27s/it, est. speed input: 965.71 toks/s, output: 26.72 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.00it/s, est. speed input: 3047.71 toks/s, output: 100.87 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.96it/s, est. speed input: 3637.85 toks/s, output: 127.15 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7021952440263703 sec
Added Probs: [(0.0, 17), (0.0, 17), (-6.809253215789795, 27), (-7.251251578330994, 30), (-2.676568627357483, 19), (-7.910082221031189, 33), (-3.0038580894470215, 19), (-4.0115742683410645, 19), (0.0, 17), (0.0, 17)]
Cluster Indices: {0: [5], 1: [0, 1, 8, 9], 2: [4], 3: [2, 3], 4: [6, 7]}
Selected Indexes: [5, 0, 4, 3, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.41s/it, est. speed input: 894.10 toks/s, output: 28.41 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.47it/s, est. speed input: 2487.29 toks/s, output: 86.40 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.13it/s, est. speed input: 3700.70 toks/s, output: 140.56 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.95it/s, est. speed input: 3700.70 toks/s, output: 140.56 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.7051310649840161 sec
Added Probs: [(-5.0114733427762985, 18), (-8.791347205638885, 22), (-3.0865302085876465, 26), (-19.428138971328735, 23), (-2.7155274152755737, 19), (-18.678828835487366, 33), (-6.38695764541626, 24), (-9.857072174549103, 18), (-3.837664783000946, 28), (-22.61335176229477, 27)]
Cluster Indices: {0: [0, 1, 5], 1: [6, 7], 2: [3, 9], 3: [2, 8], 4: [4]}
Selected Indexes: [0, 6, 3, 2, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.31s/it, est. speed input: 972.68 toks/s, output: 27.42 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.46it/s, est. speed input: 1632.86 toks/s, output: 54.51 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.98it/s, est. speed input: 2056.99 toks/s, output: 80.98 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.72it/s, est. speed input: 2530.78 toks/s, output: 109.56 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.84it/s, est. speed input: 2733.01 toks/s, output: 132.96 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.14it/s, est. speed input: 2733.01 toks/s, output: 132.96 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.3434666879475117 sec
Added Probs: [(0.0, 18), (0.0, 18), (-14.361960530281067, 57), (-15.836016297340393, 33), (-10.827795505523682, 27), (-10.990111589431763, 22), (-12.05404245853424, 26), (-15.972367286682129, 44), (-5.033793687820435, 27), (-28.571627140045166, 38)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1, 9], 4: [8]}
Selected Indexes: [4, 6, 2, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.19s/it, est. speed input: 1135.98 toks/s, output: 21.93 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.58it/s, est. speed input: 1844.99 toks/s, output: 48.86 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.59it/s, est. speed input: 3341.76 toks/s, output: 109.14 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.39it/s, est. speed input: 3438.52 toks/s, output: 129.60 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.63it/s, est. speed input: 3438.52 toks/s, output: 129.60 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.9101106009911746 sec
Added Probs: [(-2.370384931564331, 22), (-2.370384931564331, 22), (-4.918833076953888, 26), (-6.960308030247688, 27), (0.0, 13), (0.0, 13), (-3.776789605617523, 24), (-3.776789605617523, 24), (-15.18961288034916, 35), (-15.211128741502762, 40)]
Cluster Indices: {0: [4, 5], 1: [6, 7, 8], 2: [0, 1], 3: [2, 3], 4: [9]}
Selected Indexes: [4, 6, 0, 2, 9]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.17it/s, est. speed input: 1589.02 toks/s, output: 2.34 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.29it/s, est. speed input: 1705.92 toks/s, output: 35.66 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.13it/s, est. speed input: 2390.42 toks/s, output: 66.76 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.07it/s, est. speed input: 2992.07 toks/s, output: 100.97 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.92it/s, est. speed input: 3084.43 toks/s, output: 118.70 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.32it/s, est. speed input: 3084.43 toks/s, output: 118.70 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.1694240680662915 sec
Added Probs: [(0.0, 1), (0.0, 1), (-6.4028443694114685, 27), (-6.4028443694114685, 27), (-13.972560346126556, 26), (-36.64370933175087, 50), (-2.3212260603904724, 35), (-6.821225881576538, 33), (-22.874168157577515, 25), (-24.600374579429626, 31)]
Cluster Indices: {0: [5], 1: [4, 6, 7], 2: [8, 9], 3: [0, 1], 4: [2, 3]}
Selected Indexes: [5, 6, 9, 0, 2]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.11it/s, est. speed input: 1514.16 toks/s, output: 2.23 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.77it/s, est. speed input: 2219.77 toks/s, output: 22.78 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.07it/s, est. speed input: 5528.14 toks/s, output: 86.24 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.243148710927926 sec
Added Probs: [(0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 6, 2, 0, 8]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: She needs to give 3 cups of feed to each of the 20 chickens. ****** Step 4: So, in total, she needs to give 20 * 3 = 60 cups of feed. ****** Step 5: She has already given 15 + 25 = 40 cups of feed. ****** Step 6: To find out how many cups of feed she needs to give in the final meal, subtract the total cups of feed she has already given from the total cups of feed needed: 60 - 40 = 20. ****** Step 7: The answer is #### 20. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: She needs to give 3 cups of feed to each of the 20 chickens. ****** Step 4: So, in total, she needs to give 20 * 3 = 60 cups of feed. ****** Step 5: She has already given 15 + 25 = 40 cups of feed. ****** Step 6: To find out how many cups of feed she needs to give in the final meal, subtract the total cups of feed she has already given from the total cups of feed needed: 60 - 40 = 20. ****** Step 7: The answer is #### 20. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: In total, she has given 15 + 25 = 40 cups of feed so far. ****** Step 4: She needs to give feed to 20 chickens, and each chicken needs 3 cups of feed. ****** Step 5: So, she needs to give 20 * 3 = 60 cups of feed in total. ****** Step 6: Since she has already given 40 cups, she needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi gives 15 cups of feed in the morning. ****** Step 2: She gives 25 cups of feed in the afternoon. ****** Step 3: In total, she has given 15 + 25 = 40 cups of feed so far. ****** Step 4: She needs to give feed to 20 chickens, and each chicken needs 3 cups of feed. ****** Step 5: So, she needs to give 20 * 3 = 60 cups of feed in total. ****** Step 6: Since she has already given 40 cups, she needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******', "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: In the morning, she gives them 15 cups of feed. ****** Step 3: In the afternoon, she gives them 25 cups of feed. ****** Step 4: In total, she has given them 15 + 25 = 40 cups of feed so far. ****** Step 5: Since each chicken needs 3 cups of feed, and there are 20 chickens, the total amount of feed needed is 20 * 3 = 60 cups. ****** Step 6: Since she has already given them 40 cups, she still needs 60 - 40 = 20 cups of feed. ****** Step 7: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: In the morning, she gives them 15 cups of feed. ****** Step 3: In the afternoon, she gives them 25 cups of feed. ****** Step 4: In total, she has given them 15 + 25 = 40 cups of feed so far. ****** Step 5: Since each chicken needs 3 cups of feed, and there are 20 chickens, the total amount of feed needed is 20 * 3 = 60 cups. ****** Step 6: Since she has already given them 40 cups, she still needs 60 - 40 = 20 cups of feed. ****** Step 7: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's chickens need 3 cups of feed each, and there are 20 chickens. ****** Step 2: So, the total feed needed for the day is 20 chickens * 3 cups/chicken = 60 cups. ****** Step 3: She has already given 15 cups in the morning and 25 cups in the afternoon. ****** Step 4: To find out how many cups she needs to give in the final meal, subtract the total cups given so far from the total cups needed for the day: 60 - (15 + 25) = 60 - 40 = 20 cups. ****** Step 5: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's chickens need 3 cups of feed each, and there are 20 chickens. ****** Step 2: So, the total feed needed for the day is 20 chickens * 3 cups/chicken = 60 cups. ****** Step 3: She has already given 15 cups in the morning and 25 cups in the afternoon. ****** Step 4: To find out how many cups she needs to give in the final meal, subtract the total cups given so far from the total cups needed for the day: 60 - (15 + 25) = 60 - 40 = 20 cups. ****** Step 5: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: Each chicken needs 3 cups of feed, so the total feed needed per meal is 20 * 3 = 60 cups. ****** Step 3: In the morning, she gives 15 cups of feed. ****** Step 4: In the afternoon, she gives 25 cups of feed. ****** Step 5: So far, she has given 15 + 25 = 40 cups of feed. ****** Step 6: She still needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Wendi's flock has 20 chickens. ****** Step 2: Each chicken needs 3 cups of feed, so the total feed needed per meal is 20 * 3 = 60 cups. ****** Step 3: In the morning, she gives 15 cups of feed. ****** Step 4: In the afternoon, she gives 25 cups of feed. ****** Step 5: So far, she has given 15 + 25 = 40 cups of feed. ****** Step 6: She still needs to give 60 - 40 = 20 cups of feed in the final meal. ****** Step 7: The answer is #### 20. ******"]
Answer Probs: [[{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {508: Logprob(logprob=0.0, rank=1, decoded_token='20')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 12.22789110802114
>> Answer lists: ['20', '20', '20', '20', '20', '20', '20', '20', '20', '20']
>> Original Correct: 20, True
>> Soft SC  Correct: 20, True
>> Golden    Answer: 20
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.59s/it, est. speed input: 723.89 toks/s, output: 179.56 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.59s/it, est. speed input: 723.89 toks/s, output: 179.56 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.5957886360120028 sec
Added Probs: [(-0.6278396248817444, 20), (-0.6278396248817444, 20), (-0.6278396248817444, 20), (-0.6278396248817444, 20), (-2.695986747741699, 17), (-3.346505492925644, 41), (-3.346505492925644, 41), (-3.844576418399811, 28), (-4.425843507051468, 25), (-12.707034707069397, 54)]
Cluster Indices: {0: [5, 6, 7], 1: [0, 1, 2, 3], 2: [8], 3: [9], 4: [4]}
Selected Indexes: [5, 0, 8, 9, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.61s/it, est. speed input: 730.10 toks/s, output: 35.48 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.66it/s, est. speed input: 2526.28 toks/s, output: 136.25 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.57it/s, est. speed input: 3042.64 toks/s, output: 173.66 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.958521057968028 sec
Added Probs: [(-8.701259523630142, 40), (-17.425561726093292, 43), (-7.986263334751129, 27), (-8.095078229904175, 30), (-5.445624768733978, 30), (-6.970257043838501, 30), (-5.580204486846924, 38), (-6.400652676820755, 40), (-2.4256208539009094, 30), (-4.552144348621368, 30)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [6, 7], 3: [0, 1], 4: [8, 9]}
Selected Indexes: [4, 3, 6, 0, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.49s/it, est. speed input: 836.08 toks/s, output: 33.58 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:01,  1.87it/s, est. speed input: 1947.14 toks/s, output: 94.00 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.61it/s, est. speed input: 2569.90 toks/s, output: 146.01 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.11it/s, est. speed input: 2569.90 toks/s, output: 146.01 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.382284561987035 sec
Added Probs: [(-9.140857636928558, 40), (-26.66715171933174, 39), (-8.624547064304352, 26), (-15.16963666677475, 59), (-0.6042400002479553, 25), (-0.6042400002479553, 25), (-1.1606130301952362, 25), (-3.410612940788269, 24), (-12.760174736380577, 40), (-28.108588457107544, 43)]
Cluster Indices: {0: [4, 5], 1: [0, 6, 7, 8], 2: [2], 3: [1, 9], 4: [3]}
Selected Indexes: [4, 6, 2, 9, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.16s/it, est. speed input: 1086.97 toks/s, output: 22.39 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.53it/s, est. speed input: 1704.38 toks/s, output: 50.63 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.79it/s, est. speed input: 3505.11 toks/s, output: 130.40 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.80it/s, est. speed input: 3505.11 toks/s, output: 130.40 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.798633108031936 sec
Added Probs: [(-6.262373447418213, 24), (-8.06003713607788, 37), (0.0, 25), (0.0, 25), (0.0, 24), (0.0, 24), (-1.007716178894043, 23), (-6.007716178894043, 25), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [0, 1], 2: [6, 7], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 1, 6, 2, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.20it/s, est. speed input: 1530.04 toks/s, output: 2.40 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.86it/s, est. speed input: 2219.85 toks/s, output: 24.07 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.41it/s, est. speed input: 2683.69 toks/s, output: 51.61 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.39it/s, est. speed input: 2745.49 toks/s, output: 73.74 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  3.09it/s, est. speed input: 3171.77 toks/s, output: 112.76 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.48it/s, est. speed input: 3171.77 toks/s, output: 112.76 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.0249355230480433 sec
Added Probs: [(-4.12969708442688, 24), (-4.893830418586731, 39), (0.0, 13), (0.0, 13), (0.0, 23), (0.0, 23), (-13.215296268463135, 45), (-13.215296268463135, 45), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [8, 9], 3: [6, 7], 4: [0, 1]}
Selected Indexes: [4, 2, 8, 6, 1]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.19it/s, est. speed input: 1566.49 toks/s, output: 2.37 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.95it/s, est. speed input: 3357.48 toks/s, output: 25.67 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.20it/s, est. speed input: 4477.23 toks/s, output: 71.58 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.44it/s, est. speed input: 4477.23 toks/s, output: 71.58 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.4647785238921642 sec
Added Probs: [(-1.879570484161377, 24), (-1.879570484161377, 24), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 1], 3: [6, 7], 4: [8, 9]}
Selected Indexes: [4, 2, 0, 6, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.17it/s, est. speed input: 1494.57 toks/s, output: 2.34 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  5.17it/s, est. speed input: 5628.90 toks/s, output: 29.20 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.29it/s, est. speed input: 5628.90 toks/s, output: 29.20 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.1765865019988269 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [6, 7], 3: [8, 9], 4: [0, 1]}
Selected Indexes: [4, 2, 6, 8, 0]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of 16 glasses is: 8 glasses at $5 each = 8 x $5 = $40 8 glasses at $3 each = 8 x $3 = $24 Total cost = $40 + $24 = $64 ****** Step 4: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of 16 glasses is: 8 glasses at $5 each = 8 x $5 = $40 8 glasses at $3 each = 8 x $3 = $24 Total cost = $40 + $24 = $64 ****** Step 4: The answer is #### 64. ******', "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Let's calculate the cost of the first 8 glasses (since the 9th glass onwards will be at a discounted price). 8 glasses at $5 each will cost 8 * $5 = $40. ****** Step 2: The next 8 glasses will be at a discounted price of 60% of $5, which is 0.6 * $5 = $3. ****** Step 3: The cost of the next 8 glasses will be 8 * $3 = $24. ****** Step 4: To find the total cost, add the cost of the first 8 glasses and the next 8 glasses: $40 + $24 = $64. ****** Step 5: The answer is #### 64. ******", "<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Let's calculate the cost of the first 8 glasses (since the 9th glass onwards will be at a discounted price). 8 glasses at $5 each will cost 8 * $5 = $40. ****** Step 2: The next 8 glasses will be at a discounted price of 60% of $5, which is 0.6 * $5 = $3. ****** Step 3: The cost of the next 8 glasses will be 8 * $3 = $24. ****** Step 4: To find the total cost, add the cost of the first 8 glasses and the next 8 glasses: $40 + $24 = $64. ****** Step 5: The answer is #### 64. ******", '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The first glass costs $5. ****** Step 2: Every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 3: Kylar wants to buy 16 glasses, so he will need to buy 8 regular glasses (at $5 each) and 8 discounted glasses (at $3 each). ****** Step 4: The total cost of the regular glasses is 8 * $5 = $40. ****** Step 5: The total cost of the discounted glasses is 8 * $3 = $24. ****** Step 6: The total cost of all 16 glasses is $40 + $24 = $64. ****** Step 7: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: The first glass costs $5. ****** Step 2: Every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 3: Kylar wants to buy 16 glasses, so he will need to buy 8 regular glasses (at $5 each) and 8 discounted glasses (at $3 each). ****** Step 4: The total cost of the regular glasses is 8 * $5 = $40. ****** Step 5: The total cost of the discounted glasses is 8 * $3 = $24. ****** Step 6: The total cost of all 16 glasses is $40 + $24 = $64. ****** Step 7: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: One glass costs $5, but every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 2: Kylar wants to buy 16 glasses, so the first 8 glasses will cost $5 each, and the remaining 8 glasses will cost $3 each. ****** Step 3: The total cost of the first 8 glasses is 8 * $5 = $40. ****** Step 4: The total cost of the remaining 8 glasses is 8 * $3 = $24. ****** Step 5: The total amount Kylar needs to pay is the sum of the costs of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: One glass costs $5, but every second glass costs 60% of the price, which is 0.6 * $5 = $3. ****** Step 2: Kylar wants to buy 16 glasses, so the first 8 glasses will cost $5 each, and the remaining 8 glasses will cost $3 each. ****** Step 3: The total cost of the first 8 glasses is 8 * $5 = $40. ****** Step 4: The total cost of the remaining 8 glasses is 8 * $3 = $24. ****** Step 5: The total amount Kylar needs to pay is the sum of the costs of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of the first 8 glasses is 8 x $5 = $40. ****** Step 4: The cost of the remaining 8 glasses is 8 x $3 = $24. ****** Step 5: The total cost is the sum of the cost of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Kylar wants to buy 16 glasses. ****** Step 2: Every second glass costs 60% of $5, which is 0.6 x $5 = $3. ****** Step 3: So, the cost of the first 8 glasses is 8 x $5 = $40. ****** Step 4: The cost of the remaining 8 glasses is 8 x $3 = $24. ****** Step 5: The total cost is the sum of the cost of the first 8 glasses and the remaining 8 glasses, which is $40 + $24 = $64. ****** Step 6: The answer is #### 64. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1227: Logprob(logprob=0.0, rank=1, decoded_token='64')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {22: Logprob(logprob=0.0, rank=1, decoded_token='7')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1227: Logprob(logprob=0.0, rank=1, decoded_token='64')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 12.608617220073938
>> Answer lists: ['64', '64', '64', '64', '64', '64', '64', '64', '64', '64']
>> Original Correct: 64, True
>> Soft SC  Correct: 64, True
>> Golden    Answer: 64
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.22s/it, est. speed input: 936.43 toks/s, output: 195.50 toks/s]Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.22s/it, est. speed input: 936.43 toks/s, output: 195.50 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.220062693930231 sec
Added Probs: [(-0.9481539726257324, 16), (-0.9481539726257324, 16), (-0.9481539726257324, 16), (-1.4481539726257324, 16), (-1.4481539726257324, 16), (-1.4481539726257324, 16), (-2.6000328063964844, 34), (-2.8500328063964844, 34), (-2.8500328063964844, 34), (-4.426449298858643, 40)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5], 1: [6, 7, 8, 9], 2: [], 3: [], 4: []}
Selected Indexes: [0, 6, 1, 2, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.60s/it, est. speed input: 721.67 toks/s, output: 37.46 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.07it/s, est. speed input: 3561.04 toks/s, output: 185.48 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.6391522330231965 sec
Added Probs: [(-1.778402328491211, 30), (-1.778402328491211, 30), (0.0, 31), (0.0, 31), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30), (-1.778402328491211, 30)]
Cluster Indices: {0: [0, 1, 4, 5, 6, 7, 8, 9], 1: [2, 3], 2: [], 3: [], 4: []}
Selected Indexes: [0, 2, 1, 4, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.53s/it, est. speed input: 788.95 toks/s, output: 35.38 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  3.11it/s, est. speed input: 3697.95 toks/s, output: 182.78 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.6199900140054524 sec
Added Probs: [(0.0, 30), (0.0, 30), (-3.795611411333084, 27), (-6.079780161380768, 27), (0.0, 30), (0.0, 30), (0.0, 30), (0.0, 30), (0.0, 30), (0.0, 30)]
Cluster Indices: {0: [0, 1, 4, 5, 6, 7, 8, 9], 1: [3], 2: [2], 3: [], 4: []}
Selected Indexes: [0, 3, 2, 1, 4]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.47s/it, est. speed input: 829.15 toks/s, output: 32.73 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  2.81it/s, est. speed input: 2774.61 toks/s, output: 121.70 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.80it/s, est. speed input: 3425.12 toks/s, output: 159.79 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (3) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 1.7946811680449173 sec
Added Probs: [(-0.9848555326461792, 24), (-0.9848555326461792, 24), (-2.015432357788086, 35), (-2.015432357788086, 35), (-1.9014905095100403, 35), (-5.40149050951004, 36), (-0.9848555326461792, 24), (-0.9848555326461792, 24), (-0.9848555326461792, 24), (-0.9848555326461792, 24)]
Cluster Indices: {0: [4, 5], 1: [0, 1, 6, 7, 8, 9], 2: [2, 3], 3: [], 4: []}
Selected Indexes: [4, 0, 2, 5, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.09s/it, est. speed input: 1162.76 toks/s, output: 18.38 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  4.26it/s, est. speed input: 4210.49 toks/s, output: 75.28 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.18it/s, est. speed input: 5268.62 toks/s, output: 98.68 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.2072115150513127 sec
Added Probs: [(-2.87969708442688, 10), (-4.12969708442688, 14), (0.0, 13), (0.0, 13), (0.0, 14), (0.0, 14), (-1.2596452236175537, 10), (-1.2596452236175537, 10), (-1.2596452236175537, 10), (-1.2596452236175537, 10)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 6, 7, 8, 9], 3: [1], 4: []}
Selected Indexes: [4, 2, 0, 1, 5]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\n\nStep 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Seattle has 20 sheep. ****** Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ****** Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ****** Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ****** Step 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Seattle has 20 sheep. ****** Step 2: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ****** Step 3: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ****** Step 4: In total, they have 20 + 80 + 160 = 260 sheep. ****** Step 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\r\n\r\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\r\n\r\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\r\n\r\nStep 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\r\n\r\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\r\n\r\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260. ******\r\n\r\nStep 5: The answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattl/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
e has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Charleston has 4 times as many sheep as Seattle, so Charleston has 4 * 20 = 80 sheep. ******\n\nStep 2: Toulouse has twice as many sheep as Charleston, so Toulouse has 2 * 80 = 160 sheep. ******\n\nStep 3: Seattle has 20 sheep, Charleston has 80 sheep, and Toulouse has 160 sheep. ******\n\nStep 4: To find the total number of sheep, add the number of sheep each has: 20 + 80 + 160 = 260 sheep. ******\n\nThe answer is #### 260. ******']
Answer Probs: [[{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.575939416885376, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {8468: Logprob(logprob=-0.825939416885376, rank=2, decoded_token='Step'), 791: Logprob(logprob=-0.575939416885376, rank=1, decoded_token='The')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=0.0, rank=1, decoded_token='\r\n\r\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{881: Logprob(logprob=0.0, rank=1, decoded_token='\r\n\r\n')}, {8468: Logprob(logprob=0.0, rank=1, decoded_token='Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {20: Logprob(logprob=0.0, rank=1, decoded_token='5')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{271: Logprob(logprob=0.0, rank=1, decoded_token='\n\n')}, {791: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {11387: Logprob(logprob=0.0, rank=1, decoded_token='260')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}]]
>> Processing time: 7.630067690974101
>> Answer lists: ['260', '260', '260', '260', '260', '260', '260', '260', '260', '260']
>> Original Correct: 260, True
>> Soft SC  Correct: 260, True
>> Golden    Answer: 260
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.45it/s, est. speed input: 1685.85 toks/s, output: 273.73 toks/s]Processed prompts: 100%|██████████| 1/1 [00:00<00:00,  1.45it/s, est. speed input: 1685.85 toks/s, output: 273.73 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 0.6936102310428396 sec
Added Probs: [(-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-0.2014133334159851, 19), (-3.707822322845459, 18)]
Cluster Indices: {0: [0, 1, 2, 3, 4, 5, 6, 7, 8], 1: [9], 2: [], 3: [], 4: []}
Selected Indexes: [0, 9, 1, 2, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:07,  1.78s/it, est. speed input: 662.89 toks/s, output: 37.57 toks/s]Processed prompts:  40%|████      | 2/5 [00:02<00:02,  1.10it/s, est. speed input: 1137.64 toks/s, output: 73.60 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.40it/s, est. speed input: 2844.55 toks/s, output: 197.68 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/base.py:1473: ConvergenceWarning: Number of distinct clusters (4) found smaller than n_clusters (5). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
Generation job: 2.0910189719870687 sec
Added Probs: [(-14.20136097073555, 39), (-16.760039508342743, 47), (-17.976228535175323, 36), (-18.14704978466034, 31), (-14.20136097073555, 39), (-16.760039508342743, 47), (-14.20136097073555, 39), (-16.760039508342743, 47), (-14.20136097073555, 39), (-16.760039508342743, 47)]
Cluster Indices: {0: [1, 5, 7, 9], 1: [0, 4, 6, 8], 2: [3], 3: [2], 4: []}
Selected Indexes: [1, 0, 3, 2, 5]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.27s/it, est. speed input: 956.15 toks/s, output: 26.01 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.66it/s, est. speed input: 1732.78 toks/s, output: 52.66 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.16it/s, est. speed input: 2257.39 toks/s, output: 92.46 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.31it/s, est. speed input: 2825.78 toks/s, output: 129.89 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.174784124013968 sec
Added Probs: [(-11.998238280415535, 30), (-15.394706681370735, 51), (-7.623575448989868, 22), (-13.072678819298744, 19), (-1.1606130301952362, 16), (-3.410612940788269, 17), (-10.24505540728569, 22), (-10.762484952807426, 23), (-11.998238280415535, 30), (-15.394706681370735, 51)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [1, 9], 3: [2, 3], 4: [0, 8]}
Selected Indexes: [4, 6, 1, 2, 0]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.42s/it, est. speed input: 864.94 toks/s, output: 28.85 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.54it/s, est. speed input: 1613.02 toks/s, output: 60.76 toks/s]Processed prompts:  80%|████████  | 4/5 [00:01<00:00,  3.16it/s, est. speed input: 2827.66 toks/s, output: 114.94 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  2.75it/s, est. speed input: 3443.54 toks/s, output: 148.11 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.827729998040013 sec
Added Probs: [(-9.330696523189545, 19), (-19.00115144252777, 22), (-2.768475353717804, 26), (-6.768475353717804, 26), (-12.852477610111237, 23), (-15.741808235645294, 35), (-3.1562888622283936, 26), (-7.1562888622283936, 26), (-17.851562798023224, 29), (-31.528457939624786, 37)]
Cluster Indices: {0: [4, 5], 1: [2, 3], 2: [0, 1], 3: [6, 7], 4: [8, 9]}
Selected Indexes: [5, 2, 0, 6, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:05,  1.46s/it, est. speed input: 852.88 toks/s, output: 30.75 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.46it/s, est. speed input: 1602.11 toks/s, output: 62.48 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.38it/s, est. speed input: 2406.21 toks/s, output: 115.16 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.91it/s, est. speed input: 2775.71 toks/s, output: 142.93 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.17it/s, est. speed input: 2775.71 toks/s, output: 142.93 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.3146586479851976 sec
Added Probs: [(-22.251409590244293, 27), (-29.186080992221832, 28), (-36.01693630218506, 29), (-39.60538938641548, 27), (-8.082794025540352, 23), (-15.76187014579773, 22), (-36.98085129261017, 29), (-58.97597387433052, 55), (-26.987846232950687, 41), (-28.5769035294652, 48)]
Cluster Indices: {0: [4, 5], 1: [2, 6, 7], 2: [8, 9], 3: [0, 1], 4: [3]}
Selected Indexes: [4, 6, 9, 0, 3]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:06,  1.63s/it, est. speed input: 779.13 toks/s, output: 33.71 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.36it/s, est. speed input: 1476.26 toks/s, output: 64.91 toks/s]Processed prompts:  60%|██████    | 3/5 [00:01<00:00,  2.11it/s, est. speed input: 2052.43 toks/s, output: 99.28 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.43it/s, est. speed input: 2341.53 toks/s, output: 124.28 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.90it/s, est. speed input: 2675.86 toks/s, output: 156.63 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.04it/s, est. speed input: 2675.86 toks/s, output: 156.63 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.457157416967675 sec
Added Probs: [(-26.258243769407272, 27), (-33.85634592175484, 28), (-8.531932085752487, 32), (-25.991460040211678, 26), (-1.5115742683410645, 38), (-1.5115742683410645, 38), (-15.503243923187256, 59), (-17.67183816432953, 48), (-27.8835109770298, 37), (-35.63118204474449, 50)]
Cluster Indices: {0: [4, 5], 1: [8, 9], 2: [0, 1], 3: [2, 3], 4: [6, 7]}
Selected Indexes: [4, 9, 0, 2, 6]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:01<00:04,  1.24s/it, est. speed input: 1084.42 toks/s, output: 20.99 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:02,  1.49it/s, est. speed input: 1744.34 toks/s, output: 47.55 toks/s]Processed prompts:  60%|██████    | 3/5 [00:02<00:01,  1.49it/s, est. speed input: 1815.39 toks/s, output: 72.21 toks/s]Processed prompts:  80%|████████  | 4/5 [00:02<00:00,  2.13it/s, est. speed input: 2292.56 toks/s, output: 101.96 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.05it/s, est. speed input: 2761.69 toks/s, output: 137.90 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.455980041064322 sec
Added Probs: [(-49.73499137163162, 40), (-58.43362212181091, 58), (0.0, 13), (0.0, 13), (-13.816883742809296, 23), (-24.81145343184471, 23), (-28.904458805918694, 38), (-50.09462910890579, 48), (-20.31282451748848, 54), (-40.42322638630867, 27)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [8, 9], 3: [2, 3], 4: [0, 1]}
Selected Indexes: [4, 6, 8, 2, 1]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.09it/s, est. speed input: 1474.14 toks/s, output: 2.17 toks/s]Processed prompts:  40%|████      | 2/5 [00:01<00:01,  1.74it/s, est. speed input: 2138.27 toks/s, output: 22.36 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.50it/s, est. speed input: 3092.32 toks/s, output: 74.02 toks/s]Processed prompts: 100%|██████████| 5/5 [00:02<00:00,  2.23it/s, est. speed input: 3092.32 toks/s, output: 74.02 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 2.2551198760047555 sec
Added Probs: [(0.0, 13), (0.0, 13), (-47.83636021614075, 34), (-54.488656520843506, 52), (0.0, 13), (0.0, 13), (0.0, 1), (0.0, 1), (0.0, 13), (0.0, 13)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [0, 1], 3: [2, 3], 4: [8, 9]}
Selected Indexes: [4, 6, 0, 3, 8]
Processed prompts:   0%|          | 0/5 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:  20%|██        | 1/5 [00:00<00:03,  1.08it/s, est. speed input: 1589.89 toks/s, output: 2.16 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.90it/s, est. speed input: 5684.97 toks/s, output: 27.51 toks/s]Processed prompts: 100%|██████████| 5/5 [00:01<00:00,  4.04it/s, est. speed input: 5684.97 toks/s, output: 27.51 toks/s]
/data2/jeongseokoh/miniconda3/envs/myenv/lib/python3.9/site-packages/sklearn/metrics/pairwise.py:2361: DataConversionWarning: Data was converted to boolean for metric jaccard
  warnings.warn(msg, DataConversionWarning)
Generation job: 1.24884713802021 sec
Added Probs: [(0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (0.0, 1), (-2.2673614025115967, 13), (-2.2673614025115967, 13), (0.0, 1), (0.0, 1)]
Cluster Indices: {0: [4, 5], 1: [6, 7], 2: [2, 3], 3: [8, 9], 4: [0, 1]}
Selected Indexes: [4, 6, 2, 8, 0]
Found EoS token, Break
completions: ['<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart. To find 40% of 200 GB, we multiply 200 GB by 0.4, which is 80 GB. ****** Step 4: So, she has downloaded 80 GB before the restart. This means she has 200 - 80 = 120 GB left to download. ****** Step 5: Since she has to restart the download from the beginning, she has to start again from 0 GB. ****** Step 6: Now, she has 120 GB left to download, and she can download 2 GB/minute. To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Adding the time it took to download the first 80 GB (40 minutes) and the time it took to download the remaining 120 GB (60 minutes), we get a total time of 40 + 60 = 100 minutes. ****** Step 8: The answer is #### 100. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart. To find 40% of 200 GB, we multiply 200 GB by 0.4, which is 80 GB. ****** Step 4: So, she has downloaded 80 GB before the restart. This means she has 200 - 80 = 120 GB left to download. ****** Step 5: Since she has to restart the download from the beginning, she has to start again from 0 GB. ****** Step 6: Now, she has 120 GB left to download, and she can download 2 GB/minute. To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Adding the time it took to download the first 80 GB (40 minutes) and the time it took to download the remaining 120 GB (60 minutes), we get a total time of 40 + 60 = 100 minutes. ****** Step 8: The answer is #### 100. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She normally downloads 2 GB/minute, so the normal download time would be 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: She has to restart the download from the beginning, so she will have to download 80 GB again. ****** Step 6: This means the total download time will be 100 minutes + 20 minutes (for the restart) + 80 GB / 2 GB/minute = 100 + 20 + 40 = 160 minutes. ****** Step 7: The answer is #### 160. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She normally downloads 2 GB/minute, so the normal download time would be 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: She has to restart the download from the beginning, so she will have to download 80 GB again. ****** Step 6: This means the total download time will be 100 minutes + 20 minutes (for the restart) + 80 GB / 2 GB/minute = 100 + 20 + 40 = 160 minutes. ****** Step 7: The answer is #### 160. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She can download 2 GB/minute, so to find the total time needed, we divide 200 by 2. ****** Step 3: 200 / 2 = 100 minutes. ****** Step 4: But then Windows forces a restart, which takes 20 minutes. ****** Step 5: So, the total time needed is 100 + 20 = 120 minutes. ****** Step 6: But she has to restart the download from the beginning, so she has to download 200 GB again. ****** Step 7: So, the total time needed is 2 * 120 = 240 minutes. ****** Step 8: The answer is #### 240. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla needs to download 200 GB. ****** Step 2: She can download 2 GB/minute, so to find the total time needed, we divide 200 by 2. ****** Step 3: 200 / 2 = 100 minutes. ****** Step 4: But then Windows forces a restart, which takes 20 minutes. ****** Step 5: So, the total time needed is 100 + 20 = 120 minutes. ****** Step 6: But she has to restart the download from the beginning, so she has to download 200 GB again. ****** Step 7: So, the total time needed is 2 * 120 = 240 minutes. ****** Step 8: The answer is #### 240. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She normally downloads 2 GB/minute, so the time it takes to download the file is 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: So, the download is interrupted after 80 GB, and the remaining 120 GB needs to be downloaded again. ****** Step 6: The time it takes to download the remaining 120 GB is 120 GB / 2 GB/minute = 60 minutes. ****** Step 7: But this includes the 20 minutes it takes to install the updates, so the actual download time is 60 minutes - 20 minutes = 40 minutes. ****** Step 8: The total time it takes to download the file is the time it takes to download the first 80 GB plus the time it takes to download the remaining 120 GB: 40 minutes + 20 minutes = 60 minutes. ****** Step 9: The answer is #### 60. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She normally downloads 2 GB/minute, so the time it takes to download the file is 200 GB / 2 GB/minute = 100 minutes. ****** Step 3: But 40% of the way through the download, Windows forces a restart. ****** Step 4: 40% of 200 GB is 0.4 * 200 = 80 GB. ****** Step 5: So, the download is interrupted after 80 GB, and the remaining 120 GB needs to be downloaded again. ****** Step 6: The time it takes to download the remaining 120 GB is 120 GB / 2 GB/minute = 60 minutes. ****** Step 7: But this includes the 20 minutes it takes to install the updates, so the actual download time is 60 minutes - 20 minutes = 40 minutes. ****** Step 8: The total time it takes to download the file is the time it takes to download the first 80 GB plus the time it takes to download the remaining 120 GB: 40 minutes + 20 minutes = 60 minutes. ****** Step 9: The answer is #### 60. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart, which takes 20 minutes. ****** Step 4: So, Carla has to restart the download from the beginning, which means she has to download the entire file again. ****** Step 5: Since she has already downloaded 40% of the file (0.4 * 200 = 80 GB), she only needs to download the remaining 120 GB (200 - 80 = 120). ****** Step 6: To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Since she has already spent 20 minutes restarting the computer, the total time it takes to download the file is 100 minutes (initial download time) + 20 minutes (restart time) + 60 minutes (remaining download time) = 180 minutes. ****** Step 8: The answer is #### 180. ******', '<|start_header_id|>assistant<|end_header_id|>\n\nStep 1: Carla is downloading a 200 GB file. ****** Step 2: She can download 2 GB/minute, so to find the time it would take to download the entire file, we divide 200 GB by 2 GB/minute, which is 100 minutes. ****** Step 3: But then, 40% of the way through the download, Windows forces a restart, which takes 20 minutes. ****** Step 4: So, Carla has to restart the download from the beginning, which means she has to download the entire file again. ****** Step 5: Since she has already downloaded 40% of the file (0.4 * 200 = 80 GB), she only needs to download the remaining 120 GB (200 - 80 = 120). ****** Step 6: To find the time it takes to download the remaining 120 GB, we divide 120 GB by 2 GB/minute, which is 60 minutes. ****** Step 7: Since she has already spent 20 minutes restarting the computer, the total time it takes to download the file is 100 minutes (initial download time) + 20 minutes (restart time) + 60 minutes (remaining download time) = 180 minutes. ****** Step 8: The answer is #### 180. ******']
Answer Probs: [[{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {24: Logprob(logprob=0.0, rank=1, decoded_token='9')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1399: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='60')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{15166: Logprob(logprob=0.0, rank=1, decoded_token=' Step')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {24: Logprob(logprob=0.0, rank=1, decoded_token='9')}, {25: Logprob(logprob=0.0, rank=1, decoded_token=':')}, {578: Logprob(logprob=0.0, rank=1, decoded_token=' The')}, {4320: Logprob(logprob=0.0, rank=1, decoded_token=' answer')}, {374: Logprob(logprob=0.0, rank=1, decoded_token=' is')}, {27370: Logprob(logprob=0.0, rank=1, decoded_token=' ####')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {1399: Logprob(logprob=-0.25192904472351074, rank=1, decoded_token='60')}, {13: Logprob(logprob=0.0, rank=1, decoded_token='.')}, {220: Logprob(logprob=0.0, rank=1, decoded_token=' ')}, {6967: Logprob(logprob=0.0, rank=1, decoded_token='******')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}], [{128009: Logprob(logprob=0.0, rank=1, decoded_token='<|eot_id|>')}]]
>> Processing time: 17.782438682974316
>> Answer lists: ['100', '100', '160', '160', '240', '240', '60', '60', '180', '180']
>> Original Correct: 100, False
>> Soft SC  Correct: 100, False
>> Golden    Answer: 160
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]slurmstepd-n02: error: *** STEP 19802.0 ON n02 CANCELLED AT 2024-08-11T13:29:38 ***
srun: got SIGCONT
slurmstepd-n02: error: *** JOB 19802 ON n02 CANCELLED AT 2024-08-11T13:29:38 ***
srun: forcing job termination
